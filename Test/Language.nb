(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    760096,      19391]
NotebookOptionsPosition[    717721,      18046]
NotebookOutlinePosition[    732596,      18468]
CellTagsIndexPosition[    730841,      18416]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"??", "Theorema`Provers`basicProver"}]], "Input",
 CellChangeTimes->{{3.54001508129615*^9, 3.540015101695332*^9}},
 CellID->647844452],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"The prover that handles the basic language constructs from the \
Theorema language, standard propositional and predicate logic.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.540017696360008*^9},
 CellTags->"Info3540021296-1140785"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"Theorema`Provers`basicProver", "=", 
         RowBox[{"{", 
          RowBox[{"Theorema`Provers`quantifierRules", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"connectives\"\>", ",", "BasicProver`Private`andGoal",
              ",", "BasicProver`Private`andKB", ",", 
             "BasicProver`Private`implGoalMP", ",", 
             "BasicProver`Private`implGoalCP"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"equality\"\>", ",", "BasicProver`Private`andGoal", 
             ",", "BasicProver`Private`andKB", ",", 
             "BasicProver`Private`implGoalMP", ",", 
             "BasicProver`Private`implGoalCP"}], "}"}], 
           ",", "\<\"Basic Prover\"\>"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Provers`basicProver],
  Editable->False]], "Print",
 CellChangeTimes->{3.540017696392115*^9},
 CellTags->"Info3540021296-1140785"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Provers`quantifierRules"}]], "Input",
 CellChangeTimes->{{3.54001508129615*^9, 3.540015101695332*^9}, {
  3.540017714472925*^9, 3.540017719755566*^9}},
 CellID->1214652212],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"The prover that handles quantifiers.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.540017721368156*^9},
 CellTags->"Info3540021321-1140785"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"Theorema`Provers`quantifierRules", "=", 
         RowBox[{"{", 
          RowBox[{
          "BasicProver`Private`forallGoal", ",", 
           "BasicProver`Private`forallKB", ",", 
           "BasicProver`Private`existsGoal", ",", 
           "BasicProver`Private`existsKB", ",", "\<\"Quantifier Rules\"\>"}], 
          "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Provers`quantifierRules],
  Editable->False]], "Print",
 CellChangeTimes->{3.540017721406298*^9},
 CellTags->"Info3540021321-1140785"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Archives", "Section",
 CellChangeTimes->{{3.539352007659601*^9, 3.539352009237624*^9}},
 CellID->1883098586],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$TheoremaArchives"], "Input",
 CellID->969423281],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.539352394628496*^9},
 CellID->1031919030]
}, Open  ]],

Cell["Load testArchive`", "Text",
 CellChangeTimes->{{3.539352052992587*^9, 3.539352058722101*^9}},
 CellID->1127140264],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.539352067042282*^9, 3.539352090375868*^9}},
 CellID->1272349391],

Cell["\<\
{{{\"ID:2120996291\", \"Source:Theorema`Knowledge`testArchive`\"}, 
  Theorema`Language`EqualDef$TM[Theorema`Knowledge`testArchive`f$TM[
    Theorema`Knowledge`testArchive`private`a$TM], 
   Theorema`Knowledge`testArchive`private`p$TM[
    Theorema`Knowledge`testArchive`private`a$TM, 
    Theorema`Knowledge`testArchive`private`a$TM]], \"(1)\"}}\
\>", "Output",
 CellChangeTimes->{{3.539352078546851*^9, 3.539352091231423*^9}, 
   3.539352415631351*^9},
 CellID->1188056829]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input",
 CellChangeTimes->{{3.539352113702285*^9, 3.539352115554465*^9}},
 CellID->1112831638],

Cell[BoxData["\<\"Global`\"\>"], "Output",
 CellChangeTimes->{3.539352116324645*^9, 3.539352425761391*^9},
 CellID->192561348]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.539352118151823*^9, 3.539352120390015*^9}},
 CellID->1960607375],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theorema`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"WebServices`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.539352121139284*^9, 3.539352427997739*^9},
 CellID->359853186]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$TheoremaArchives"], "Input",
 CellChangeTimes->{{3.53935213247189*^9, 3.53935214469518*^9}},
 CellID->2035695864],

Cell[BoxData[
 RowBox[{"{", "\<\"Theorema`Knowledge`testArchive`\"\>", "}"}]], "Output",
 CellChangeTimes->{3.53935214586395*^9, 3.539352430440941*^9},
 CellID->1427296780]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Computation",
 CellChangeTimes->{{3.539410883865958*^9, 3.539410885405504*^9}},
 CellID->1579732474],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539612172221011*^9},
 CellID->1787457556],

Cell[BoxData[
 FormBox["2", TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.539611784152624*^9, 3.539611893903916*^9, 
  3.539612172256229*^9},
 CellID->806071651]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "Theorema`Computation`Knowledge`testArchive`private`a", 
  "]"}]], "Computation",
 CellChangeTimes->{{3.53932709087818*^9, 3.539327102000244*^9}, 
   3.539329110755479*^9, 3.539329367113385*^9, 3.539352522604089*^9},
 CellID->194579654],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\"\<\>\""}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\"\<\>\""},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539352527778805*^9},
 CellID->1015121031],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "[", "a", "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->1486267798]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "Theorema`Computation`Knowledge`testArchive`private`a", 
  "]"}]], "Computation",
 CellChangeTimes->{{3.53932709087818*^9, 3.539327102000244*^9}, 
   3.539327211429327*^9, 3.539329142203097*^9, {3.539329294983635*^9, 
   3.539329315998762*^9}, {3.539329346859734*^9, 3.539329350075794*^9}, 
   3.539352184283494*^9},
 CellID->1211576278],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539352486209107*^9},
 CellID->1501088458],

Cell[BoxData[
 FormBox[
  RowBox[{"p", "[", 
   RowBox[{"a", ",", "a"}], "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->364455147]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input",
 CellChangeTimes->{{3.539352113702285*^9, 3.539352115554465*^9}},
 CellID->937089794],

Cell[BoxData["\<\"Global`\"\>"], "Output",
 CellChangeTimes->{3.539352116324645*^9, 3.539352425761391*^9, 
  3.539352501322549*^9},
 CellID->1249695720]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.539352118151823*^9, 3.539352120390015*^9}},
 CellID->2107183564],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theorema`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"WebServices`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.539352121139284*^9, 3.539352427997739*^9, 
  3.539352504134812*^9},
 CellID->808225961]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Computation",
 CellChangeTimes->{{3.539327235808001*^9, 3.539327236694584*^9}, {
   3.539329414388404*^9, 3.539329418909574*^9}, 3.539352552654328*^9},
 CellID->1828479595],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539352554265392*^9},
 CellID->188800922],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "[", "x", "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->1166427869]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Computation",
 CellChangeTimes->{{3.539352558603655*^9, 3.53935256045598*^9}},
 CellID->2023567208],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539352561188333*^9},
 CellID->184524076],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "[", "3", "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->1084185991]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`testArchive`f$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
   3.53932658085132*^9, 3.539326598123806*^9}, 3.53932701548176*^9, {
   3.539329010743956*^9, 3.539329030755844*^9}},
 CellID->1793037190],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`testArchive`f$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.539352618868*^9},
 CellTags->"Info3539356218-4065218",
 CellID->577700309],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "a", "]"}], "/;", 
          RowBox[{"activeComputationKB", "[", 
           RowBox[{"{", 
            
            RowBox[{"\<\"ID:2120996291\"\>", 
             ",", "\<\"Source:Theorema`Knowledge`testArchive`\"\>"}], "}"}], 
           "]"}]}], ":=", 
         RowBox[{"p", "[", 
          RowBox[{"a", ",", "a"}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`testArchive`f$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.539352618916296*^9},
 CellTags->"Info3539356218-4065218",
 CellID->1169693318]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Language", "Section",
 CellChangeTimes->{{3.537190425061917*^9, 3.537190440789052*^9}},
 CellID->1677594751],

Cell[BoxData[
 UnderscriptBox["\[ForAll]", "a"]], "GlobalDeclaration",
 CellChangeTimes->{{3.535980654706128*^9, 3.535980681963633*^9}},
 CellID->993326560],

Cell[CellGroupData[{

Cell["Definition", "OpenEnvironment",
 CellID->1372089959],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", "a", "]"}], "\[Implies]"}]], "EnvironmentDeclaration",
 CellChangeTimes->{{3.535980720358661*^9, 3.535980733035747*^9}},
 CellID->1326837667],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{
   RowBox[{"P", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"3", "x"}]}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(1)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.537251620630519*^9, 3.537251625140079*^9}},
 CellTags->{
  "ID:1636935908", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
 CellID->1636935908],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", 
    RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "y"}], "]"}], 
    TagBox[
     RowBox[{
     ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
      "\[DoubleLongLeftRightArrow]"}],
     Identity,
     SyntaxForm->"a\[Implies]b"], 
    RowBox[{
     RowBox[{"Q", "[", "x", "]"}], "\[Vee]", 
     RowBox[{"Q", "[", "y", "]"}]}]}], ")"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(10)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535965376725445*^9, 3.535965380252821*^9}, {3.537262982084611*^9, 
  3.53726301165244*^9}, {3.537263405520759*^9, 3.537263421684412*^9}},
 CellTags->{
  "ID:1242901413", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
 CellID->1242901413],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{"z", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(3)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}},
 CellTags->{
  "ID:330716980", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
 CellID->330716980],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", "A"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", "x", "]"}], ":=", 
    RowBox[{"5", "+", "x"}]}], ")"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(4)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966322111476*^9}, {
  3.537263029577858*^9, 3.537263032798383*^9}, {3.53726313081597*^9, 
  3.53726313345381*^9}},
 CellTags->{
  "ID:1346427776", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
 CellID->1346427776],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", 
    RowBox[{"y", "\[Element]", "A"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(5)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}},
 CellTags->{
  "ID:1421485859", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
 CellID->1421485859],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"Q", "[", "x", "]"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(6)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}, {
  3.535968262766251*^9, 3.535968280447299*^9}},
 CellTags->{
  "ID:1874491785", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
 CellID->1874491785],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"Q", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(7)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}, {
  3.535968262766251*^9, 3.535968301137401*^9}, {3.535968350312416*^9, 
  3.535968351793141*^9}},
 CellTags->{
  "ID:1491028062", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
 CellID->1491028062],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", "y", ",", "z"}]], 
  RowBox[{"A", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(8)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535979933529081*^9, 3.535979941041089*^9}},
 CellTags->{
  "ID:822628176", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
 CellID->822628176],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"y", "|", 
      RowBox[{"y", "<", "3"}]}], "}"}]}]], 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(14)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.538974970913893*^9, 3.538975003895845*^9}, {
  3.538975160116351*^9, 3.538975169361469*^9}, {3.538975394512164*^9, 
  3.538975431195559*^9}},
 CellTags->{
  "ID:242022487", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "14"},
 CellID->242022487],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "\[Element]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], "|", 
      RowBox[{"y", "<", "3"}]}], "}"}]}]], 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(18)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.538974970913893*^9, 3.538975003895845*^9}, {
  3.538975160116351*^9, 3.538975169361469*^9}, {3.538975394512164*^9, 
  3.538975431195559*^9}, {3.539671517233763*^9, 3.539671547891856*^9}},
 CellTags->{
  "ID:1467107305", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "18"},
 CellID->1467107305],

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"1", ",", "2", ",", "3"}], 
  "\[RightAngleBracket]"}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(15)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.538976094727467*^9, 3.538976099958385*^9}},
 CellTags->{
  "ID:2033225528", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "15"},
 CellID->2033225528],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "|", 
    RowBox[{"x", ">", "p"}]}], 
   "\[RightAngleBracket]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(16)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.538976461699686*^9, 3.538976464058616*^9}},
 CellTags->{
  "ID:1045911681", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "16"},
 CellID->1045911681],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   UnderscriptBox["\[ForAll]", GridBox[{
      {"x"},
      {
       RowBox[{"y", "\[Element]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}
     }]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(19)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.538976461699686*^9, 3.538976464058616*^9}, {
  3.539674434152941*^9, 3.539674449769089*^9}, {3.539674491204756*^9, 
  3.539674503493227*^9}, {3.539676487817147*^9, 3.539676503557689*^9}},
 CellTags->{
  "ID:1399274849", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "19"},
 CellID->1399274849],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "y"}], "|", "z"}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(17)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.539002180243253*^9, 3.539002181902028*^9}},
 CellTags->{
  "ID:338555625", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "17"},
 CellID->338555625],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->338734751]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->862514851],

Cell[CellGroupData[{

Cell["Proof of (1): $Failed", "OpenProof",
 CellTags->
  "Proof|ID:1636935908|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
 CellID->1466604615],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Show proof\"\>",
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Provers`Common`Private`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     "ID" -> "Initial", {{
       "ID:1636935908", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
            Theorema`Knowledge`n$TM, 1]], True, 
          Theorema`Language`Equal$TM[
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`Times$TM[3, 
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
       "(1)"}, {{{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
        "(10)"}}], 
     Theorema`Provers`Common`Private`PRFSIT$[
     "ID" -> "Initial", {{
       "ID:1636935908", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
            Theorema`Knowledge`n$TM, 1]], True, 
          Theorema`Language`Equal$TM[
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`Times$TM[3, 
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
       "(1)"}, {{{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], "(10)"}},
       "pending", "InferenceRules" -> Hold[Theorema`Provers`basicProver], 
      "Strategy" -> Theorema`Provers`applyOnce]]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->1243407830],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = True}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(1)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(1)", "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(10)\"\>", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{"(10)"}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected prover\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected prover\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "Hold", "[", "Theorema`Provers`basicProver", "]"}], ",", 
                    "Theorema`Provers`applyOnce"}], "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Selected prover", "PIContent"], 
                  Style[{
                    Hold[Theorema`Provers`basicProver], 
                    Theorema`Provers`applyOnce}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setProveEnv[{{
                 "ID:1636935908", 
                  "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, 
                 Theorema`Language`Forall$TM[
                  Theorema`Language`RNG$[
                   Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
                  Theorema`Language`Implies$TM[
                   Theorema`Knowledge`S$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
                   Theorema`Language`Forall$TM[
                    Theorema`Language`RNG$[
                    Theorema`Language`STEPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
                    Theorema`Knowledge`n$TM, 1]], True, 
                    Theorema`Language`Equal$TM[
                    Theorema`Knowledge`P$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
                    Theorema`Language`Times$TM[3, 
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
                 "(1)"}, {{{
                  "ID:1242901413", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
                 "Exists", False}, {"For", False}, {"Forall", False}, {
                 "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
                 "Implies", False}, {"Intersection", False}, {
                 "Less", False}, {"LessEqual", False}, {"Module", False}, {
                 "Not", False}, {"Or", False}, {"Plus", False}, {
                 "SequenceOf", False}, {"SetEqual", False}, {
                 "Switch", False}, {"Times", False}, {"Union", False}, {
                 "Which", False}, {"While", False}}, 
                Hold[Theorema`Provers`basicProver], 
                Theorema`Provers`applyOnce, {{
                 BasicProver`Private`andGoal, False}, {
                 BasicProver`Private`andKB, False}, {
                 BasicProver`Private`existsGoal, False}, {
                 BasicProver`Private`existsKB, False}, {
                 BasicProver`Private`forallGoal, False}, {
                 BasicProver`Private`forallKB, False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(1)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{"(10)"}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       OpenerView[{
         Style["Selected prover", "PIContent"], 
         Style[{
           Hold[Theorema`Provers`basicProver], Theorema`Provers`applyOnce}, 
          "PIContent"]}], 
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setProveEnv[{{
          "ID:1636935908", 
           "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SIMPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
           Theorema`Language`Implies$TM[
            Theorema`Knowledge`S$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
            Theorema`Language`Forall$TM[
             Theorema`Language`RNG$[
              Theorema`Language`STEPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
               Theorema`Knowledge`n$TM, 1]], True, 
             Theorema`Language`Equal$TM[
              Theorema`Knowledge`P$TM[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
              Theorema`Language`Times$TM[3, 
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
          "(1)"}, {{{
           "ID:1242901413", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
          "Exists", False}, {"For", False}, {"Forall", False}, {
          "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
          "Implies", False}, {"Intersection", False}, {"Less", False}, {
          "LessEqual", False}, {"Module", False}, {"Not", False}, {
          "Or", False}, {"Plus", False}, {"SequenceOf", False}, {
          "SetEqual", False}, {"Switch", False}, {"Times", False}, {
          "Union", False}, {"Which", False}, {"While", False}}, 
         Hold[Theorema`Provers`basicProver], 
         Theorema`Provers`applyOnce, {{BasicProver`Private`andGoal, False}, {
          BasicProver`Private`andKB, False}, {
          BasicProver`Private`existsGoal, False}, {
          BasicProver`Private`existsKB, False}, {
          BasicProver`Private`forallGoal, False}, {
          BasicProver`Private`forallKB, False}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->531782806]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->693053660]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proof of (10)", "OpenProof",
 CellTags->
  "Proof|ID:1242901413|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
 CellID->977639680],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Show proof\"\>",
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Provers`Common`Private`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     "ID" -> "Initial", {{
       "ID:1242901413", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
            Theorema`Knowledge`n$TM, 1], 
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
            Theorema`Knowledge`n$TM, 1]], True, 
          Theorema`Language`IffDef$TM[
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
           Theorema`Language`Or$TM[
            Theorema`Knowledge`Q$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Knowledge`Q$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
       "(10)"}, {{{
        "ID:330716980", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 1, 
             Theorema`Knowledge`n$TM, 4]], True, 
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], "(3)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], "(1)"}}], 
     Theorema`Provers`Common`Private`PRFSIT$[
     "ID" -> "Initial", {{
       "ID:1242901413", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
            Theorema`Knowledge`n$TM, 1], 
           Theorema`Language`STEPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
            Theorema`Knowledge`n$TM, 1]], True, 
          Theorema`Language`IffDef$TM[
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
           Theorema`Language`Or$TM[
            Theorema`Knowledge`Q$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Knowledge`Q$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
       "(10)"}, {{{
        "ID:330716980", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 1, 
             Theorema`Knowledge`n$TM, 4]], True, 
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], "(3)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
        "(1)"}}, {}, "pending", "InferenceRules" -> 
      Theorema`Provers`Common`Private`inferenceRules[{
        BasicProver`Private`andGoal, BasicProver`Private`andKB, 
         BasicProver`Private`implGoalMP, BasicProver`Private`implGoalCP}]]]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->492857777],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(10)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(10)", "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"\<\"(3)\"\>", ",", "\<\"(1)\"\>"}], "}"}], 
                    "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{"(3)", "(1)"}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setProveEnv[{{
                 "ID:1242901413", 
                  "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, 
                 Theorema`Language`Forall$TM[
                  Theorema`Language`RNG$[
                   Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
                  Theorema`Language`Implies$TM[
                   Theorema`Knowledge`S$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
                   Theorema`Language`Forall$TM[
                    Theorema`Language`RNG$[
                    Theorema`Language`STEPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
                    Theorema`Knowledge`n$TM, 1], 
                    Theorema`Language`STEPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
                    Theorema`Knowledge`n$TM, 1]], True, 
                    Theorema`Language`IffDef$TM[
                    Theorema`Knowledge`P$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
                    Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
                    Theorema`Language`Or$TM[
                    Theorema`Knowledge`Q$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
                    Theorema`Knowledge`Q$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
                 "(10)"}, {{{
                  "ID:1636935908", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}, {{"ID:330716980", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
                 "Exists", False}, {"For", False}, {"Forall", False}, {
                 "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
                 "Implies", False}, {"Intersection", False}, {
                 "Less", False}, {"LessEqual", False}, {"Module", False}, {
                 "Not", False}, {"Or", False}, {"Plus", False}, {
                 "SequenceOf", False}, {"SetEqual", False}, {
                 "Switch", False}, {"Times", False}, {"Union", False}, {
                 "Which", False}, {"While", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(10)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{"(3)", "(1)"}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setProveEnv[{{
          "ID:1242901413", 
           "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SIMPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
           Theorema`Language`Implies$TM[
            Theorema`Knowledge`S$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
            Theorema`Language`Forall$TM[
             Theorema`Language`RNG$[
              Theorema`Language`STEPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
               Theorema`Knowledge`n$TM, 1], 
              Theorema`Language`STEPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
               Theorema`Knowledge`n$TM, 1]], True, 
             Theorema`Language`IffDef$TM[
              Theorema`Knowledge`P$TM[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
               Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
              Theorema`Language`Or$TM[
               Theorema`Knowledge`Q$TM[
                Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
               Theorema`Knowledge`Q$TM[
                Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
          "(10)"}, {{{
           "ID:1636935908", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}, {{
           "ID:330716980", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
          "Exists", False}, {"For", False}, {"Forall", False}, {
          "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
          "Implies", False}, {"Intersection", False}, {"Less", False}, {
          "LessEqual", False}, {"Module", False}, {"Not", False}, {
          "Or", False}, {"Plus", False}, {"SequenceOf", False}, {
          "SetEqual", False}, {"Switch", False}, {"Times", False}, {
          "Union", False}, {"Which", False}, {"While", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->950173719]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->310898544]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theorem", "OpenEnvironment",
 CellID->1494302939],

Cell[BoxData[
 RowBox[{"P", "\[And]", "Q"}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(20)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.540553778633752*^9, 3.540553802716202*^9}},
 CellTags->{
  "ID:806064238", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "20"},
 CellID->806064238],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->459179674]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->438602653],

Cell[CellGroupData[{

Cell["Proof of (20): $Failed", "OpenProof",
 CellTags->
  "Proof|ID:806064238|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb",
 CellID->673042814],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Show proof\"\>",
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Provers`Common`Private`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     "ID" -> "Initial", {{
       "ID:806064238", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`And$TM[
       Theorema`Knowledge`P$TM, Theorema`Knowledge`Q$TM], "(20)"}, {}], 
     Theorema`Common`unexpected[
     Theorema`Provers`Common`Private`propagateProofValues, {
       Theorema`Provers`applyOnce[
        Hold[Theorema`Provers`basicProver]]}], 
     Theorema`Common`unexpected[
     Theorema`Provers`Common`Private`nodeValue, {
      Theorema`Provers`Common`Private`PRFOBJ$, {{
         Theorema`Provers`applyOnce[
          Hold[Theorema`Provers`basicProver]]}}}]]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->298183240],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(20)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(20)", "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected prover\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Selected prover\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "Hold", "[", "Theorema`Provers`basicProver", "]"}], ",", 
                    "Theorema`Provers`applyOnce"}], "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Selected prover", "PIContent"], 
                  Style[{
                    Hold[Theorema`Provers`basicProver], 
                    Theorema`Provers`applyOnce}, "PIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setProveEnv[{{
                 "ID:806064238", 
                  "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, 
                 Theorema`Language`And$TM[
                 Theorema`Knowledge`P$TM, Theorema`Knowledge`Q$TM], 
                 "(20)"}, {}, {{"And", False}, {"Do", False}, {
                 "Equal", False}, {"Exists", False}, {"For", False}, {
                 "Forall", False}, {"Greater", False}, {
                 "GreaterEqual", False}, {"Iff", False}, {"Implies", False}, {
                 "Intersection", False}, {"Less", False}, {
                 "LessEqual", False}, {"Module", False}, {"Not", False}, {
                 "Or", False}, {"Plus", False}, {"SequenceOf", False}, {
                 "SetEqual", False}, {"Switch", False}, {"Times", False}, {
                 "Union", False}, {"Which", False}, {"While", False}}, 
                Hold[Theorema`Provers`basicProver], 
                Theorema`Provers`applyOnce, {}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(20)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       OpenerView[{
         Style["Selected prover", "PIContent"], 
         Style[{
           Hold[Theorema`Provers`basicProver], Theorema`Provers`applyOnce}, 
          "PIContent"]}], 
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setProveEnv[{{
          "ID:806064238", 
           "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
          Theorema`Language`And$TM[
          Theorema`Knowledge`P$TM, Theorema`Knowledge`Q$TM], "(20)"}, {}, {{
          "And", False}, {"Do", False}, {"Equal", False}, {"Exists", False}, {
          "For", False}, {"Forall", False}, {"Greater", False}, {
          "GreaterEqual", False}, {"Iff", False}, {"Implies", False}, {
          "Intersection", False}, {"Less", False}, {"LessEqual", False}, {
          "Module", False}, {"Not", False}, {"Or", False}, {"Plus", False}, {
          "SequenceOf", False}, {"SetEqual", False}, {"Switch", False}, {
          "Times", False}, {"Union", False}, {"Which", False}, {
          "While", False}}, 
         Hold[Theorema`Provers`basicProver], Theorema`Provers`applyOnce, {}], 
        ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->632965013]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->726662969]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Theorema`Common`T*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.540555588922282*^9, 3.540555606466553*^9}},
 CellID->300238506],

Cell[BoxData[
 RowBox[{"{", "\<\"Theorema`Common`TheoremaForm\"\>", "}"}]], "Output",
 CellChangeTimes->{3.540555607416815*^9},
 CellID->1046473869]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$TMAproofObject"], "Input",
 CellChangeTimes->{{3.539687386497976*^9, 3.539687397682375*^9}},
 CellID->1930239317],

Cell[BoxData[
 RowBox[{"Theorema`Provers`Common`Private`PRFOBJ$", "[", 
  RowBox[{
   RowBox[{"Theorema`Provers`Common`Private`PRFINFO$", "[", 
    RowBox[{
     RowBox[{"\<\"ID\"\>", "\[Rule]", "\<\"Initial\"\>"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"ID:806064238\"\>", 
         ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\
\"\>"}], "}"}], ",", 
       RowBox[{"And$TM", "[", 
        RowBox[{"Theorema`Knowledge`P$TM", ",", "Theorema`Knowledge`Q$TM"}], 
        "]"}], ",", "\<\"(20)\"\>"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ",", 
   RowBox[{"Theorema`Common`unexpected", "[", 
    RowBox[{"Theorema`Provers`Common`Private`propagateProofValues", ",", 
     RowBox[{"{", 
      RowBox[{"Theorema`Provers`applyOnce", "[", 
       RowBox[{"Hold", "[", "Theorema`Provers`basicProver", "]"}], "]"}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Theorema`Common`unexpected", "[", 
    RowBox[{"Theorema`Provers`Common`Private`nodeValue", ",", 
     RowBox[{"{", 
      RowBox[{"Theorema`Provers`Common`Private`PRFOBJ$", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Theorema`Provers`applyOnce", "[", 
          RowBox[{"Hold", "[", "Theorema`Provers`basicProver", "]"}], "]"}], 
         "}"}], "}"}]}], "}"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.539687398899656*^9, 3.540553932237504*^9},
 CellID->1227301781]
}, Open  ]],

Cell[BoxData["\"\<testArchive`\>\""], "IncludeArchive",
 CellChangeTimes->{{3.539063132182634*^9, 3.539063139452745*^9}},
 CellID->1555117900],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input",
 CellChangeTimes->{{3.539076195941901*^9, 3.539076199270048*^9}},
 CellID->979690572],

Cell[BoxData["\<\"Global`\"\>"], "Output",
 CellChangeTimes->{{3.53907620024391*^9, 3.539076213641456*^9}, 
   3.539328941056453*^9},
 CellID->1312949183]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`inArchive", "[", "]"}]], "Input",
 CellChangeTimes->{{3.539076305689133*^9, 3.539076344569651*^9}},
 CellID->422956012],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.539076345314415*^9, 3.539328944794666*^9},
 CellID->585837779]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Theorema`Common`$tmaEnv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.538975177844521*^9, 3.538975209992588*^9}, 
   3.538975382927137*^9, {3.538975444213066*^9, 3.538975446718836*^9}, {
   3.539084816415892*^9, 3.539084816561929*^9}, {3.539681608835543*^9, 
   3.539681623396184*^9}},
 CellID->151579708],

Cell["\<\
{\"ID:1399274849\", 
 \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}\
\>", "Output",
 CellChangeTimes->{{3.538975192969279*^9, 3.538975210707204*^9}, {
   3.538975371087188*^9, 3.538975383687671*^9}, {3.538975435806896*^9, 
   3.538975447457179*^9}, 3.538976197243833*^9, 3.539063059319647*^9, 
   3.539065943087526*^9, {3.539084817295066*^9, 3.539084863040887*^9}, 
   3.539326488608005*^9, 3.539327358076433*^9, 3.539328932265517*^9, 
   3.539352704513742*^9, 3.539671556577681*^9, 3.539676516102988*^9, 
   3.539676559440663*^9, 3.539679277507469*^9, {3.539681604633645*^9, 
   3.539681624303635*^9}},
 CellID->214870571]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Context", "[", "TheoremaForm", "]"}]], "Input",
 CellChangeTimes->{{3.539076070987141*^9, 3.539076078117817*^9}, {
  3.539353585091721*^9, 3.539353586402421*^9}},
 CellID->545350332],

Cell[BoxData["\<\"System`\"\>"], "Output",
 CellChangeTimes->{3.539076078600069*^9, 3.539353587548159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.539674002429107*^9, 3.539674154616235*^9}},
 CellID->1077746153],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", "[", "1", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "3", "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.539674058155977*^9, 3.539674086171219*^9}, {
  3.53967413439775*^9, 3.539674156736304*^9}},
 CellID->2095499821]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.539674180452317*^9, 3.539674207198619*^9}},
 CellID->2043383851],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.539674196496605*^9, 3.539674207873071*^9}},
 CellID->1915901012]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", 
  "Theorema`Computation`Language`Private`buiActComputation"}]], "Input",
 CellChangeTimes->{{3.53967178406569*^9, 3.539671800970432*^9}, {
  3.539671869037175*^9, 3.5396719050459*^9}},
 CellID->127684017],

Cell[CellGroupData[{

Cell["Theorema`Computation`Language`Private`buiActComputation", "Print", "PrintUsage",
 CellChangeTimes->{3.539671909429106*^9},
 CellTags->"Info3539675509-8586739",
 CellID->2056264234],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"And\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Do\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Equal\"\>", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Exists\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"For\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Forall\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Greater\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"GreaterEqual\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Iff\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Implies\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Intersection\"\>", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Less\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"LessEqual\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Module\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Not\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Or\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Plus\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"SequenceOf\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"SetEqual\"\>", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Switch\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Times\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Union\"\>", "]"}], "=", "False"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"Which\"\>", "]"}], "=", "True"}]},
       {" "},
       {
        RowBox[{
         RowBox[{
         "Theorema`Computation`Language`Private`buiActComputation", 
          "[", "\<\"While\"\>", "]"}], "=", "True"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Language`Private`buiActComputation],
  Editable->False]], "Print",
 CellChangeTimes->{3.53967190943691*^9},
 CellTags->"Info3539675509-8586739",
 CellID->1535545091]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["%"], "Input",
 CellChangeTimes->{{3.539612144871331*^9, 3.539612157129693*^9}},
 CellID->485415444],

Cell[BoxData[
 RowBox[{"Theorema`Computation`Language`Set$TM", "[", 
  RowBox[{"1", ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{3.539612146952765*^9},
 CellID->956057954]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%13", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.539611980766411*^9, 3.539612007396048*^9}},
 CellID->2127381523],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"FormBox", "[", 
    RowBox[{
     RowBox[{"RowBox", "[", 
      RowBox[{"List", "[", 
       RowBox[{"\"\<{\>\"", ",", 
        RowBox[{"RowBox", "[", 
         RowBox[{"List", "[", 
          RowBox[{"\"\<1\>\"", ",", "\"\<,\>\"", ",", "\"\<2\>\""}], "]"}], 
         "]"}], ",", "\"\<}\>\""}], "]"}], "]"}], ",", "TheoremaForm"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.539611981758382*^9, 3.539612008024047*^9}},
 CellID->1121293163]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "=", "1"}]], "Computation",
 CellChangeTimes->{{3.53935464032481*^9, 3.539354642183149*^9}, {
  3.539354690954158*^9, 3.539354691228282*^9}},
 CellID->890589206],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1231347415", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}, {{"ID:572095962", "Source:Theorema`Knowledge`WW1`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1231347415", "Source:Theorema`Knowledge`testArchive`"}, 
           True}, {{"ID:572095962", "Source:Theorema`Knowledge`WW1`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539610961282539*^9},
 CellID->57797172],

Cell[BoxData[
 FormBox[
  RowBox[{"1", "=", "1"}], TheoremaForm]], "ComputationResult",
 CellID->730766664],

Cell[BoxData[
 FormBox[
  RowBox[{"1", "=", "1"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.539610961385619*^9},
 CellID->569418601]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}]], "Input",
 CellID->1626848086],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$tmaEnv"], "Input",
 CellChangeTimes->{{3.538975177844521*^9, 3.538975209992588*^9}, 
   3.538975382927137*^9, {3.538975444213066*^9, 3.538975446718836*^9}, {
   3.538976066213241*^9, 3.53897606959274*^9}},
 CellID->121474739],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ID:242022487\"\>", 
      ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\>\
"}], "}"}], ",", 
    RowBox[{
     UnderscriptBox["\[ForAll]", GridBox[{
        {
         RowBox[{
          StyleBox["x", "ExpressionVariable"], "\[Element]", 
          RowBox[{"{", 
           RowBox[{
            StyleBox["y", "ExpressionVariable"], 
            UnderscriptBox["|", 
             StyleBox["y", "ExpressionVariable"]], 
            RowBox[{
             StyleBox["y", "ExpressionVariable"], "<", "3"}]}], "}"}]}]}
       }]], 
     RowBox[{"Set", "[", 
      RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], ",", "\<\"(14)\"\>"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.538976070242191*^9, 3.538976203110607*^9, 3.538976487324505*^9, 
   3.538999538439775*^9, 3.539002017557605*^9, 3.539002191342044*^9, {
   3.539005196182898*^9, 3.539005236895193*^9}, 3.539062996433894*^9, 
   3.539065895935968*^9, 3.53906592972769*^9, 3.539068700164458*^9},
 CellID->463038785]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Context", "[", "TheoremaForm", "]"}]], "Input",
 CellChangeTimes->{{3.539354476078573*^9, 3.539354482565109*^9}},
 CellID->464939686],

Cell[BoxData["\<\"System`\"\>"], "Output",
 CellChangeTimes->{3.539354483182876*^9},
 CellID->1904542096]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"$BoxForms", ",", "TheoremaForm"}], "]"}]], "Input",
 CellChangeTimes->{{3.539327159074949*^9, 3.53932718771622*^9}, 
   3.539354488866522*^9},
 CellID->1367627067],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"StandardForm", ",", "TraditionalForm", ",", "TheoremaForm"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.539327188312279*^9, 3.53935449500436*^9},
 CellID->1922865856]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$tmaEnv"], "Input",
 CellID->1808356990],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:2120996291\"\>", ",", "\<\"Source:testArchive`\"\>"}], 
      "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"f", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], ":=", 
       RowBox[{"p", "[", 
        RowBox[{
         StyleBox["a", "ExpressionVariable"], ",", 
         StyleBox["a", "ExpressionVariable"]}], "]"}]}]}], 
     ",", "\<\"(1)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:2033225528\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}]}]}], 
     ",", "\<\"(15)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:242022487\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "\[Element]", 
             RowBox[{"{", 
              RowBox[{
               StyleBox["y", "ExpressionVariable"], 
               UnderscriptBox["|", 
                StyleBox["y", "ExpressionVariable"]], 
               RowBox[{
                StyleBox["y", "ExpressionVariable"], "<", "3"}]}], "}"}]}]}
          }]], 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], 
     ",", "\<\"(14)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:822628176\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", 
         RowBox[{
          StyleBox["x", "ExpressionVariable"], ",", 
          StyleBox["y", "ExpressionVariable"], ",", 
          StyleBox["z", "ExpressionVariable"]}]], 
        RowBox[{"A", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(8)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1491028062\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{"Q", "[", 
             StyleBox["x", "ExpressionVariable"], "]"}]},
           {
            RowBox[{"Q", "[", 
             StyleBox["y", "ExpressionVariable"], "]"}]},
           {
            RowBox[{"Q", "[", 
             StyleBox["z", "ExpressionVariable"], "]"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(7)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1874491785\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{"Q", "[", 
             StyleBox["x", "ExpressionVariable"], "]"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(6)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1421485859\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]},
           {
            RowBox[{
             StyleBox["y", "ExpressionVariable"], "\[Element]", "A"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(5)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1346427776\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          StyleBox["x", "ExpressionVariable"], "]"}], ":=", 
         RowBox[{"5", "+", 
          StyleBox["x", "ExpressionVariable"]}]}]}]}]}], ",", "\<\"(4)\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:330716980\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["z", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(3)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1242901413\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           StyleBox["x", "ExpressionVariable"], ",", 
           StyleBox["y", "ExpressionVariable"]}], "]"}], 
         TagBox[
          RowBox[{
          ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
           "\[DoubleLongLeftRightArrow]"}],
          Identity,
          SyntaxForm->"a\[Implies]b"], 
         RowBox[{
          RowBox[{"Q", "[", 
           StyleBox["x", "ExpressionVariable"], "]"}], "||", 
          RowBox[{"Q", "[", 
           StyleBox["y", "ExpressionVariable"], "]"}]}]}]}]}]}], 
     ",", "\<\"(10)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1636935908\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          StyleBox["x", "ExpressionVariable"], "]"}], "=", 
         RowBox[{"3", " ", 
          StyleBox["x", "ExpressionVariable"]}]}]}]}]}], ",", "\<\"(1)\"\>"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.539063236285888*^9},
 CellID->675168849]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.539063342869858*^9, 3.53906334612699*^9}},
 CellID->1574073290],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theorema`Knowledge`testArchive`\"\>", ",", "\<\"Theorema`\"\>",
    ",", "\<\"PacletManager`\"\>", ",", "\<\"WebServices`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.539063347250875*^9, {3.539063760274717*^9, 3.539063774531162*^9}, 
   3.539065890147186*^9, 3.539066027089812*^9, 3.53932897119212*^9},
 CellID->1282895222]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.539063276625323*^9, 3.539063280984807*^9}, {
  3.539066043364149*^9, 3.539066062149953*^9}},
 CellID->250611018],

Cell["\<\
{{{\"ID:2120996291\", \"Source:Theorema`Knowledge`testArchive`\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`EqualDef$TM[
    Theorema`Knowledge`testArchive`f$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], 
    Theorema`Knowledge`testArchive`private`p$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM], Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]]], \"(1)\"}}\
\>", "Output",
 CellChangeTimes->{
  3.539063281691945*^9, 3.53906494990499*^9, {3.539066045193542*^9, 
   3.53906606416357*^9}, 3.53932652983655*^9, 3.539328958781429*^9, 
   3.539352726454936*^9},
 CellID->520767582]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Common`makeTuple"}]], "Input",
 CellChangeTimes->{{3.538975249724088*^9, 3.538975256117742*^9}, {
  3.538975298115416*^9, 3.538975299690472*^9}},
 CellID->1141685749],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"makeTuple[t] constructs a tuple from t during the phase of \
parsing an expression.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.538975300465699*^9},
 CellTags->"Info3538978900-6004912",
 CellID->1287175721],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"makeTuple", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"SequenceOf", "|", "SequenceOf"}], ")"}], "[", 
           RowBox[{
            RowBox[{"r", ":", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"RNG$", "|", "RNG$"}], ")"}], "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"STEPRNG$", "|", "STEPRNG$"}], ")"}], "[", "__", 
                "]"}], ".."}], "]"}]}], ",", "c_", ",", "e_"}], "]"}], "]"}], 
         ":=", 
         RowBox[{"TupleOf", "[", 
          RowBox[{"r", ",", "c", ",", "e"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"makeTuple", "[", 
          RowBox[{"s", ":", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"SequenceOf", "|", "SequenceOf"}], ")"}], "[", 
            RowBox[{"r_", ",", "__"}], "]"}]}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{
            RowBox[{"notification", "[", 
             RowBox[{
              RowBox[{"translate", "[", "\<\"tupleOfRange\"\>", "]"}], ",", 
              RowBox[{"DisplayForm", "[", 
               RowBox[{"makeRangeBox", "[", 
                RowBox[{"r", ",", "\<\"StandardForm\"\>"}], "]"}], "]"}]}], 
             "]"}], ";", "$Failed"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"makeTuple", "[", "args___", "]"}], ":=", 
         RowBox[{"unexpected", "[", 
          RowBox[{"makeTuple", ",", 
           RowBox[{"{", "args", "}"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Common`makeTuple],
  Editable->False]], "Print",
 CellChangeTimes->{3.538975300520834*^9},
 CellTags->"Info3538978900-6004912",
 CellID->632570368]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "NotebookPut", "]"}]], "Input",
 CellChangeTimes->{{3.53830970839711*^9, 3.538309711200081*^9}, {
  3.538309794515407*^9, 3.538309798626715*^9}},
 CellID->1384747800],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Protected", ",", "ReadProtected"}], "}"}]], "Output",
 CellChangeTimes->{3.538309798918245*^9},
 CellID->1447158141]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Provers`Common`Private`$TMAproofNotebook", "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.538309435579795*^9, 3.538309440248973*^9}, {
  3.538312480337864*^9, 3.538312483504095*^9}},
 CellID->427811824],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"NotebookObject", "[", 
    RowBox[{
     RowBox[{"FrontEndObject", "[", 
      RowBox[{"LinkObject", "[", 
       RowBox[{"\"\<9tj_shm\>\"", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     "48"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.538308907039413*^9, 3.538309442544928*^9, 3.538310524499319*^9, 
   3.538310664559915*^9, 3.538312355411693*^9, {3.538312474583617*^9, 
   3.538312484280922*^9}, {3.538313034708249*^9, 3.538313051093386*^9}},
 CellID->1350215185]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$TMAproofObject", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.538309435579795*^9, 3.538309440248973*^9}, {
  3.538309916190172*^9, 3.538309929252892*^9}, {3.538400946336669*^9, 
  3.53840094926401*^9}},
 CellID->295057353],

Cell["\<\
Theorema`Provers`Common`Private`PRFOBJ$[
 Theorema`Provers`Common`Private`PRFINFO$[\"Initial\", 
  {{\"ID:1491028062\", 
    \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
   Theorema`Language`Forall$TM[Theorema`Language`RNG$[
     Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
    Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
     Theorema`Language`Forall$TM[Theorema`Language`RNG$[
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[x$TM], Q$TM], 
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[y$TM], Q$TM], 
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[z$TM], Q$TM]], 
      True, P$TM[Theorema`Language`VAR$[x$TM]]]]], \"(7)\"}, 
  {{{\"ID:330716980\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         4], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[y$TM], 1, 
         n$TM, 4], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[
          z$TM], 1, n$TM, 4]], True, P$TM[Theorema`Language`VAR$[
         x$TM]]]]], \"(3)\"}, 
   {{\"ID:1242901413\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         1], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[y$TM], 1, 
         n$TM, 1]], True, Theorema`Language`IffDef$TM[
        P$TM[Theorema`Language`VAR$[x$TM], Theorema`Language`VAR$[y$TM]], 
        Theorema`Language`Or$TM[Q$TM[Theorema`Language`VAR$[x$TM]], 
         Q$TM[Theorema`Language`VAR$[y$TM]]]]]]], \"(10)\"}, 
   {{\"ID:1636935908\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         1]], True, Theorema`Language`Equal$TM[
        P$TM[Theorema`Language`VAR$[x$TM]], Theorema`Language`Times$TM[3, 
         Theorema`Language`VAR$[x$TM]]]]]], \"(1)\"}}, \"Initial\"], 
 Theorema`Provers`Common`Private`PRFSIT$[
  {{\"ID:1491028062\", 
    \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
   Theorema`Language`Forall$TM[Theorema`Language`RNG$[
     Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
    Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
     Theorema`Language`Forall$TM[Theorema`Language`RNG$[
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[x$TM], Q$TM], 
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[y$TM], Q$TM], 
       Theorema`Language`PREDRNG$[Theorema`Language`VAR$[z$TM], Q$TM]], 
      True, P$TM[Theorema`Language`VAR$[x$TM]]]]], \"(7)\"}, 
  {{{\"ID:330716980\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         4], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[y$TM], 1, 
         n$TM, 4], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[
          z$TM], 1, n$TM, 4]], True, P$TM[Theorema`Language`VAR$[
         x$TM]]]]], \"(3)\"}, 
   {{\"ID:1242901413\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         1], Theorema`Language`STEPRNG$[Theorema`Language`VAR$[y$TM], 1, 
         n$TM, 1]], True, Theorema`Language`IffDef$TM[
        P$TM[Theorema`Language`VAR$[x$TM], Theorema`Language`VAR$[y$TM]], 
        Theorema`Language`Or$TM[Q$TM[Theorema`Language`VAR$[x$TM]], 
         Q$TM[Theorema`Language`VAR$[y$TM]]]]]]], \"(10)\"}, 
   {{\"ID:1636935908\", 
     \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
    Theorema`Language`Forall$TM[Theorema`Language`RNG$[
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[a$TM]]], True, 
     Theorema`Language`Implies$TM[S$TM[Theorema`Language`VAR$[a$TM]], 
      Theorema`Language`Forall$TM[Theorema`Language`RNG$[
        Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 
         1]], True, Theorema`Language`Equal$TM[
        P$TM[Theorema`Language`VAR$[x$TM]], Theorema`Language`Times$TM[3, 
         Theorema`Language`VAR$[x$TM]]]]]], \"(1)\"}}, {}, \"pending\", 
  \"InferenceRules\" -> Theorema`Provers`Common`Private`inferenceRules[
    Theorema`Interface`GUI`Private`prover1]]]\
\>", "Output",
 CellChangeTimes->{3.538309930616354*^9, 3.538400950196167*^9},
 CellID->2118018082]
}, Closed]],

Cell[BoxData[
 RowBox[{"Theorema`Common`showProofNavigation", "[", 
  "Theorema`Common`$TMAproofTree", "]"}]], "Input",
 CellChangeTimes->{{3.538303943335101*^9, 3.538303963634474*^9}, {
  3.53838590912453*^9, 3.538385915743237*^9}},
 CellID->881736748],

Cell[BoxData[
 RowBox[{"Theorema`Common`displayProof", "[", 
  "Theorema`Common`$TMAproofObject", "]"}]], "Input",
 CellChangeTimes->{{3.538303943335101*^9, 3.538303963634474*^9}, {
  3.538312275159698*^9, 3.538312301176757*^9}},
 CellID->1972978571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Theorema`Common`$tmaEnv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.537249879864226*^9, 3.537249902215109*^9}},
 CellID->1182975562],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   StyleBox["a", "ExpressionVariable"]], 
  RowBox[{
   RowBox[{"S", "[", 
    StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
   RowBox[{
    UnderscriptBox["\[ForAll]", GridBox[{
       {
        RowBox[{
         RowBox[{
          StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]",
          ",", "n"}]}
      }]], 
    RowBox[{
     RowBox[{"P", "[", 
      StyleBox["x", "ExpressionVariable"], "]"}], "=", 
     RowBox[{"3", " ", 
      StyleBox["x", "ExpressionVariable"]}]}]}]}]}]], "Output",
 CellChangeTimes->{3.537249904083813*^9, 3.537250603868933*^9, 
  3.537250642927229*^9, 3.537251638489551*^9, 3.537251690492027*^9},
 CellID->1873252243]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`freeVariables", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.537249907350282*^9, 3.537249929372911*^9}},
 CellID->2024511036],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.537249931883011*^9, 3.537250098109938*^9, 
  3.537251650290183*^9},
 CellID->229083148]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Language`Parser`Private`isQuantifierSymbol", "[", 
  "\"\<|\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.538831019569917*^9, 3.538831062868179*^9}, {
  3.538894891306223*^9, 3.538894902433181*^9}},
 CellID->736852899],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.538831063561526*^9, 3.53889490343509*^9, 
  3.53889557016692*^9},
 CellID->832383090]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Language`Parser`Private`$tmaNonStandardOperators", "//", 
  "InputForm"}]], "Input",
 CellChangeTimes->{{3.538831089587541*^9, 3.538831112475806*^9}},
 CellID->1370121138],

Cell["\<\
{{Theorema`Language`Iff$TM, DoubleRightArrow}, 
 {Theorema`Language`EqualDef$TM, SetDelayed}, 
 {Theorema`Language`Equal$TM, Set}, {Theorema`Language`Tuple$TM, 
  AngleBracket}}\
\>", "Output",
 CellChangeTimes->{{3.538831095726835*^9, 3.538831113132288*^9}},
 CellID->2037549048]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`P$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}},
 CellID->1955273032],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`P$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.537263444532199*^9},
 CellTags->"Info3537267044-9498034",
 CellID->2079055498],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", "x_", "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1636935908\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "x", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "x"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "n"}]}], ")"}]}]}], ":=", 
         RowBox[{"3", " ", "x"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1242901413\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "x", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "x"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "n"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "y", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "y"}], "&&", 
             RowBox[{"y", "\[LessEqual]", "n"}]}], ")"}]}]}], ":=", 
         RowBox[{
          RowBox[{"Q", "[", "x", "]"}], "||", 
          RowBox[{"Q", "[", "y", "]"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", "x_", "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1346427776\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"x", "\[Element]", "A"}]}]}], ":=", 
         RowBox[{"5", "+", "x"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`P$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.537263444584631*^9},
 CellTags->"Info3537267044-9498034",
 CellID->167383793]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Theorema`Computation`testArchive`*\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.539326652113631*^9, 3.539326678578995*^9}},
 CellID->1541668732],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.539326665752589*^9, 3.539326682206299*^9}},
 CellID->211843285]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`testArchive`f$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
   3.53932658085132*^9, 3.539326598123806*^9}, 3.53932701548176*^9, {
   3.539329010743956*^9, 3.539329030755844*^9}},
 CellID->1697196647],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`testArchive`f$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.539352828410589*^9},
 CellTags->"Info3539356428-4065218",
 CellID->1486095324],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "a_", "]"}], "/;", 
          RowBox[{"activeComputationKB", "[", 
           RowBox[{"{", 
            
            RowBox[{"\<\"ID:2120996291\"\>", 
             ",", "\<\"Source:Theorema`Knowledge`testArchive`\"\>"}], "}"}], 
           "]"}]}], ":=", 
         RowBox[{"p", "[", 
          RowBox[{"a", ",", "a"}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`testArchive`f$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.539352828570157*^9},
 CellTags->"Info3539356428-4065218",
 CellID->1967918314]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "DownValues", "[", "Theorema`Computation`Knowledge`testArchive`f$TM", "]"}],
   "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.539327034327344*^9, 3.539327045111806*^9}, 
   3.539329044009433*^9},
 CellID->2076419721],

Cell["\<\
{HoldPattern[Theorema`Computation`Knowledge`testArchive`f$TM[
     Theorema`Computation`Knowledge`a$TM_] /; 
    Theorema`Computation`Language`Private`activeComputationKB[
     {\"ID:2120996291\", \"Source:Theorema`Knowledge`testArchive`\"}]] :> 
  Theorema`Computation`Knowledge`testArchive`private`p$TM[
   Theorema`Computation`Knowledge`a$TM, 
   Theorema`Computation`Knowledge`a$TM]}\
\>", "Output",
 CellChangeTimes->{3.539327045914533*^9, 3.53932904595112*^9, 
  3.539352837724998*^9},
 CellID->762369429]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "Theorema`Computation`Knowledge`testArchive`private`a", 
  "]"}]], "Computation",
 CellChangeTimes->{{3.53932709087818*^9, 3.539327102000244*^9}, 
   3.539329110755479*^9, 3.539329367113385*^9, 3.539352965473829*^9},
 CellID->1893908966],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539352975120776*^9},
 CellID->1575277035],

Cell[BoxData[
 FormBox[
  RowBox[{"f", "[", "a", "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->109592331]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "Theorema`Knowledge`a", "]"}]], "Computation",
 CellChangeTimes->{{3.53932709087818*^9, 3.539327102000244*^9}, 
   3.539327211429327*^9, 3.539329142203097*^9, {3.539329294983635*^9, 
   3.539329315998762*^9}, {3.539329346859734*^9, 3.539329350075794*^9}, 
   3.539352980606455*^9, {3.539353252530049*^9, 3.539353255216294*^9}},
 CellID->88945358],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539353261060663*^9},
 CellID->662960668],

Cell[BoxData[
 FormBox[
  RowBox[{"p", "[", 
   RowBox[{"a", ",", "a"}], "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->95754422]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Computation",
 CellChangeTimes->{{3.539327235808001*^9, 3.539327236694584*^9}, {
   3.539329414388404*^9, 3.539329418909574*^9}, 3.539353021236181*^9},
 CellID->1868443842],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539353024859606*^9},
 CellID->670983249],

Cell[BoxData[
 FormBox[
  RowBox[{"p", "[", 
   RowBox[{"x", ",", "x"}], "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->1294992259]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Computation",
 CellChangeTimes->{{3.539353029881893*^9, 3.53935303093733*^9}},
 CellID->546509625],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
                  True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:2120996291", "Source:Theorema`Knowledge`testArchive`"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539353031706466*^9},
 CellID->1241332751],

Cell[BoxData[
 FormBox[
  RowBox[{"p", "[", 
   RowBox[{"3", ",", "3"}], "]"}], 
  Theorema`Common`TheoremaForm]], "ComputationResult",
 CellID->1029595611]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.539353035995577*^9, 3.539353044448077*^9}},
 CellID->1330495127],

Cell["\<\
Theorema`Computation`Knowledge`testArchive`private`p$TM[3, 3]\
\>", "Output",
 CellChangeTimes->{3.53935304506687*^9},
 CellID->582396549]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input",
 CellChangeTimes->{{3.539353281649811*^9, 3.539353283752885*^9}},
 CellID->36095736],

Cell[BoxData["\<\"Global`\"\>"], "Output",
 CellChangeTimes->{3.539353284976619*^9},
 CellID->1692759908]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.539353286487741*^9, 3.539353288693497*^9}},
 CellID->2025658266],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theorema`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"WebServices`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.539353289399993*^9},
 CellID->837323898]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computation", "Section",
 CellChangeTimes->{{3.537190414450915*^9, 3.537190417159897*^9}},
 CellID->1498334619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9, {3.53718542006545*^9, 
   3.537185423512823*^9}, {3.537187787205318*^9, 3.53718778863738*^9}},
 CellID->98487382],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187790669677*^9},
 CellID->1479163346],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537187790738192*^9},
 CellID->1504671994]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{3.53598216380274*^9},
 CellID->1791385580],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187709229586*^9},
 CellID->14065605],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186167229779*^9, 3.537187709269473*^9},
 CellID->1201509063]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186181713647*^9}},
 CellID->1674073568],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187713012624*^9},
 CellID->449726254],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "&&", 
  RowBox[{"P", "[", "2", "]"}], "&&", 
  RowBox[{"P", "[", "3", "]"}], "&&", 
  RowBox[{"P", "[", "4", "]"}], "&&", 
  RowBox[{"P", "[", "5", "]"}], "&&", 
  RowBox[{"P", "[", "6", "]"}], "&&", 
  RowBox[{"P", "[", "7", "]"}], "&&", 
  RowBox[{"P", "[", "8", "]"}], "&&", 
  RowBox[{"P", "[", "9", "]"}], "&&", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186183613878*^9, 3.537187713048159*^9},
 CellID->754137009]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}},
 CellID->1845651749],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187738013845*^9},
 CellID->108509328],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", 
       RowBox[{"7", "+", "3"}]}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186215995511*^9, 3.537187738044501*^9},
 CellID->737506521]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "2"], ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, {
   3.537186260920906*^9, 3.537186274255117*^9}},
 CellID->1431049582],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718775859968*^9},
 CellID->1185581040],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "&&", 
  RowBox[{"P", "[", "3", "]"}], "&&", 
  RowBox[{"P", "[", "5", "]"}], "&&", 
  RowBox[{"P", "[", "7", "]"}], "&&", 
  RowBox[{"P", "[", "9", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186282305487*^9, 3.537187758629221*^9},
 CellID->582741343]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "3"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9},
 CellID->203455808],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718776466022*^9},
 CellID->145952955],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "2", "]"}], "||", 
  RowBox[{"P", "[", "3", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.536329360628376*^9, 3.537184183141348*^9, 
  3.537184318550782*^9, 3.537185403836159*^9, 3.537186304655134*^9, 
  3.537187764713919*^9},
 CellID->1753205452]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9, {3.53718542006545*^9, 
   3.537185423512823*^9}},
 CellID->30211731],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187776695653*^9},
 CellID->2129720458],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537185424485715*^9, 3.537186308169571*^9, 
  3.537187776746898*^9},
 CellID->754575839]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186181713647*^9}, 
   3.537186341739007*^9},
 CellID->1873687787],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187800752711*^9},
 CellID->1253293235],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "2", "]"}], "||", 
  RowBox[{"P", "[", "3", "]"}], "||", 
  RowBox[{"P", "[", "4", "]"}], "||", 
  RowBox[{"P", "[", "5", "]"}], "||", 
  RowBox[{"P", "[", "6", "]"}], "||", 
  RowBox[{"P", "[", "7", "]"}], "||", 
  RowBox[{"P", "[", "8", "]"}], "||", 
  RowBox[{"P", "[", "9", "]"}], "||", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186183613878*^9, 3.537186344283452*^9, 
  3.537187800783047*^9},
 CellID->1218379290]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, 
   3.537186349528334*^9},
 CellID->811697226],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187810237976*^9},
 CellID->1518608613],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", 
       RowBox[{"7", "+", "3"}]}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186215995511*^9, 3.53718635821227*^9, 
  3.537187810263746*^9},
 CellID->825684985]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Computation",
 CellChangeTimes->{{3.536329344797392*^9, 3.536329372438328*^9}},
 CellID->1011115407],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187830742202*^9},
 CellID->445048633],

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "ComputationResult",
 CellChangeTimes->{{3.536329381862531*^9, 3.536329390362746*^9}, 
   3.537186408369568*^9, 3.537187830781458*^9},
 CellID->1204156752]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Computation",
 CellChangeTimes->{{3.536329344797392*^9, 3.536329345523937*^9}},
 CellID->277393357],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187822954841*^9},
 CellID->1246334821],

Cell[BoxData["2"], "ComputationResult",
 CellChangeTimes->{3.536329347786624*^9, 3.537186397440819*^9, 
  3.537187822961206*^9},
 CellID->280699869]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "3"], ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, {
   3.537186260920906*^9, 3.537186274255117*^9}, {3.537186368801293*^9, 
   3.53718638163521*^9}},
 CellID->2073870508],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187817514212*^9},
 CellID->1700297099],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "4", "]"}], "||", 
  RowBox[{"P", "[", "7", "]"}], "||", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{
  3.537186282305487*^9, {3.537186377062426*^9, 3.537186383936613*^9}, 
   3.5371878175343*^9},
 CellID->778293369]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"a", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     RowBox[{"x", ",", "y", ",", "z"}]], 
    RowBox[{
     RowBox[{"x", ">", "a"}], "\[And]", 
     RowBox[{"P", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]], 
   RowBox[{"Q", "[", 
    RowBox[{"a", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.512995984014894*^9, 3.512995984605323*^9}, {
  3.532427758120653*^9, 3.532427762399611*^9}, {3.532427794868755*^9, 
  3.532427795474997*^9}, {3.53666390033573*^9, 3.536663941681615*^9}, {
  3.536925925816256*^9, 3.536925932203891*^9}, {3.536934384620933*^9, 
  3.536934450520649*^9}},
 CellID->1152856210],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187867765647*^9},
 CellID->960157500],

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     StyleBox["x", "ExpressionVariable"]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ">", "1"}]], 
   RowBox[{
    UnderscriptBox[
     UnderscriptBox["\[ForAll]", 
      RowBox[{
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}]], 
     RowBox[{"P", "[", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], ",", 
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}], "]"}]], 
    RowBox[{"Q", "[", 
     RowBox[{"1", ",", 
      StyleBox["x", "ExpressionVariable"], ",", 
      StyleBox["y", "ExpressionVariable"], ",", 
      StyleBox["z", "ExpressionVariable"]}], "]"}]}]}], "&&", 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     StyleBox["x", "ExpressionVariable"]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ">", "2"}]], 
   RowBox[{
    UnderscriptBox[
     UnderscriptBox["\[ForAll]", 
      RowBox[{
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}]], 
     RowBox[{"P", "[", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], ",", 
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}], "]"}]], 
    RowBox[{"Q", "[", 
     RowBox[{"2", ",", 
      StyleBox["x", "ExpressionVariable"], ",", 
      StyleBox["y", "ExpressionVariable"], ",", 
      StyleBox["z", "ExpressionVariable"]}], "]"}]}]}]}]], "ComputationResult",\

 CellChangeTimes->{3.53666394269026*^9, 3.536664009688749*^9, 
  3.536664140973344*^9, 3.536664247418962*^9, 3.536664417145389*^9, 
  3.536735718251839*^9, 3.536735764157247*^9, 3.536737011432611*^9, 
  3.536737057705239*^9, 3.536925112353346*^9, 3.536925729682152*^9, 
  3.536925935468522*^9, 3.536926020653002*^9, 3.536934362436868*^9, 
  3.536934421721098*^9, 3.536934451768684*^9, 3.537022645509204*^9, 
  3.537023441733061*^9, 3.537023517593337*^9, 3.537076299107731*^9, 
  3.537186422098857*^9, 3.537187867802452*^9},
 CellID->690517246]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]], "False"}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}},
 CellID->1615862783],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187915200281*^9},
 CellID->944167556],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{
  3.536935026032087*^9, {3.536935063378047*^9, 3.536935082125048*^9}, 
   3.537082839606641*^9, 3.537187915227795*^9},
 CellID->1238531527]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", "}"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}, {
  3.537187928224508*^9, 3.53718793946013*^9}},
 CellID->1201037010],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718794020892*^9},
 CellID->540673537],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{{3.537187933033252*^9, 3.537187940237827*^9}},
 CellID->807696050]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", "}"}]}]], "False"}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}, {
  3.537187928224508*^9, 3.537187947809686*^9}},
 CellID->921769592],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187948500825*^9},
 CellID->1465305827],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{3.537187948561262*^9},
 CellID->168737142]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"x", "<", "2"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}},
 CellID->165054078],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187972588062*^9},
 CellID->1604596859],

Cell[BoxData[
 RowBox[{"P", "[", "1", "]"}]], "ComputationResult",
 CellChangeTimes->{{3.536934306852753*^9, 3.536934325921903*^9}, 
   3.537082948644804*^9, 3.537187972614307*^9},
 CellID->244870717]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"2", "|", "x"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}},
 CellID->514390584],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537188011633674*^9},
 CellID->1113360533],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "1"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "1", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "2"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "2", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "3"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "3", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "5"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "5", "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537188011689105*^9},
 CellID->1682361377]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"2", "|", "x"}]], "False"}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}},
 CellID->1089040068],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537188267263987*^9},
 CellID->1098517706],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "1"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "2"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "3"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "5"}], ")"}]}]}]], "ComputationResult",
 CellChangeTimes->{{3.537188252123341*^9, 3.537188267285079*^9}},
 CellID->902180314]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"y", "\[LessEqual]", "x"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190537414876*^9}},
 CellID->1030427555],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190539251806*^9},
 CellID->2099805360],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{3.5371905393023*^9},
 CellID->993919463]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"y", "<", "x"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190556592467*^9}},
 CellID->626819530],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53719055754786*^9},
 CellID->1982206321],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{3.537190557604934*^9},
 CellID->468602894]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
      RowBox[{"x", "-", "1"}]}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190618891779*^9}},
 CellID->1118177723],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190619419392*^9},
 CellID->1426088242],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{3.537190619477817*^9},
 CellID->1300723109]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190665105309*^9}},
 CellID->2063520275],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190678404072*^9},
 CellID->663247889],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"2", ",", "2"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"5", ",", "5"}], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190627859501*^9, 3.537190678422038*^9},
 CellID->725979512]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
      RowBox[{"x", "+", "1"}]}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190685286414*^9}},
 CellID->941369956],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190686260492*^9},
 CellID->1592498020],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "4"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "5"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "6"}], "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190686317786*^9},
 CellID->1882998958]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox["\[Exists]", 
    RowBox[{
     RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"x", "+", "1"}]}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.53719070446703*^9}},
 CellID->952406679],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190705568716*^9},
 CellID->1956997315],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "4"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "4"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "5"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "6"}], "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190705629563*^9},
 CellID->515926111]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox["\[Exists]", 
    RowBox[{
     RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"x", "+", "1"}]}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
   3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
   3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
   3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
   3.537190577252643*^9}, {3.537190616426247*^9, 3.53719070446703*^9}, 
   3.537251751881149*^9},
 CellID->1263723114],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Greater", "GreaterEqual", "Iff", 
                    "Implies", "Less", "LessEqual", "Not", "Or", "Plus", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", False}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", False}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537251830280234*^9},
 CellID->1865004037],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       StyleBox["x", "ExpressionVariable"], "\[Element]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]}
    }]], 
  RowBox[{
   UnderscriptBox["\[Exists]", GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
        ",", 
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "+", "1"}]}]}
     }]], 
   RowBox[{"P", "[", 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ",", 
     StyleBox["y", "ExpressionVariable"]}], "]"}]}]}]], "ComputationResult",
 CellChangeTimes->{3.537251754143596*^9, 3.537251830304475*^9},
 CellID->627422604]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"y", "|", 
      RowBox[{"y", "<", "3"}]}], "}"}]}]], 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Computation",
 CellChangeTimes->{3.538975561618026*^9},
 CellID->574544294],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538975563677173*^9},
 CellID->701678887],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       StyleBox["x", "ExpressionVariable"], "\[Element]", 
       RowBox[{"SetOf", "[", 
        RowBox[{
         RowBox[{"RNG$", "[", 
          RowBox[{"SIMPRNG$", "[", 
           StyleBox["y", "ExpressionVariable"], "]"}], "]"}], ",", 
         RowBox[{
          StyleBox["y", "ExpressionVariable"], "<", "3"}], ",", 
         StyleBox["y", "ExpressionVariable"]}], "]"}]}]}
    }]], 
  RowBox[{"makeSet", "[", 
   RowBox[{"1", ",", "2", ",", "3"}], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.538975563764506*^9},
 CellID->699868854]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}]], 
  RowBox[{"{", 
   RowBox[{"y", "|", 
    RowBox[{
     RowBox[{"y", "+", "1"}], "<", "x"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.538975561618026*^9, {3.538975767658421*^9, 3.538975774025317*^9}, {
   3.538975822212291*^9, 3.53897585402459*^9}},
 CellID->500928076],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538975956262635*^9},
 CellID->1158250773],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOf", "[", 
   RowBox[{
    RowBox[{"RNG$", "[", 
     RowBox[{"SIMPRNG$", "[", 
      StyleBox["y", "ExpressionVariable"], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"1", "+", 
      StyleBox["y", "ExpressionVariable"]}], "<", "2"}], ",", 
    StyleBox["y", "ExpressionVariable"]}], "]"}], "&&", 
  RowBox[{"SetOf", "[", 
   RowBox[{
    RowBox[{"RNG$", "[", 
     RowBox[{"SIMPRNG$", "[", 
      StyleBox["y", "ExpressionVariable"], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"1", "+", 
      StyleBox["y", "ExpressionVariable"]}], "<", "3"}], ",", 
    StyleBox["y", "ExpressionVariable"]}], "]"}]}]], "ComputationResult",
 CellChangeTimes->{
  3.538975777557292*^9, {3.538975838653026*^9, 3.538975855332024*^9}, 
   3.538975956298931*^9},
 CellID->79214255]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "|", 
   RowBox[{"x", ">", "1"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.539069294223843*^9, 3.539069295674275*^9}, {
  3.539353637356604*^9, 3.539353640915053*^9}, {3.539354740605774*^9, 
  3.539354752368806*^9}, {3.53967163733281*^9, 3.539671658118132*^9}},
 CellID->1853937483],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"SequenceOf\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "SequenceOf", "Switch", 
                    "Times", "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SequenceOf", True}, {
                 "SetEqual", False}, {"Switch", True}, {"Times", True}, {
                 "Union", False}, {"Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "SequenceOf", "Switch", "Times", "Which", "While"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SequenceOf", True}, {
          "SetEqual", False}, {"Switch", True}, {"Times", True}, {
          "Union", False}, {"Which", True}, {"While", True}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539672827898318*^9},
 CellID->1916739404],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "2", "}"}], TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.53961192996958*^9, 3.539612134697034*^9, {3.539671659810275*^9, 
   3.539671689064859*^9}, {3.539672815759369*^9, 3.539672827932982*^9}},
 CellID->559235197]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "|", 
   RowBox[{"x", ">", "1"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.539069294223843*^9, 3.539069295674275*^9}, {
  3.539353637356604*^9, 3.539353640915053*^9}, {3.539354740605774*^9, 
  3.539354752368806*^9}, {3.53967163733281*^9, 3.539671658118132*^9}, {
  3.539672834483386*^9, 3.539672843881613*^9}},
 CellID->1648032914],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"SequenceOf\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "SequenceOf", "Switch", 
                    "Times", "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SequenceOf", True}, {
                 "SetEqual", False}, {"Switch", True}, {"Times", True}, {
                 "Union", False}, {"Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "SequenceOf", "Switch", "Times", "Which", "While"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SequenceOf", True}, {
          "SetEqual", False}, {"Switch", True}, {"Times", True}, {
          "Union", False}, {"Which", True}, {"While", True}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53967284527526*^9},
 CellID->1856435548],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", "2", "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.539672845337949*^9},
 CellID->186024610]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], 
   UnderscriptBox["|", GridBox[{
      {
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "3"}]},
      {
       RowBox[{
        RowBox[{"y", "=", "2"}], ",", "\[Ellipsis]", ",", "5"}]}
     }]], 
   RowBox[{"y", "\[GreaterEqual]", "x"}]}], 
  "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.539069294223843*^9, 3.539069295674275*^9}, {
  3.539353637356604*^9, 3.539353640915053*^9}, {3.539354740605774*^9, 
  3.539354752368806*^9}, {3.53967163733281*^9, 3.539671658118132*^9}, {
  3.539672834483386*^9, 3.539672930800653*^9}, {3.539672985013575*^9, 
  3.53967299070468*^9}, {3.539673071720799*^9, 3.539673102711694*^9}, {
  3.539673803088118*^9, 3.539673806292583*^9}, {3.539673874808545*^9, 
  3.5396738872678*^9}},
 CellID->1589954603],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"SequenceOf\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "SequenceOf", "Switch", 
                    "Times", "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SequenceOf", True}, {
                 "SetEqual", False}, {"Switch", True}, {"Times", True}, {
                 "Union", False}, {"Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "SequenceOf", "Switch", "Times", "Which", "While"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SequenceOf", True}, {
          "SetEqual", False}, {"Switch", True}, {"Times", True}, {
          "Union", False}, {"Which", True}, {"While", True}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539679330293318*^9},
 CellID->340008834],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]}], "\[RightAngleBracket]"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{
  3.539672991878154*^9, {3.539673077866471*^9, 3.539673103938182*^9}, 
   3.539674394370897*^9, {3.539679304652022*^9, 3.539679330327716*^9}},
 CellID->2010995085]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], 
   UnderscriptBox["|", GridBox[{
      {
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "3"}]},
      {
       RowBox[{
        RowBox[{"y", "=", "2"}], ",", "\[Ellipsis]", ",", "5"}]}
     }]], 
   RowBox[{"y", "\[GreaterEqual]", "x"}]}], "}"}]], "Computation",
 CellChangeTimes->{{3.539069294223843*^9, 3.539069295674275*^9}, {
  3.539353637356604*^9, 3.539353640915053*^9}, {3.539354740605774*^9, 
  3.539354752368806*^9}, {3.53967163733281*^9, 3.539671658118132*^9}, {
  3.539672834483386*^9, 3.539672930800653*^9}, {3.539672985013575*^9, 
  3.53967299070468*^9}, {3.539673071720799*^9, 3.539673102711694*^9}, {
  3.539673803088118*^9, 3.539673806292583*^9}, {3.539673874808545*^9, 
  3.5396738872678*^9}, {3.539679362417389*^9, 3.539679367443456*^9}},
 CellID->124492887],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"SequenceOf\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "SequenceOf", "Switch", 
                    "Times", "Which", "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SequenceOf", True}, {
                 "SetEqual", False}, {"Switch", True}, {"Times", True}, {
                 "Union", False}, {"Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "SequenceOf", "Switch", "Times", "Which", "While"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SequenceOf", True}, {
          "SetEqual", False}, {"Switch", True}, {"Times", True}, {
          "Union", False}, {"Which", True}, {"While", True}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539679369652543*^9},
 CellID->1940060739],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]}], "}"}], 
  TheoremaForm]], "ComputationResult",
 CellChangeTimes->{3.539679369704226*^9},
 CellID->597532123]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "MakeBoxes"}]], "Input",
 CellChangeTimes->{{3.539413138644381*^9, 3.539413141016869*^9}},
 CellID->1706377894],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{MakeBoxes, \\\"[\\\", RowBox[{StyleBox[\\\"expr\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) is the low\[Hyphen]level function used in \
\!\(\*StyleBox[\\\"Mathematica\\\", FontSlant -> \\\"Italic\\\"]\) sessions \
to convert expressions into boxes. \\n\!\(\*RowBox[{MakeBoxes, \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\) is the function to convert \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) to StandardForm boxes.\"\>", "MSG"],
   "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MakeBoxes"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.539679412947766*^9},
 CellTags->"Info3539683012-7308960",
 CellID->1687617131],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "MakeBoxes", "]"}], "=", 
      RowBox[{"{", "HoldAllComplete", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`Set$TM", "[", "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"MakeBoxes", "[", 
          RowBox[{"\<\"\[EmptySet]\"\>", ",", "TheoremaForm"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Set$TM", "[", "]"}], ",", "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"MakeBoxes", "[", 
          RowBox[{"\<\"\[EmptySet]\"\>", ",", "TheoremaForm"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
           "Set$TM", "[", "Theorema`Language`Syntax`Private`arg__", "]"}], 
           ",", "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"{", "Theorema`Language`Syntax`Private`arg", "}"}], ",", 
           "TheoremaForm"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"SequenceOf$TM", "[", 
            RowBox[{
             RowBox[{"Theorema`Language`Syntax`Private`rng", ":", 
              RowBox[{"RNG$", "[", 
               RowBox[{"SETRNG$", "[", 
                RowBox[{"Theorema`Language`Syntax`Private`v_", ",", "_"}], 
                "]"}], "]"}]}], ",", "Theorema`Language`Syntax`Private`cond_",
              ",", "Theorema`Language`Syntax`Private`v_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
             "]"}], ",", "\<\"|\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`cond", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"SequenceOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", "True", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{"\<\"|\"\>", ",", 
              RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
               "]"}]}], "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"SequenceOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{"\<\"|\"\>", ",", 
              RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`cond", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"SetOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{"\<\"{\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{"SequenceOf$TM", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", 
                "Theorema`Language`Syntax`Private`cond", ",", 
                "Theorema`Language`Syntax`Private`form"}], "]"}], ",", 
              "TheoremaForm"}], "]"}], ",", "\<\"}\"\>"}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"TupleOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{"\<\"\[LeftAngleBracket]\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{"SequenceOf$TM", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", 
                "Theorema`Language`Syntax`Private`cond", ",", 
                "Theorema`Language`Syntax`Private`form"}], "]"}], ",", 
              "TheoremaForm"}], "]"}], ",", "\<\"\[RightAngleBracket]\"\>"}], 
           "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"IffDef$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`l_", ",", 
             "Theorema`Language`Syntax`Private`r_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`l", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"TagBox", "[", 
             RowBox[{
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                
                RowBox[{"\<\":\"\>", 
                 ",", "\<\"\[NegativeThickSpace]\[NegativeThinSpace]\"\>", 
                 ",", "\<\"\[DoubleLongLeftRightArrow]\"\>"}], "}"}], "]"}], 
              ",", "Identity", ",", 
              RowBox[{"SyntaxForm", "\[Rule]", "\<\"a\[Implies]b\"\>"}]}], 
             "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`r", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"VAR$", "[", "Theorema`Language`Syntax`Private`v_", "]"}], 
           ",", "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"StyleBox", "[", 
          RowBox[{
           RowBox[{"MakeBoxes", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`v", ",", "TheoremaForm"}], 
            "]"}], ",", "\<\"ExpressionVariable\"\>"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
           "Theorema`Computation`Language`Set$TM", "[", 
            "Theorema`Language`Syntax`Private`arg__", "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"{", "Theorema`Language`Syntax`Private`arg", "}"}], ",", 
           "TheoremaForm"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`SequenceOf$TM", "[", 
            RowBox[{
             RowBox[{"Theorema`Language`Syntax`Private`rng", ":", 
              RowBox[{"Theorema`Computation`Language`RNG$", "[", 
               RowBox[{"Theorema`Computation`Language`SETRNG$", "[", 
                RowBox[{"Theorema`Language`Syntax`Private`v_", ",", "_"}], 
                "]"}], "]"}]}], ",", "Theorema`Language`Syntax`Private`cond_",
              ",", "Theorema`Language`Syntax`Private`v_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
             "]"}], ",", "\<\"|\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`cond", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`SequenceOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", "True", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{"\<\"|\"\>", ",", 
              RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
               "]"}]}], "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`SequenceOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{"\<\"|\"\>", ",", 
              RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`cond", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`SetOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{"\<\"{\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{"Theorema`Computation`Language`SequenceOf$TM", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", 
                "Theorema`Language`Syntax`Private`cond", ",", 
                "Theorema`Language`Syntax`Private`form"}], "]"}], ",", 
              "TheoremaForm"}], "]"}], ",", "\<\"}\"\>"}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`TupleOf$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{"\<\"\[LeftAngleBracket]\"\>", ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{"Theorema`Computation`Language`SequenceOf$TM", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", 
                "Theorema`Language`Syntax`Private`cond", ",", 
                "Theorema`Language`Syntax`Private`form"}], "]"}], ",", 
              "TheoremaForm"}], "]"}], ",", "\<\"\[RightAngleBracket]\"\>"}], 
           "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{"Theorema`Computation`Language`IffDef$TM", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`l_", ",", 
             "Theorema`Language`Syntax`Private`r_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`l", ",", "TheoremaForm"}], 
             "]"}], ",", 
            RowBox[{"TagBox", "[", 
             RowBox[{
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                
                RowBox[{"\<\":\"\>", 
                 ",", "\<\"\[NegativeThickSpace]\[NegativeThinSpace]\"\>", 
                 ",", "\<\"\[DoubleLongLeftRightArrow]\"\>"}], "}"}], "]"}], 
              ",", "Identity", ",", 
              RowBox[{"SyntaxForm", "\[Rule]", "\<\"a\[Implies]b\"\>"}]}], 
             "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`r", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
           "Theorema`Computation`Language`VAR$", "[", 
            "Theorema`Language`Syntax`Private`v_", "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"StyleBox", "[", 
          RowBox[{
           RowBox[{"MakeBoxes", "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`v", ",", "TheoremaForm"}], 
            "]"}], ",", "\<\"ExpressionVariable\"\>"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Theorema`Language`Syntax`Private`q_", "?", 
             "Theorema`Language`Syntax`Private`isQuantifierName"}], "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", "True", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{
              RowBox[{"Replace", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`q", ",", 
                "Theorema`Language`Syntax`Private`$tmaNameToQuantifier"}], 
               "]"}], ",", 
              RowBox[{"Theorema`Language`Syntax`Private`makeRangeBox", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`rng", ",", "TheoremaForm"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Theorema`Language`Syntax`Private`q_", "?", 
             "Theorema`Language`Syntax`Private`isQuantifierName"}], "[", 
            RowBox[{
            "Theorema`Language`Syntax`Private`rng_", ",", 
             "Theorema`Language`Syntax`Private`cond_", ",", 
             "Theorema`Language`Syntax`Private`form_"}], "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"RowBox", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"UnderscriptBox", "[", 
             RowBox[{
              RowBox[{"UnderscriptBox", "[", 
               RowBox[{
                RowBox[{"Replace", "[", 
                 RowBox[{
                 "Theorema`Language`Syntax`Private`q", ",", 
                  "Theorema`Language`Syntax`Private`$tmaNameToQuantifier"}], 
                 "]"}], ",", 
                RowBox[{
                "Theorema`Language`Syntax`Private`makeRangeBox", "[", 
                 RowBox[{
                 "Theorema`Language`Syntax`Private`rng", ",", 
                  "TheoremaForm"}], "]"}]}], "]"}], ",", 
              RowBox[{"MakeBoxes", "[", 
               RowBox[{
               "Theorema`Language`Syntax`Private`cond", ",", "TheoremaForm"}],
                "]"}]}], "]"}], ",", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
             "Theorema`Language`Syntax`Private`form", ",", "TheoremaForm"}], 
             "]"}]}], "}"}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Theorema`Language`Syntax`Private`op_", "?", 
             "Theorema`Language`Syntax`Private`isNonStandardOperatorName"}], 
            "[", "Theorema`Language`Syntax`Private`arg__", "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Theorema`Language`Syntax`Private`b", "=", 
             RowBox[{"Replace", "[", 
              RowBox[{
              "Theorema`Language`Syntax`Private`op", ",", 
               "Theorema`Language`Syntax`Private`$\
tmaNonStandardOperatorToBuiltin"}], "]"}]}], "}"}], ",", 
           RowBox[{"MakeBoxes", "[", 
            RowBox[{
             RowBox[{
             "Theorema`Language`Syntax`Private`b", "[", 
              "Theorema`Language`Syntax`Private`arg", "]"}], ",", 
             "TheoremaForm"}], "]"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Theorema`Language`Syntax`Private`op_", "?", 
             "Theorema`Language`Syntax`Private`isStandardOperatorName"}], "[",
             "Theorema`Language`Syntax`Private`arg__", "]"}], ",", 
           "TheoremaForm"}], "]"}], ":=", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Theorema`Language`Syntax`Private`b", "=", 
             RowBox[{
             "Theorema`Language`Syntax`Private`tmaToInputOperator", "[", 
              "Theorema`Language`Syntax`Private`op", "]"}]}], "}"}], ",", 
           RowBox[{"MakeBoxes", "[", 
            RowBox[{
             RowBox[{
             "Theorema`Language`Syntax`Private`b", "[", 
              "Theorema`Language`Syntax`Private`arg", "]"}], ",", 
             "TheoremaForm"}], "]"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
          "Theorema`Language`Syntax`Private`s_Symbol", ",", "TheoremaForm"}], 
          "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Theorema`Language`Syntax`Private`n", "=", 
             RowBox[{
             "SymbolName", "[", "Theorema`Language`Syntax`Private`s", "]"}]}],
             "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "StringLength", "[", "Theorema`Language`Syntax`Private`n", 
                "]"}], ">", "3"}], "&&", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"Theorema`Language`Syntax`Private`n", ",", 
                 RowBox[{"-", "3"}]}], "]"}], "===", "\<\"$TM\"\>"}]}], ",", 
             RowBox[{"StringDrop", "[", 
              RowBox[{"Theorema`Language`Syntax`Private`n", ",", 
               RowBox[{"-", "3"}]}], "]"}], ",", 
             "Theorema`Language`Syntax`Private`n"}], "]"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[MakeBoxes],
  Editable->False]], "Print",
 CellChangeTimes->{3.539679413098216*^9},
 CellTags->"Info3539683012-7308960",
 CellID->835166288]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.538975958063423*^9, 3.538975961679596*^9}},
 CellID->452348970],

Cell["\<\
Theorema`Computation`Language`SetOf$TM[Theorema`Computation`Language`RNG$[
   Theorema`Computation`Language`SIMPRNG$[
    Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`y$TM]]], 
  1 + Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`y$TM] < 2, 
  Theorema`Computation`Language`VAR$[
   Theorema`Computation`Knowledge`y$TM]] && 
 Theorema`Computation`Language`SetOf$TM[Theorema`Computation`Language`RNG$[
   Theorema`Computation`Language`SIMPRNG$[
    Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`y$TM]]], 
  1 + Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`y$TM] < 3, 
  Theorema`Computation`Language`VAR$[Theorema`Computation`Knowledge`y$TM]]\
\>", "Output",
 CellChangeTimes->{3.538975962088078*^9},
 CellID->399279262]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}]], 
  RowBox[{"{", 
   RowBox[{"y", "|", 
    RowBox[{
     RowBox[{"y", "+", "1"}], "<", "x"}]}], "}"}]}]], "Computation",
 CellChangeTimes->{
  3.538975561618026*^9, {3.538975767658421*^9, 3.538975774025317*^9}, {
   3.538975822212291*^9, 3.538975881339866*^9}},
 CellID->1923940186],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", False}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Module", "Not", "Or", "Plus", 
           "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", False}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53897589968471*^9},
 CellID->652674330],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       StyleBox["x", "ExpressionVariable"], "\[Element]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}]}
    }]], 
  RowBox[{"makeSet", "[", 
   RowBox[{"SequenceOf", "[", 
    RowBox[{
     RowBox[{"RNG$", "[", 
      RowBox[{"SIMPRNG$", "[", 
       StyleBox["y", "ExpressionVariable"], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       StyleBox["y", "ExpressionVariable"], "+", "1"}], "<", 
      StyleBox["x", "ExpressionVariable"]}], ",", 
     StyleBox["y", "ExpressionVariable"]}], "]"}], 
   "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.538975899746203*^9},
 CellID->1971377609]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.538975613785695*^9, 3.538975618304924*^9}},
 CellID->1411710637],

Cell["\<\
Theorema`Computation`Language`Forall$TM[Theorema`Computation`Language`RNG$[
  Theorema`Computation`Language`SETRNG$[Theorema`Computation`Language`VAR$[
    Theorema`Computation`Knowledge`x$TM], 
   Theorema`Computation`Language`Set$TM[2, 3]]], True, 
 Theorema`Common`makeSet[Theorema`Computation`Language`SequenceOf$TM[
   Theorema`Computation`Language`RNG$[
    Theorema`Computation`Language`SIMPRNG$[
     Theorema`Computation`Language`VAR$[
      Theorema`Computation`Knowledge`y$TM]]], 
   Theorema`Computation`Language`Less$TM[
    Theorema`Computation`Language`Plus$TM[
     Theorema`Computation`Language`VAR$[
      Theorema`Computation`Knowledge`y$TM], 1], 
    Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`x$TM]], 
   Theorema`Computation`Language`VAR$[
    Theorema`Computation`Knowledge`y$TM]]]]\
\>", "Output",
 CellChangeTimes->{3.538975618932482*^9, 3.538975782699627*^9, 
  3.538975926837981*^9},
 CellID->391066088]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"1", ",", "2", ",", "3"}], "\[RightAngleBracket]"}]], "Computation",\

 CellChangeTimes->{{3.538976229382835*^9, 3.538976233591112*^9}},
 CellID->1392099689],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539005683864242*^9},
 CellID->1373321664],

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{"1", ",", "2", ",", "3"}], 
  "\[RightAngleBracket]"}]], "ComputationResult",
 CellChangeTimes->{3.538976235238011*^9, 3.538999599035623*^9, 
  3.539000762130689*^9, 3.539005291162371*^9, 3.539005683893363*^9},
 CellID->2011074225]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAngleBracket]", 
  RowBox[{
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "|", 
   RowBox[{"x", ">", "p"}]}], "\[RightAngleBracket]"}]], "Computation",
 CellChangeTimes->{{3.538976377779198*^9, 3.538976421961235*^9}},
 CellID->1094429406],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539005685346114*^9},
 CellID->1455835425],

Cell[BoxData["$Failed"], "ComputationResult",
 CellChangeTimes->{3.538976424040901*^9, 3.53899963863267*^9, 
  3.539000775572261*^9, 3.539001957224525*^9, 3.539003801124198*^9, 
  3.539003947741307*^9, 3.53900403812452*^9, 3.539005323549244*^9, 
  3.539005685636495*^9},
 CellID->380662198]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "y"}], "|", "z"}]], "Computation",
 CellChangeTimes->{{3.539002075813132*^9, 3.539002080202448*^9}},
 CellID->1236848492],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.539005690800727*^9},
 CellID->690458640],

Cell[BoxData["$Failed"], "ComputationResult",
 CellChangeTimes->{3.539005361206112*^9, 3.539005690843244*^9},
 CellID->2049673273]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Programming", "Section",
 CellChangeTimes->{{3.53897491937809*^9, 3.538974921539405*^9}},
 CellID->332513239],

Cell[CellGroupData[{

Cell["Definition", "OpenEnvironment",
 CellID->1770062998],

Cell[BoxData[
 UnderscriptBox["\[ForAll]", "x"]], "EnvironmentDeclaration",
 CellChangeTimes->{{3.537707733293822*^9, 3.537707741287284*^9}, {
  3.537785953258414*^9, 3.537785953813354*^9}, {3.537786342207189*^9, 
  3.537786343043088*^9}},
 CellID->1574886120],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], ":=", 
  RowBox[{"Program", "[", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "x"}], ",", "a"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"y", "=", 
         RowBox[{"y", "\[Union]", 
          RowBox[{"{", "i", "}"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", "y"}]}], 
    "]"}], "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(9)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.537707635415025*^9, 3.537707637444269*^9}, {
   3.537707747632214*^9, 3.537707800931936*^9}, {3.537708233786945*^9, 
   3.537708243905983*^9}, {3.537708384839252*^9, 3.537708384888737*^9}, 
   3.537708423340865*^9, {3.537709787983195*^9, 3.53770983736029*^9}, {
   3.537785957597267*^9, 3.537786028476619*^9}, {3.537786187606318*^9, 
   3.537786189067497*^9}, {3.537786346074294*^9, 3.537786355331673*^9}},
 CellTags->{
  "ID:412145113", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
 CellID->412145113],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->1300223080]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1068241259],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$tmaEnv"], "Input",
 CellChangeTimes->{{3.538912302796846*^9, 3.538912303548984*^9}, 
   3.538912452983751*^9},
 CellID->1565406460],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1202623005\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{"SequenceOf", "[", 
       RowBox[{
        RowBox[{"RNG$", "[", 
         RowBox[{"SETRNG$", "[", 
          RowBox[{
           StyleBox["x", "ExpressionVariable"], ",", "A"}], "]"}], "]"}], ",", 
        RowBox[{
         StyleBox["x", "ExpressionVariable"], ">", "p"}], ",", 
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}], "]"}]}], 
     ",", "\<\"(13)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:902135768\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{"SetOf", "[", 
       RowBox[{
        RowBox[{"RNG$", "[", 
         RowBox[{"SETRNG$", "[", 
          RowBox[{
           StyleBox["x", "ExpressionVariable"], ",", "A"}], "]"}], "]"}], ",",
         "True", ",", 
        StyleBox["x", "ExpressionVariable"]}], "]"}]}], ",", "\<\"(11)\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1618303103\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{"TupleOf", "[", 
       RowBox[{
        RowBox[{"RNG$", "[", 
         RowBox[{"STEPRNG$", "[", 
          RowBox[{
           StyleBox["x", "ExpressionVariable"], ",", "1", ",", "n", ",", 
           "1"}], "]"}], "]"}], ",", "True", ",", 
        StyleBox["x", "ExpressionVariable"]}], "]"}]}], ",", "\<\"(12)\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:822628176\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", 
         RowBox[{
          StyleBox["x", "ExpressionVariable"], ",", 
          StyleBox["y", "ExpressionVariable"], ",", 
          StyleBox["z", "ExpressionVariable"]}]], 
        RowBox[{"A", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(8)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1491028062\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{"Q", "[", 
             StyleBox["x", "ExpressionVariable"], "]"}]},
           {
            RowBox[{"Q", "[", 
             StyleBox["y", "ExpressionVariable"], "]"}]},
           {
            RowBox[{"Q", "[", 
             StyleBox["z", "ExpressionVariable"], "]"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(7)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1874491785\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{"Q", "[", 
             StyleBox["x", "ExpressionVariable"], "]"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(6)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1421485859\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]},
           {
            RowBox[{
             StyleBox["y", "ExpressionVariable"], "\[Element]", "A"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(5)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1346427776\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          StyleBox["x", "ExpressionVariable"], "]"}], ":=", 
         RowBox[{"5", "+", 
          StyleBox["x", "ExpressionVariable"]}]}]}]}]}], ",", "\<\"(4)\"\>"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:330716980\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["z", "ExpressionVariable"], "=", "1"}], ",", 
             OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(3)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1242901413\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]},
           {
            RowBox[{
             RowBox[{
              StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{
           StyleBox["x", "ExpressionVariable"], ",", 
           StyleBox["y", "ExpressionVariable"]}], "]"}], 
         TagBox[
          RowBox[{
          ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
           "\[DoubleLongLeftRightArrow]"}],
          Identity,
          SyntaxForm->"a\[Implies]b"], 
         RowBox[{
          RowBox[{"Q", "[", 
           StyleBox["x", "ExpressionVariable"], "]"}], "||", 
          RowBox[{"Q", "[", 
           StyleBox["y", "ExpressionVariable"], "]"}]}]}]}]}]}], 
     ",", "\<\"(10)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1636935908\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]}
          }]], 
        RowBox[{
         RowBox[{"P", "[", 
          StyleBox["x", "ExpressionVariable"], "]"}], "=", 
         RowBox[{"3", " ", 
          StyleBox["x", "ExpressionVariable"]}]}]}]}]}], ",", "\<\"(1)\"\>"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.538894573575356*^9, 3.538895703511305*^9, 3.538895741612522*^9, 
   3.53891227414118*^9, 3.538912306429143*^9, {3.538912437001292*^9, 
   3.538912453901676*^9}, 3.538912555272842*^9, {3.538912615301177*^9, 
   3.538912627587283*^9}, 3.538912661333586*^9},
 CellID->1874911000]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.537712277470573*^9, 3.537712311755911*^9}},
 CellID->1391707244],

Cell["\<\
{{{\"ID:1618303103\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`TupleOf$TM[Theorema`Language`RNG$[
    Theorema`Language`STEPRNG$[Theorema`Language`VAR$[x$TM], 1, n$TM, 1]], 
   True, Theorema`Language`VAR$[x$TM]], \"(12)\"}, 
 {{\"ID:902135768\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, $Failed, 
  \"(11)\"}}\
\>", "Output",
 CellChangeTimes->{{3.537712292217667*^9, 3.537712312760804*^9}, 
   3.537784740357419*^9, 3.537784941443423*^9, 3.537785176746843*^9, 
   3.537786041888413*^9, 3.537786194855976*^9, 3.537786710967945*^9, 
   3.537788409038965*^9, 3.537789931814978*^9, 3.537793722491219*^9, 
   3.537794149862925*^9, {3.538895719597082*^9, 3.538895766835047*^9}, 
   3.538895832034757*^9, 3.538896099276704*^9},
 CellID->365102397]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`f$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
  3.537712069480288*^9, 3.537712069895417*^9}},
 CellID->2124154183],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`f$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.538894627669297*^9},
 CellTags->"Info3538898227-6972375",
 CellID->1804662456],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "x_", "]"}], "/;", 
          RowBox[{"activeComputationKB", "[", 
           RowBox[{"{", 
            
            RowBox[{"\<\"ID:412145113\"\>", 
             ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"y", "=", "x"}], ",", "a"}], "}"}], ",", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"y", "=", 
               RowBox[{"y", "\[Union]", 
                RowBox[{"{", "i", "}"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", 
            "y"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`f$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.538894627887859*^9},
 CellTags->"Info3538898227-6972375",
 CellID->1518304074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"DownValues", "[", "Theorema`Computation`Knowledge`f$TM", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
  3.537712069480288*^9, 3.537712069895417*^9}, {3.537712132515014*^9, 
  3.537712143688627*^9}},
 CellID->209530079],

Cell["\<\
{HoldPattern[Theorema`Computation`Knowledge`f$TM[
     Theorema`Computation`Knowledge`x$TM_] /; 
    Theorema`Computation`Language`Private`activeComputationKB[
     {\"ID:412145113\", 
      \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}]] :> 
  Theorema`Computation`Language`Module$TM[
   Theorema`Computation`Language`List$TM[
    Theorema`Computation`Knowledge`y$TM = 
     Theorema`Computation`Knowledge`x$TM, 
    Theorema`Computation`Knowledge`a$TM], 
   Theorema`Computation`Language`Do$TM[
     Theorema`Computation`Knowledge`y$TM = 
      Theorema`Computation`Language`Union$TM[
       Theorema`Computation`Knowledge`y$TM, 
       Theorema`Computation`Language`List$TM[
        Theorema`Computation`Knowledge`i$TM]], 
     Theorema`Computation`Language`List$TM[
      Theorema`Computation`Knowledge`i$TM, 2, 5]]; 
    Theorema`Computation`Knowledge`y$TM]}\
\>", "Output",
 CellChangeTimes->{3.537712144777129*^9, 3.537785027161942*^9, 
  3.537786070050988*^9, 3.537788476928174*^9, 3.537793758703931*^9, 
  3.537794168226384*^9},
 CellID->389968434]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, {
  3.53778611495217*^9, 3.537786121341005*^9}, {3.537786743492596*^9, 
  3.537786743617129*^9}},
 CellID->205321431],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538830507730145*^9},
 CellID->2049777050],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "ComputationResult",
 CellChangeTimes->{
  3.537786235361803*^9, 3.537786745420208*^9, {3.537788507397392*^9, 
   3.537788518531114*^9}, 3.537793789875935*^9, 3.537793824225617*^9, 
   3.537794190152959*^9, 3.537795781660363*^9, {3.537795812617694*^9, 
   3.537795825138044*^9}, 3.537795938008259*^9, 3.538830507776712*^9},
 CellID->666721698]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, {3.53779601895124*^9, 3.53779602087955*^9}},
 CellID->2121083924],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538830524469616*^9},
 CellID->803931086],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", "3", "}"}], "\[Union]", 
        RowBox[{"{", "2", "}"}]}], ")"}], "\[Union]", 
      RowBox[{"{", "3", "}"}]}], ")"}], "\[Union]", 
    RowBox[{"{", "4", "}"}]}], ")"}], "\[Union]", 
  RowBox[{"{", "5", "}"}]}]], "ComputationResult",
 CellChangeTimes->{3.537785092879694*^9, 3.537785196119847*^9, 
  3.537786097415074*^9, 3.537795949861932*^9, 3.537796027461482*^9, 
  3.538830524500672*^9},
 CellID->2082819044]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, 3.537795952873119*^9, {3.537796030304187*^9, 
   3.53779603174517*^9}},
 CellID->533105519],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Not", "Or", "Plus", "Switch", "Times", "Which", "While"},
                    "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", False}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Not", "Or", "Plus", 
           "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", False}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538830539680641*^9},
 CellID->2082900615],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"{", "3", "}"}]}], ",", "a"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"y", "\[Union]", 
        RowBox[{"{", "i", "}"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", "y"}]}], 
  "]"}]], "ComputationResult",
 CellChangeTimes->{3.537795963390092*^9, 3.537796037882677*^9, 
  3.538830539688206*^9},
 CellID->863356687]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, {3.537795952873119*^9, 3.537795972614747*^9}, {
   3.537796040929196*^9, 3.537796042194915*^9}},
 CellID->1034884285],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", False}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "For", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Module", "Not", "Or", "Plus", 
           "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", False}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.538830569963231*^9},
 CellID->1612224523],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "ComputationResult",
 CellChangeTimes->{3.537795989963136*^9, 3.537796049111685*^9, 
  3.538830569988069*^9},
 CellID->2141439813]
}, Open  ]]
}, Open  ]]
},
WindowSize->{740, 867},
WindowMargins->{{397, Automatic}, {Automatic, 65}},
Visible->True,
ShowSelection->True,
CounterAssignments->{{"TheoremaFormulaCounter" -> 20}},
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Theorema"}, "TheoremaNotebook.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3540021296-1140785"->{
  Cell[761, 29, 276, 5, 62, "Print",
   CellTags->"Info3540021296-1140785"],
  Cell[1040, 36, 1475, 36, 119, "Print",
   CellTags->"Info3540021296-1140785"]},
 "Info3540021321-1140785"->{
  Cell[2800, 86, 184, 4, 43, "Print",
   CellTags->"Info3540021321-1140785"],
  Cell[2987, 92, 1075, 28, 62, "Print",
   CellTags->"Info3540021321-1140785"]},
 "Info3539356218-4065218"->{
  Cell[62110, 1553, 174, 3, 42, "Print",
   CellTags->"Info3539356218-4065218",
   CellID->577700309],
  Cell[62287, 1558, 1153, 32, 43, "Print",
   CellTags->"Info3539356218-4065218",
   CellID->1169693318]},
 "ID:1636935908"->{
  Cell[64048, 1617, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908]},
 "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"->{
  Cell[64048, 1617, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908],
  Cell[64602, 1634, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413],
  Cell[65545, 1662, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980],
  Cell[66140, 1679, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776],
  Cell[66873, 1699, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859],
  Cell[67460, 1715, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785],
  Cell[68067, 1731, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062],
  Cell[68758, 1749, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176],
  Cell[69176, 1762, 621, 17, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:242022487", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "14"},
   CellID->242022487],
  Cell[69800, 1781, 772, 20, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:1467107305", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "18"},
   CellID->1467107305],
  Cell[70575, 1803, 403, 10, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:2033225528", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "15"},
   CellID->2033225528],
  Cell[70981, 1815, 535, 15, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:1045911681", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "16"},
   CellID->1045911681],
  Cell[71519, 1832, 719, 20, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:1399274849", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "19"},
   CellID->1399274849],
  Cell[72241, 1854, 351, 9, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:338555625", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "17"},
   CellID->338555625],
  Cell[118448, 2938, 333, 8, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:806064238", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "20"},
   CellID->806064238],
  Cell[656812, 16497, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]},
 "1"->{
  Cell[64048, 1617, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908]},
 "ID:1242901413"->{
  Cell[64602, 1634, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413]},
 "10"->{
  Cell[64602, 1634, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413]},
 "ID:330716980"->{
  Cell[65545, 1662, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980]},
 "3"->{
  Cell[65545, 1662, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980]},
 "ID:1346427776"->{
  Cell[66140, 1679, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776]},
 "4"->{
  Cell[66140, 1679, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776]},
 "ID:1421485859"->{
  Cell[66873, 1699, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859]},
 "5"->{
  Cell[66873, 1699, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859]},
 "ID:1874491785"->{
  Cell[67460, 1715, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785]},
 "6"->{
  Cell[67460, 1715, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785]},
 "ID:1491028062"->{
  Cell[68067, 1731, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062]},
 "7"->{
  Cell[68067, 1731, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062]},
 "ID:822628176"->{
  Cell[68758, 1749, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176]},
 "8"->{
  Cell[68758, 1749, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176]},
 "ID:242022487"->{
  Cell[69176, 1762, 621, 17, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:242022487", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "14"},
   CellID->242022487]},
 "14"->{
  Cell[69176, 1762, 621, 17, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:242022487", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "14"},
   CellID->242022487]},
 "ID:1467107305"->{
  Cell[69800, 1781, 772, 20, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:1467107305", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "18"},
   CellID->1467107305]},
 "18"->{
  Cell[69800, 1781, 772, 20, 30, "FormalTextInputFormula",
   CellTags->{
    "ID:1467107305", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "18"},
   CellID->1467107305]},
 "ID:2033225528"->{
  Cell[70575, 1803, 403, 10, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:2033225528", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "15"},
   CellID->2033225528]},
 "15"->{
  Cell[70575, 1803, 403, 10, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:2033225528", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "15"},
   CellID->2033225528]},
 "ID:1045911681"->{
  Cell[70981, 1815, 535, 15, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:1045911681", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "16"},
   CellID->1045911681]},
 "16"->{
  Cell[70981, 1815, 535, 15, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:1045911681", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "16"},
   CellID->1045911681]},
 "ID:1399274849"->{
  Cell[71519, 1832, 719, 20, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:1399274849", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "19"},
   CellID->1399274849]},
 "19"->{
  Cell[71519, 1832, 719, 20, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:1399274849", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "19"},
   CellID->1399274849]},
 "ID:338555625"->{
  Cell[72241, 1854, 351, 9, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:338555625", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "17"},
   CellID->338555625]},
 "17"->{
  Cell[72241, 1854, 351, 9, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:338555625", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "17"},
   CellID->338555625]},
 "Proof|ID:1636935908|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"->{
  Cell[72748, 1874, 161, 4, 21, "OpenProof",
   CellTags->
    "Proof|ID:1636935908|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
   CellID->1466604615]},
 "Proof|ID:1242901413|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"->{
  Cell[95918, 2416, 152, 4, 21, "OpenProof",
   CellTags->
    "Proof|ID:1242901413|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
   CellID->977639680]},
 "ID:806064238"->{
  Cell[118448, 2938, 333, 8, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:806064238", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "20"},
   CellID->806064238]},
 "20"->{
  Cell[118448, 2938, 333, 8, 19, "FormalTextInputFormula",
   CellTags->{
    "ID:806064238", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "20"},
   CellID->806064238]},
 "Proof|ID:806064238|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"->{
  Cell[118937, 2957, 160, 4, 21, "OpenProof",
   CellTags->
    "Proof|ID:806064238|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
   CellID->673042814]},
 "Info3539675509-8586739"->{
  Cell[141343, 3542, 186, 3, 42, "Print",
   CellTags->"Info3539675509-8586739",
   CellID->2056264234],
  Cell[141532, 3547, 5136, 163, 805, "Print",
   CellTags->"Info3539675509-8586739",
   CellID->1535545091]},
 "Info3538978900-6004912"->{
  Cell[172836, 4441, 250, 5, 43, "Print",
   CellTags->"Info3538978900-6004912",
   CellID->1287175721],
  Cell[173089, 4448, 2372, 66, 157, "Print",
   CellTags->"Info3538978900-6004912",
   CellID->632570368]},
 "Info3537267044-9498034"->{
  Cell[185887, 4773, 166, 3, 42, "Print",
   CellTags->"Info3537267044-9498034",
   CellID->2079055498],
  Cell[186056, 4778, 2948, 80, 210, "Print",
   CellTags->"Info3537267044-9498034",
   CellID->167383793]},
 "Info3539356428-4065218"->{
  Cell[189736, 4887, 178, 3, 42, "Print",
   CellTags->"Info3539356428-4065218",
   CellID->1486095324],
  Cell[189917, 4892, 1154, 32, 43, "Print",
   CellTags->"Info3539356428-4065218",
   CellID->1967918314]},
 "Info3539683012-7308960"->{
  Cell[587323, 14770, 827, 17, 82, "Print",
   CellTags->"Info3539683012-7308960",
   CellID->1687617131],
  Cell[588153, 14789, 21691, 549, 3073, "Print",
   CellTags->"Info3539683012-7308960",
   CellID->835166288]},
 "ID:412145113"->{
  Cell[656812, 16497, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]},
 "9"->{
  Cell[656812, 16497, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]},
 "Info3538898227-6972375"->{
  Cell[669327, 16863, 166, 3, 42, "Print",
   CellTags->"Info3538898227-6972375",
   CellID->1804662456],
  Cell[669496, 16868, 1569, 44, 62, "Print",
   CellTags->"Info3538898227-6972375",
   CellID->1518304074]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3540021296-1140785", 718190, 18060},
 {"Info3540021321-1140785", 718378, 18065},
 {"Info3539356218-4065218", 718566, 18070},
 {"ID:1636935908", 718796, 18077},
 {"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", 719055, 18083},
 {"1", 722150, 18164},
 {"ID:1242901413", 722364, 18170},
 {"10", 722568, 18176},
 {"ID:330716980", 722782, 18182},
 {"3", 722982, 18188},
 {"ID:1346427776", 723194, 18194},
 {"4", 723396, 18200},
 {"ID:1421485859", 723610, 18206},
 {"5", 723812, 18212},
 {"ID:1874491785", 724026, 18218},
 {"6", 724228, 18224},
 {"ID:1491028062", 724442, 18230},
 {"7", 724644, 18236},
 {"ID:822628176", 724857, 18242},
 {"8", 725057, 18248},
 {"ID:242022487", 725268, 18254},
 {"14", 725470, 18260},
 {"ID:1467107305", 725683, 18266},
 {"18", 725887, 18272},
 {"ID:2033225528", 726102, 18278},
 {"15", 726306, 18284},
 {"ID:1045911681", 726521, 18290},
 {"16", 726725, 18296},
 {"ID:1399274849", 726940, 18302},
 {"19", 727144, 18308},
 {"ID:338555625", 727358, 18314},
 {"17", 727559, 18320},
 {"Proof|ID:1636935908|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb", 727838, 18327},
 {"Proof|ID:1242901413|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb", 728097, 18334},
 {"ID:806064238", 728287, 18340},
 {"20", 728489, 18346},
 {"Proof|ID:806064238|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb", 728768, 18353},
 {"Info3539675509-8586739", 728968, 18359},
 {"Info3538978900-6004912", 729212, 18366},
 {"Info3537267044-9498034", 729454, 18373},
 {"Info3539356428-4065218", 729696, 18380},
 {"Info3539683012-7308960", 729938, 18387},
 {"ID:412145113", 730176, 18394},
 {"9", 730379, 18400},
 {"Info3538898227-6972375", 730603, 18406}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 157, 3, 30, "Input",
 CellID->647844452],
Cell[CellGroupData[{
Cell[761, 29, 276, 5, 62, "Print",
 CellTags->"Info3540021296-1140785"],
Cell[1040, 36, 1475, 36, 119, "Print",
 CellTags->"Info3540021296-1140785"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2564, 78, 211, 4, 30, "Input",
 CellID->1214652212],
Cell[CellGroupData[{
Cell[2800, 86, 184, 4, 43, "Print",
 CellTags->"Info3540021321-1140785"],
Cell[2987, 92, 1075, 28, 62, "Print",
 CellTags->"Info3540021321-1140785"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4111, 126, 114, 2, 74, "Section",
 CellID->1883098586],
Cell[CellGroupData[{
Cell[4250, 132, 79, 1, 30, "Input",
 CellID->969423281],
Cell[4332, 135, 108, 3, 30, "Output",
 CellID->1031919030]
}, Open  ]],
Cell[4455, 141, 120, 2, 30, "Text",
 CellID->1127140264],
Cell[CellGroupData[{
Cell[4600, 147, 167, 3, 30, "Input",
 CellID->1272349391],
Cell[4770, 152, 485, 10, 110, "Output",
 CellID->1188056829]
}, Open  ]],
Cell[CellGroupData[{
Cell[5292, 167, 121, 2, 30, "Input",
 CellID->1112831638],
Cell[5416, 171, 126, 2, 30, "Output",
 CellID->192561348]
}, Open  ]],
Cell[CellGroupData[{
Cell[5579, 178, 125, 2, 30, "Input",
 CellID->1960607375],
Cell[5707, 182, 279, 6, 30, "Output",
 CellID->359853186]
}, Open  ]],
Cell[CellGroupData[{
Cell[6023, 193, 144, 2, 30, "Input",
 CellID->2035695864],
Cell[6170, 197, 172, 3, 30, "Output",
 CellID->1427296780]
}, Open  ]],
Cell[CellGroupData[{
Cell[6379, 205, 142, 3, 23, "Computation",
 CellID->1579732474],
Cell[6524, 210, 10400, 244, 15, "ComputationInfo",
 CellID->1787457556],
Cell[16927, 456, 173, 4, 15, "ComputationResult",
 CellID->806071651]
}, Open  ]],
Cell[CellGroupData[{
Cell[17137, 465, 269, 5, 23, "Computation",
 CellID->194579654],
Cell[17409, 472, 10386, 244, 15, "ComputationInfo",
 CellID->1015121031],
Cell[27798, 718, 132, 4, 16, "ComputationResult",
 CellID->1486267798]
}, Open  ]],
Cell[CellGroupData[{
Cell[27967, 727, 370, 7, 23, "Computation",
 CellID->1211576278],
Cell[28340, 736, 10586, 245, 15, "ComputationInfo",
 CellID->1501088458],
Cell[38929, 983, 155, 5, 16, "ComputationResult",
 CellID->364455147]
}, Open  ]],
Cell[CellGroupData[{
Cell[39121, 993, 120, 2, 30, "Input",
 CellID->937089794],
Cell[39244, 997, 152, 3, 30, "Output",
 CellID->1249695720]
}, Open  ]],
Cell[CellGroupData[{
Cell[39433, 1005, 125, 2, 30, "Input",
 CellID->2107183564],
Cell[39561, 1009, 304, 7, 30, "Output",
 CellID->808225961]
}, Open  ]],
Cell[CellGroupData[{
Cell[39902, 1021, 219, 4, 23, "Computation",
 CellID->1828479595],
Cell[40124, 1027, 10585, 245, 15, "ComputationInfo",
 CellID->188800922],
Cell[50712, 1274, 132, 4, 16, "ComputationResult",
 CellID->1166427869]
}, Open  ]],
Cell[CellGroupData[{
Cell[50881, 1283, 146, 3, 23, "Computation",
 CellID->2023567208],
Cell[51030, 1288, 10585, 245, 15, "ComputationInfo",
 CellID->184524076],
Cell[61618, 1535, 132, 4, 16, "ComputationResult",
 CellID->1084185991]
}, Open  ]],
Cell[CellGroupData[{
Cell[61787, 1544, 298, 5, 30, "Input",
 CellID->1793037190],
Cell[CellGroupData[{
Cell[62110, 1553, 174, 3, 42, "Print",
 CellTags->"Info3539356218-4065218",
 CellID->577700309],
Cell[62287, 1558, 1153, 32, 43, "Print",
 CellTags->"Info3539356218-4065218",
 CellID->1169693318]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63501, 1597, 114, 2, 74, "Section",
 CellID->1677594751],
Cell[63618, 1601, 156, 3, 29, "GlobalDeclaration",
 CellID->993326560],
Cell[CellGroupData[{
Cell[63799, 1608, 58, 1, 38, "OpenEnvironment",
 CellID->1372089959],
Cell[63860, 1611, 185, 4, 21, "EnvironmentDeclaration",
 CellID->1326837667],
Cell[64048, 1617, 551, 15, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1636935908", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
 CellID->1636935908],
Cell[64602, 1634, 940, 26, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1242901413", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
 CellID->1242901413],
Cell[65545, 1662, 592, 15, 32, "FormalTextInputFormula",
 CellTags->{
  "ID:330716980", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
 CellID->330716980],
Cell[66140, 1679, 730, 18, 27, "FormalTextInputFormula",
 CellTags->{
  "ID:1346427776", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
 CellID->1346427776],
Cell[66873, 1699, 584, 14, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1421485859", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
 CellID->1421485859],
Cell[67460, 1715, 604, 14, 29, "FormalTextInputFormula",
 CellTags->{
  "ID:1874491785", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
 CellID->1874491785],
Cell[68067, 1731, 688, 16, 29, "FormalTextInputFormula",
 CellTags->{
  "ID:1491028062", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
 CellID->1491028062],
Cell[68758, 1749, 415, 11, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:822628176", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
 CellID->822628176],
Cell[69176, 1762, 621, 17, 30, "FormalTextInputFormula",
 CellTags->{
  "ID:242022487", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "14"},
 CellID->242022487],
Cell[69800, 1781, 772, 20, 30, "FormalTextInputFormula",
 CellTags->{
  "ID:1467107305", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "18"},
 CellID->1467107305],
Cell[70575, 1803, 403, 10, 19, "FormalTextInputFormula",
 CellTags->{
  "ID:2033225528", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "15"},
 CellID->2033225528],
Cell[70981, 1815, 535, 15, 19, "FormalTextInputFormula",
 CellTags->{
  "ID:1045911681", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "16"},
 CellID->1045911681],
Cell[71519, 1832, 719, 20, 40, "FormalTextInputFormula",
 CellTags->{
  "ID:1399274849", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "19"},
 CellID->1399274849],
Cell[72241, 1854, 351, 9, 19, "FormalTextInputFormula",
 CellTags->{
  "ID:338555625", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "17"},
 CellID->338555625],
Cell[72595, 1865, 65, 1, 24, "EndEnvironmentMarker",
 CellID->338734751]
}, Open  ]],
Cell[72675, 1869, 48, 1, 10, "CloseEnvironment",
 CellID->862514851],
Cell[CellGroupData[{
Cell[72748, 1874, 161, 4, 21, "OpenProof",
 CellTags->
  "Proof|ID:1636935908|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
 CellID->1466604615],
Cell[CellGroupData[{
Cell[72934, 1882, 4845, 107, 32, "ProofDisplay",
 CellID->1243407830],
Cell[77782, 1991, 18028, 416, 124, "ProofInfo",
 CellID->531782806]
}, Open  ]],
Cell[95825, 2410, 56, 1, 24, "CloseProof",
 CellID->693053660]
}, Open  ]],
Cell[CellGroupData[{
Cell[95918, 2416, 152, 4, 21, "OpenProof",
 CellTags->
  "Proof|ID:1242901413|Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb",
 CellID->977639680],
Cell[CellGroupData[{
Cell[96095, 2424, 7040, 152, 32, "ProofDisplay",
 CellID->492857777],
Cell[103138, 2578, 15144, 348, 15, "ProofInfo",
 CellID->950173719]
}, Open  ]],
Cell[118297, 2929, 56, 1, 24, "CloseProof",
 CellID->310898544]
}, Open  ]],
Cell[CellGroupData[{
Cell[118390, 2935, 55, 1, 38, "OpenEnvironment",
 CellID->1494302939],
Cell[118448, 2938, 333, 8, 19, "FormalTextInputFormula",
 CellTags->{
  "ID:806064238", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "20"},
 CellID->806064238],
Cell[118784, 2948, 65, 1, 24, "EndEnvironmentMarker",
 CellID->459179674]
}, Open  ]],
Cell[118864, 2952, 48, 1, 10, "CloseEnvironment",
 CellID->438602653],
Cell[CellGroupData[{
Cell[118937, 2957, 160, 4, 21, "OpenProof",
 CellTags->
  "Proof|ID:806064238|Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb",
 CellID->673042814],
Cell[CellGroupData[{
Cell[119122, 2965, 946, 23, 32, "ProofDisplay",
 CellID->298183240],
Cell[120071, 2990, 15608, 369, 15, "ProofInfo",
 CellID->632965013]
}, Open  ]],
Cell[135694, 3362, 56, 1, 24, "CloseProof",
 CellID->726662969]
}, Open  ]],
Cell[CellGroupData[{
Cell[135787, 3368, 169, 3, 30, "Input",
 CellID->300238506],
Cell[135959, 3373, 148, 3, 30, "Output",
 CellID->1046473869]
}, Open  ]],
Cell[CellGroupData[{
Cell[136144, 3381, 144, 2, 30, "Input",
 CellID->1930239317],
Cell[136291, 3385, 1423, 32, 202, "Output",
 CellID->1227301781]
}, Open  ]],
Cell[137729, 3420, 142, 2, 23, "IncludeArchive",
 CellID->1555117900],
Cell[CellGroupData[{
Cell[137896, 3426, 120, 2, 30, "Input",
 CellID->979690572],
Cell[138019, 3430, 154, 3, 30, "Output",
 CellID->1312949183]
}, Open  ]],
Cell[CellGroupData[{
Cell[138210, 3438, 159, 3, 30, "Input",
 CellID->422956012],
Cell[138372, 3443, 116, 2, 30, "Output",
 CellID->585837779]
}, Open  ]],
Cell[CellGroupData[{
Cell[138525, 3450, 415, 9, 30, "Input",
 CellID->151579708],
Cell[138943, 3461, 651, 12, 46, "Output",
 CellID->214870571]
}, Open  ]],
Cell[CellGroupData[{
Cell[139631, 3478, 206, 4, 30, "Input",
 CellID->545350332],
Cell[139840, 3484, 106, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139983, 3490, 301, 9, 30, "Input",
 CellID->1077746153],
Cell[140287, 3501, 316, 9, 30, "Output",
 CellID->2095499821]
}, Open  ]],
Cell[CellGroupData[{
Cell[140640, 3515, 244, 7, 30, "Input",
 CellID->2043383851],
Cell[140887, 3524, 160, 4, 30, "Output",
 CellID->1915901012]
}, Open  ]],
Cell[CellGroupData[{
Cell[141084, 3533, 234, 5, 30, "Input",
 CellID->127684017],
Cell[CellGroupData[{
Cell[141343, 3542, 186, 3, 42, "Print",
 CellTags->"Info3539675509-8586739",
 CellID->2056264234],
Cell[141532, 3547, 5136, 163, 805, "Print",
 CellTags->"Info3539675509-8586739",
 CellID->1535545091]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146717, 3716, 113, 2, 24, "Input",
 CellID->485415444],
Cell[146833, 3720, 175, 4, 30, "Output",
 CellID->956057954]
}, Open  ]],
Cell[CellGroupData[{
Cell[147045, 3729, 146, 3, 30, "Input",
 CellID->2127381523],
Cell[147194, 3734, 584, 17, 30, "Output",
 CellID->1121293163]
}, Open  ]],
Cell[CellGroupData[{
Cell[147815, 3756, 189, 4, 23, "Computation",
 CellID->890589206],
Cell[148007, 3762, 10722, 248, 15, "ComputationInfo",
 CellID->57797172],
Cell[158732, 4012, 107, 3, 15, "ComputationResult",
 CellID->730766664],
Cell[158842, 4017, 149, 4, 15, "ComputationResult",
 CellID->569418601]
}, Open  ]],
Cell[159006, 4024, 154, 4, 30, "Input",
 CellID->1626848086],
Cell[CellGroupData[{
Cell[159185, 4032, 256, 4, 30, "Input",
 CellID->121474739],
Cell[159444, 4038, 1090, 29, 106, "Output",
 CellID->463038785]
}, Open  ]],
Cell[CellGroupData[{
Cell[160571, 4072, 157, 3, 30, "Input",
 CellID->464939686],
Cell[160731, 4077, 105, 2, 30, "Output",
 CellID->1904542096]
}, Open  ]],
Cell[CellGroupData[{
Cell[160873, 4084, 215, 5, 30, "Input",
 CellID->1367627067],
Cell[161091, 4091, 206, 5, 30, "Output",
 CellID->1922865856]
}, Open  ]],
Cell[CellGroupData[{
Cell[161334, 4101, 70, 1, 30, "Input",
 CellID->1808356990],
Cell[161407, 4104, 9571, 281, 697, "Output",
 CellID->675168849]
}, Closed]],
Cell[CellGroupData[{
Cell[171015, 4390, 124, 2, 24, "Input",
 CellID->1574073290],
Cell[171142, 4394, 424, 8, 50, "Output",
 CellID->1282895222]
}, Open  ]],
Cell[CellGroupData[{
Cell[171603, 4407, 215, 4, 30, "Input",
 CellID->250611018],
Cell[171821, 4413, 748, 15, 158, "Output",
 CellID->520767582]
}, Open  ]],
Cell[CellGroupData[{
Cell[172606, 4433, 205, 4, 30, "Input",
 CellID->1141685749],
Cell[CellGroupData[{
Cell[172836, 4441, 250, 5, 43, "Print",
 CellTags->"Info3538978900-6004912",
 CellID->1287175721],
Cell[173089, 4448, 2372, 66, 157, "Print",
 CellTags->"Info3538978900-6004912",
 CellID->632570368]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175510, 4520, 208, 4, 30, "Input",
 CellID->1384747800],
Cell[175721, 4526, 156, 4, 30, "Output",
 CellID->1447158141]
}, Open  ]],
Cell[CellGroupData[{
Cell[175914, 4535, 243, 5, 30, "Input",
 CellID->427811824],
Cell[176160, 4542, 614, 17, 30, "Output",
 CellID->1350215185]
}, Open  ]],
Cell[CellGroupData[{
Cell[176811, 4564, 271, 5, 30, "Input",
 CellID->295057353],
Cell[177085, 4571, 5726, 94, 1470, "Output",
 CellID->2118018082]
}, Closed]],
Cell[182826, 4668, 253, 5, 24, "Input",
 CellID->881736748],
Cell[183082, 4675, 250, 5, 30, "Input",
 CellID->1972978571],
Cell[CellGroupData[{
Cell[183357, 4684, 235, 6, 30, "Input",
 CellID->1182975562],
Cell[183595, 4692, 738, 22, 39, "Output",
 CellID->1873252243]
}, Open  ]],
Cell[CellGroupData[{
Cell[184370, 4719, 169, 3, 30, "Input",
 CellID->2024511036],
Cell[184542, 4724, 154, 4, 30, "Output",
 CellID->229083148]
}, Open  ]],
Cell[CellGroupData[{
Cell[184733, 4733, 250, 5, 30, "Input",
 CellID->736852899],
Cell[184986, 4740, 139, 3, 30, "Output",
 CellID->832383090]
}, Open  ]],
Cell[CellGroupData[{
Cell[185162, 4748, 204, 4, 30, "Input",
 CellID->1370121138],
Cell[185369, 4754, 290, 7, 78, "Output",
 CellID->2037549048]
}, Open  ]],
Cell[CellGroupData[{
Cell[185696, 4766, 166, 3, 30, "Input",
 CellID->1955273032],
Cell[CellGroupData[{
Cell[185887, 4773, 166, 3, 42, "Print",
 CellTags->"Info3537267044-9498034",
 CellID->2079055498],
Cell[186056, 4778, 2948, 80, 210, "Print",
 CellTags->"Info3537267044-9498034",
 CellID->167383793]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[189053, 4864, 189, 4, 24, "Input",
 CellID->1541668732],
Cell[189245, 4870, 131, 3, 30, "Output",
 CellID->211843285]
}, Open  ]],
Cell[CellGroupData[{
Cell[189413, 4878, 298, 5, 30, "Input",
 CellID->1697196647],
Cell[CellGroupData[{
Cell[189736, 4887, 178, 3, 42, "Print",
 CellTags->"Info3539356428-4065218",
 CellID->1486095324],
Cell[189917, 4892, 1154, 32, 43, "Print",
 CellTags->"Info3539356428-4065218",
 CellID->1967918314]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191120, 4930, 260, 7, 50, "Input",
 CellID->2076419721],
Cell[191383, 4939, 521, 11, 126, "Output",
 CellID->762369429]
}, Open  ]],
Cell[CellGroupData[{
Cell[191941, 4955, 270, 5, 23, "Computation",
 CellID->1893908966],
Cell[192214, 4962, 10400, 244, 15, "ComputationInfo",
 CellID->1575277035],
Cell[202617, 5208, 131, 4, 16, "ComputationResult",
 CellID->109592331]
}, Open  ]],
Cell[CellGroupData[{
Cell[202785, 5217, 379, 6, 23, "Computation",
 CellID->88945358],
Cell[203167, 5225, 10585, 245, 15, "ComputationInfo",
 CellID->662960668],
Cell[213755, 5472, 154, 5, 16, "ComputationResult",
 CellID->95754422]
}, Open  ]],
Cell[CellGroupData[{
Cell[213946, 5482, 219, 4, 23, "Computation",
 CellID->1868443842],
Cell[214168, 5488, 10585, 245, 15, "ComputationInfo",
 CellID->670983249],
Cell[224756, 5735, 156, 5, 16, "ComputationResult",
 CellID->1294992259]
}, Open  ]],
Cell[CellGroupData[{
Cell[224949, 5745, 145, 3, 23, "Computation",
 CellID->546509625],
Cell[225097, 5750, 10586, 245, 15, "ComputationInfo",
 CellID->1241332751],
Cell[235686, 5997, 156, 5, 16, "ComputationResult",
 CellID->1029595611]
}, Open  ]],
Cell[CellGroupData[{
Cell[235879, 6007, 145, 3, 30, "Input",
 CellID->1330495127],
Cell[236027, 6012, 148, 4, 30, "Output",
 CellID->582396549]
}, Open  ]],
Cell[CellGroupData[{
Cell[236212, 6021, 119, 2, 30, "Input",
 CellID->36095736],
Cell[236334, 6025, 105, 2, 30, "Output",
 CellID->1692759908]
}, Open  ]],
Cell[CellGroupData[{
Cell[236476, 6032, 125, 2, 30, "Input",
 CellID->2025658266],
Cell[236604, 6036, 257, 6, 30, "Output",
 CellID->837323898]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236910, 6048, 117, 2, 74, "Section",
 CellID->1498334619],
Cell[CellGroupData[{
Cell[237052, 6054, 429, 10, 29, "Computation",
 CellID->98487382],
Cell[237484, 6066, 9812, 235, 15, "ComputationInfo",
 CellID->1479163346],
Cell[247299, 6303, 363, 12, 24, "ComputationResult",
 CellID->1504671994]
}, Open  ]],
Cell[CellGroupData[{
Cell[247699, 6320, 241, 7, 29, "Computation",
 CellID->1791385580],
Cell[247943, 6329, 9810, 235, 15, "ComputationInfo",
 CellID->14065605],
Cell[257756, 6566, 385, 12, 24, "ComputationResult",
 CellID->1201509063]
}, Open  ]],
Cell[CellGroupData[{
Cell[258178, 6583, 315, 9, 29, "Computation",
 CellID->1674073568],
Cell[258496, 6594, 9811, 235, 15, "ComputationInfo",
 CellID->449726254],
Cell[268310, 6831, 515, 13, 15, "ComputationResult",
 CellID->754137009]
}, Open  ]],
Cell[CellGroupData[{
Cell[268862, 6849, 315, 9, 29, "Computation",
 CellID->1845651749],
Cell[269180, 6860, 9776, 235, 15, "ComputationInfo",
 CellID->108509328],
Cell[278959, 7097, 412, 13, 24, "ComputationResult",
 CellID->737506521]
}, Open  ]],
Cell[CellGroupData[{
Cell[279408, 7115, 390, 11, 33, "Computation",
 CellID->1431049582],
Cell[279801, 7128, 9811, 235, 15, "ComputationInfo",
 CellID->1185581040],
Cell[289615, 7365, 319, 8, 15, "ComputationResult",
 CellID->582741343]
}, Open  ]],
Cell[CellGroupData[{
Cell[289971, 7378, 336, 9, 29, "Computation",
 CellID->203455808],
Cell[290310, 7389, 9810, 235, 15, "ComputationInfo",
 CellID->145952955],
Cell[300123, 7626, 336, 8, 15, "ComputationResult",
 CellID->1753205452]
}, Open  ]],
Cell[CellGroupData[{
Cell[300496, 7639, 384, 10, 29, "Computation",
 CellID->30211731],
Cell[300883, 7651, 9812, 235, 15, "ComputationInfo",
 CellID->2129720458],
Cell[310698, 7888, 409, 13, 24, "ComputationResult",
 CellID->754575839]
}, Open  ]],
Cell[CellGroupData[{
Cell[311144, 7906, 341, 10, 29, "Computation",
 CellID->1873687787],
Cell[311488, 7918, 9812, 235, 15, "ComputationInfo",
 CellID->1253293235],
Cell[321303, 8155, 541, 14, 15, "ComputationResult",
 CellID->1218379290]
}, Open  ]],
Cell[CellGroupData[{
Cell[321881, 8174, 340, 10, 29, "Computation",
 CellID->811697226],
Cell[322224, 8186, 9777, 235, 15, "ComputationInfo",
 CellID->1518608613],
Cell[332004, 8423, 436, 14, 24, "ComputationResult",
 CellID->825684985]
}, Open  ]],
Cell[CellGroupData[{
Cell[332477, 8442, 142, 3, 23, "Computation",
 CellID->1011115407],
Cell[332622, 8447, 9776, 235, 15, "ComputationInfo",
 CellID->445048633],
Cell[342401, 8684, 196, 4, 15, "ComputationResult",
 CellID->1204156752]
}, Open  ]],
Cell[CellGroupData[{
Cell[342634, 8693, 141, 3, 23, "Computation",
 CellID->277393357],
Cell[342778, 8698, 9812, 235, 15, "ComputationInfo",
 CellID->1246334821],
Cell[352593, 8935, 148, 3, 15, "ComputationResult",
 CellID->280699869]
}, Open  ]],
Cell[CellGroupData[{
Cell[352778, 8943, 439, 12, 33, "Computation",
 CellID->2073870508],
Cell[353220, 8957, 9812, 235, 15, "ComputationInfo",
 CellID->1700297099],
Cell[363035, 9194, 332, 9, 15, "ComputationResult",
 CellID->778293369]
}, Open  ]],
Cell[CellGroupData[{
Cell[363404, 9208, 805, 21, 41, "Computation",
 CellID->1152856210],
Cell[364212, 9231, 9776, 235, 15, "ComputationInfo",
 CellID->960157500],
Cell[373991, 9468, 2100, 55, 36, "ComputationResult",
 CellID->690517246]
}, Open  ]],
Cell[CellGroupData[{
Cell[376128, 9528, 256, 7, 30, "Computation",
 CellID->1615862783],
Cell[376387, 9537, 9776, 235, 15, "ComputationInfo",
 CellID->944167556],
Cell[386166, 9774, 203, 4, 15, "ComputationResult",
 CellID->1238531527]
}, Open  ]],
Cell[CellGroupData[{
Cell[386406, 9783, 297, 8, 30, "Computation",
 CellID->1201037010],
Cell[386706, 9793, 9775, 235, 15, "ComputationInfo",
 CellID->540673537],
Cell[396484, 10030, 128, 2, 15, "ComputationResult",
 CellID->807696050]
}, Open  ]],
Cell[CellGroupData[{
Cell[396649, 10037, 273, 7, 30, "Computation",
 CellID->921769592],
Cell[396925, 10046, 9777, 235, 15, "ComputationInfo",
 CellID->1465305827],
Cell[406705, 10283, 104, 2, 15, "ComputationResult",
 CellID->168737142]
}, Open  ]],
Cell[CellGroupData[{
Cell[406846, 10290, 449, 12, 41, "Computation",
 CellID->165054078],
Cell[407298, 10304, 9777, 235, 15, "ComputationInfo",
 CellID->1604596859],
Cell[417078, 10541, 200, 4, 15, "ComputationResult",
 CellID->244870717]
}, Open  ]],
Cell[CellGroupData[{
Cell[417315, 10550, 495, 12, 43, "Computation",
 CellID->514390584],
Cell[417813, 10564, 9777, 235, 15, "ComputationInfo",
 CellID->1113360533],
Cell[427593, 10801, 695, 23, 18, "ComputationResult",
 CellID->1682361377]
}, Open  ]],
Cell[CellGroupData[{
Cell[428325, 10829, 521, 12, 43, "Computation",
 CellID->1089040068],
Cell[428849, 10843, 9777, 235, 15, "ComputationInfo",
 CellID->1098517706],
Cell[438629, 11080, 438, 15, 18, "ComputationResult",
 CellID->902180314]
}, Open  ]],
Cell[CellGroupData[{
Cell[439104, 11100, 737, 18, 40, "Computation",
 CellID->1030427555],
Cell[439844, 11120, 9812, 235, 15, "ComputationInfo",
 CellID->2099805360],
Cell[449659, 11357, 102, 2, 15, "ComputationResult",
 CellID->993919463]
}, Open  ]],
Cell[CellGroupData[{
Cell[449798, 11364, 725, 18, 40, "Computation",
 CellID->626819530],
Cell[450526, 11384, 9811, 235, 15, "ComputationInfo",
 CellID->1982206321],
Cell[460340, 11621, 105, 2, 15, "ComputationResult",
 CellID->468602894]
}, Open  ]],
Cell[CellGroupData[{
Cell[460482, 11628, 829, 20, 40, "Computation",
 CellID->1118177723],
Cell[461314, 11650, 9812, 235, 15, "ComputationInfo",
 CellID->1426088242],
Cell[471129, 11887, 106, 2, 15, "ComputationResult",
 CellID->1300723109]
}, Open  ]],
Cell[CellGroupData[{
Cell[471272, 11894, 802, 19, 40, "Computation",
 CellID->2063520275],
Cell[472077, 11915, 9811, 235, 15, "ComputationInfo",
 CellID->663247889],
Cell[481891, 12152, 376, 11, 15, "ComputationResult",
 CellID->725979512]
}, Open  ]],
Cell[CellGroupData[{
Cell[482304, 12168, 828, 20, 40, "Computation",
 CellID->941369956],
Cell[483135, 12190, 9812, 235, 15, "ComputationInfo",
 CellID->1592498020],
Cell[492950, 12427, 787, 27, 35, "ComputationResult",
 CellID->1882998958]
}, Open  ]],
Cell[CellGroupData[{
Cell[493774, 12459, 759, 18, 30, "Computation",
 CellID->952406679],
Cell[494536, 12479, 9812, 235, 15, "ComputationInfo",
 CellID->1956997315],
Cell[504351, 12716, 1255, 41, 54, "ComputationResult",
 CellID->515926111]
}, Open  ]],
Cell[CellGroupData[{
Cell[505643, 12762, 790, 19, 30, "Computation",
 CellID->1263723114],
Cell[506436, 12783, 9746, 234, 15, "ComputationInfo",
 CellID->1865004037],
Cell[516185, 13019, 755, 24, 25, "ComputationResult",
 CellID->627422604]
}, Open  ]],
Cell[CellGroupData[{
Cell[516977, 13048, 312, 10, 31, "Computation",
 CellID->574544294],
Cell[517292, 13060, 10385, 244, 15, "ComputationInfo",
 CellID->701678887],
Cell[527680, 13306, 634, 18, 26, "ComputationResult",
 CellID->699868854]
}, Open  ]],
Cell[CellGroupData[{
Cell[528351, 13329, 424, 13, 30, "Computation",
 CellID->500928076],
Cell[528778, 13344, 10400, 244, 15, "ComputationInfo",
 CellID->1158250773],
Cell[539181, 13590, 804, 23, 35, "ComputationResult",
 CellID->79214255]
}, Open  ]],
Cell[CellGroupData[{
Cell[540022, 13618, 416, 10, 23, "Computation",
 CellID->1853937483],
Cell[540441, 13630, 10523, 245, 15, "ComputationInfo",
 CellID->1916739404],
Cell[550967, 13877, 269, 6, 15, "ComputationResult",
 CellID->559235197]
}, Open  ]],
Cell[CellGroupData[{
Cell[551273, 13888, 502, 11, 23, "Computation",
 CellID->1648032914],
Cell[551778, 13901, 10522, 245, 15, "ComputationInfo",
 CellID->1856435548],
Cell[562303, 14148, 189, 5, 15, "ComputationResult",
 CellID->186024610]
}, Open  ]],
Cell[CellGroupData[{
Cell[562529, 14158, 892, 22, 47, "Computation",
 CellID->1589954603],
Cell[563424, 14182, 10522, 245, 15, "ComputationInfo",
 CellID->340008834],
Cell[573949, 14429, 934, 28, 35, "ComputationResult",
 CellID->2010995085]
}, Open  ]],
Cell[CellGroupData[{
Cell[574920, 14462, 897, 21, 40, "Computation",
 CellID->124492887],
Cell[575820, 14485, 10523, 245, 15, "ComputationInfo",
 CellID->1940060739],
Cell[586346, 14732, 775, 26, 35, "ComputationResult",
 CellID->597532123]
}, Open  ]],
Cell[CellGroupData[{
Cell[587158, 14763, 140, 3, 30, "Input",
 CellID->1706377894],
Cell[CellGroupData[{
Cell[587323, 14770, 827, 17, 82, "Print",
 CellTags->"Info3539683012-7308960",
 CellID->1687617131],
Cell[588153, 14789, 21691, 549, 3073, "Print",
 CellTags->"Info3539683012-7308960",
 CellID->835166288]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609893, 15344, 148, 3, 30, "Input",
 CellID->452348970],
Cell[610044, 15349, 834, 18, 254, "Output",
 CellID->399279262]
}, Open  ]],
Cell[CellGroupData[{
Cell[610915, 15372, 426, 13, 30, "Computation",
 CellID->1923940186],
Cell[611344, 15387, 10357, 244, 15, "ComputationInfo",
 CellID->652674330],
Cell[621704, 15633, 702, 22, 25, "ComputationResult",
 CellID->1971377609]
}, Open  ]],
Cell[CellGroupData[{
Cell[622443, 15660, 149, 3, 30, "Input",
 CellID->1411710637],
Cell[622595, 15665, 969, 21, 286, "Output",
 CellID->391066088]
}, Open  ]],
Cell[CellGroupData[{
Cell[623601, 15691, 214, 5, 23, "Computation",
 CellID->1392099689],
Cell[623818, 15698, 10400, 244, 15, "ComputationInfo",
 CellID->1373321664],
Cell[634221, 15944, 288, 6, 15, "ComputationResult",
 CellID->2011074225]
}, Open  ]],
Cell[CellGroupData[{
Cell[634546, 15955, 320, 8, 23, "Computation",
 CellID->1094429406],
Cell[634869, 15965, 10400, 244, 15, "ComputationInfo",
 CellID->1455835425],
Cell[645272, 16211, 290, 5, 15, "ComputationResult",
 CellID->380662198]
}, Open  ]],
Cell[CellGroupData[{
Cell[645599, 16221, 165, 4, 23, "Computation",
 CellID->1236848492],
Cell[645767, 16227, 10399, 244, 15, "ComputationInfo",
 CellID->690458640],
Cell[656169, 16473, 130, 2, 15, "ComputationResult",
 CellID->2049673273]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[656348, 16481, 115, 2, 74, "Section",
 CellID->332513239],
Cell[CellGroupData[{
Cell[656488, 16487, 58, 1, 38, "OpenEnvironment",
 CellID->1770062998],
Cell[656549, 16490, 260, 5, 29, "EnvironmentDeclaration",
 CellID->1574886120],
Cell[656812, 16497, 1173, 29, 40, "FormalTextInputFormula",
 CellTags->{
  "ID:412145113", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
 CellID->412145113],
Cell[657988, 16528, 66, 1, 24, "EndEnvironmentMarker",
 CellID->1300223080]
}, Open  ]],
Cell[658069, 16532, 49, 1, 10, "CloseEnvironment",
 CellID->1068241259],
Cell[CellGroupData[{
Cell[658143, 16537, 162, 3, 30, "Input",
 CellID->1565406460],
Cell[658308, 16542, 9706, 282, 697, "Output",
 CellID->1874911000]
}, Closed]],
Cell[CellGroupData[{
Cell[668051, 16829, 167, 3, 24, "Input",
 CellID->1391707244],
Cell[668221, 16834, 829, 16, 142, "Output",
 CellID->365102397]
}, Open  ]],
Cell[CellGroupData[{
Cell[669087, 16855, 215, 4, 30, "Input",
 CellID->2124154183],
Cell[CellGroupData[{
Cell[669327, 16863, 166, 3, 42, "Print",
 CellTags->"Info3538898227-6972375",
 CellID->1804662456],
Cell[669496, 16868, 1569, 44, 62, "Print",
 CellTags->"Info3538898227-6972375",
 CellID->1518304074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671114, 16918, 320, 7, 30, "Input",
 CellID->209530079],
Cell[671437, 16927, 1085, 24, 318, "Output",
 CellID->389968434]
}, Closed]],
Cell[CellGroupData[{
Cell[672559, 16956, 266, 6, 17, "Computation",
 CellID->205321431],
Cell[672828, 16964, 10400, 244, 15, "ComputationInfo",
 CellID->2049777050],
Cell[683231, 17210, 412, 8, 15, "ComputationResult",
 CellID->666721698]
}, Open  ]],
Cell[CellGroupData[{
Cell[683680, 17223, 240, 5, 23, "Computation",
 CellID->2121083924],
Cell[683923, 17230, 10639, 247, 15, "ComputationInfo",
 CellID->803931086],
Cell[694565, 17479, 554, 16, 15, "ComputationResult",
 CellID->2082819044]
}, Open  ]],
Cell[CellGroupData[{
Cell[695156, 17500, 266, 6, 23, "Computation",
 CellID->533105519],
Cell[695425, 17508, 10603, 248, 15, "ComputationInfo",
 CellID->2082900615],
Cell[706031, 17758, 545, 18, 15, "ComputationResult",
 CellID->863356687]
}, Open  ]],
Cell[CellGroupData[{
Cell[706613, 17781, 292, 6, 23, "Computation",
 CellID->1034884285],
Cell[706908, 17789, 10611, 247, 15, "ComputationInfo",
 CellID->1612224523],
Cell[717522, 18038, 171, 4, 15, "ComputationResult",
 CellID->2141439813]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
