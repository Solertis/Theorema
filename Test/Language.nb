(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    469350,      11916]
NotebookOptionsPosition[    447060,      11204]
NotebookOutlinePosition[    454717,      11430]
CellTagsIndexPosition[    453923,      11403]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Language", "Section",
 CellChangeTimes->{{3.537190425061917*^9, 3.537190440789052*^9}},
 CellID->1677594751],

Cell[BoxData[
 UnderscriptBox["\[ForAll]", "a"]], "GlobalDeclaration",
 CellChangeTimes->{{3.535980654706128*^9, 3.535980681963633*^9}},
 CellID->993326560],

Cell[CellGroupData[{

Cell["Definition", "OpenEnvironment",
 CellID->1372089959],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", "a", "]"}], "\[Implies]"}]], "EnvironmentDeclaration",
 CellChangeTimes->{{3.535980720358661*^9, 3.535980733035747*^9}},
 CellID->1326837667],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{
   RowBox[{"P", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"3", "x"}]}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(1)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.537251620630519*^9, 3.537251625140079*^9}},
 CellTags->{
  "ID:1636935908", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
 CellID->1636935908],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", 
    RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"x", ",", "y"}], "]"}], 
    TagBox[
     RowBox[{
     ":", "\[NegativeThickSpace]\[NegativeThinSpace]", 
      "\[DoubleLongLeftRightArrow]"}],
     Identity,
     SyntaxForm->"a\[Implies]b"], 
    RowBox[{
     RowBox[{"Q", "[", "x", "]"}], "\[Vee]", 
     RowBox[{"Q", "[", "y", "]"}]}]}], ")"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(10)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535965376725445*^9, 3.535965380252821*^9}, {3.537262982084611*^9, 
  3.53726301165244*^9}, {3.537263405520759*^9, 3.537263421684412*^9}},
 CellTags->{
  "ID:1242901413", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
 CellID->1242901413],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{"z", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(3)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}},
 CellTags->{
  "ID:330716980", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
 CellID->330716980],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", "A"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", "x", "]"}], ":=", 
    RowBox[{"5", "+", "x"}]}], ")"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(4)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966322111476*^9}, {
  3.537263029577858*^9, 3.537263032798383*^9}, {3.53726313081597*^9, 
  3.53726313345381*^9}},
 CellTags->{
  "ID:1346427776", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
 CellID->1346427776],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", 
    RowBox[{"y", "\[Element]", "A"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(5)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}},
 CellTags->{
  "ID:1421485859", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
 CellID->1421485859],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"Q", "[", "x", "]"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(6)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}, {
  3.535968262766251*^9, 3.535968280447299*^9}},
 CellTags->{
  "ID:1874491785", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
 CellID->1874491785],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"Q", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(7)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535958935877088*^9, 3.535958966461132*^9}, {
  3.535959639869552*^9, 3.53595964787096*^9}, {3.535965185291078*^9, 
  3.535965187601905*^9}, {3.535966312821104*^9, 3.535966343267423*^9}, {
  3.535968262766251*^9, 3.535968301137401*^9}, {3.535968350312416*^9, 
  3.535968351793141*^9}},
 CellTags->{
  "ID:1491028062", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
 CellID->1491028062],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", ",", "y", ",", "z"}]], 
  RowBox[{"A", "[", "x", "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(8)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.535979933529081*^9, 3.535979941041089*^9}},
 CellTags->{
  "ID:822628176", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
 CellID->822628176],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->338734751]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->862514851],

Cell[CellGroupData[{

Cell["Proof of (8)", "OpenProof",
 CellTags->"Proof:(8)",
 CellID->1355865205],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Show proof\"\>",
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Provers`Common`Private`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     "Initial", {{
       "ID:822628176", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`z$TM]]], True, 
          Theorema`Knowledge`A$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
       "(8)"}, {{{
        "ID:1346427776", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SETRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Knowledge`A$TM]], True, 
           Theorema`Language`EqualDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Plus$TM[5, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], "(4)"}, {{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
        "(10)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], "(1)"}}], 
     Theorema`Provers`Common`Private`PRFSIT$[{{
       "ID:822628176", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
           Theorema`Language`SIMPRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`z$TM]]], True, 
          Theorema`Knowledge`A$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
       "(8)"}, {{{
        "ID:1346427776", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SETRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Knowledge`A$TM]], True, 
           Theorema`Language`EqualDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Plus$TM[5, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], "(4)"}, {{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
        "(10)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
        "(1)"}}, {}, "pending", "InferenceRules" -> 
      Theorema`Provers`Common`Private`inferenceRules[
       Theorema`Interface`GUI`Private`prover1]]]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->174572013],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = True}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(8)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(8)", "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"(4)\"\>", ",", "\<\"(10)\"\>", 
                    ",", "\<\"(1)\"\>"}], "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{"(4)", "(10)", "(1)"}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setProveEnv[{{
                 "ID:822628176", 
                  "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, 
                 Theorema`Language`Forall$TM[
                  Theorema`Language`RNG$[
                   Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
                  Theorema`Language`Implies$TM[
                   Theorema`Knowledge`S$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
                   Theorema`Language`Forall$TM[
                    Theorema`Language`RNG$[
                    Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
                    Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
                    Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`z$TM]]], True, 
                    Theorema`Knowledge`A$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
                 "(8)"}, {{{
                  "ID:1242901413", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}, {{"ID:1346427776", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}, {{"ID:1636935908", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
                 "Exists", False}, {"For", False}, {"Forall", False}, {
                 "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
                 "Implies", False}, {"Intersection", False}, {
                 "Less", False}, {"LessEqual", False}, {"Module", False}, {
                 "Not", False}, {"Or", False}, {"Plus", False}, {
                 "SetEqual", False}, {"Switch", False}, {"Times", False}, {
                 "Union", False}, {"Which", False}, {"While", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(8)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{"(4)", "(10)", "(1)"}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setProveEnv[{{
          "ID:822628176", 
           "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SIMPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
           Theorema`Language`Implies$TM[
            Theorema`Knowledge`S$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
            Theorema`Language`Forall$TM[
             Theorema`Language`RNG$[
              Theorema`Language`SIMPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
              Theorema`Language`SIMPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
              Theorema`Language`SIMPRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`z$TM]]], True, 
             Theorema`Knowledge`A$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
          "(8)"}, {{{
           "ID:1242901413", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}, {{
           "ID:1346427776", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}, {{
           "ID:1636935908", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
          "Exists", False}, {"For", False}, {"Forall", False}, {
          "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
          "Implies", False}, {"Intersection", False}, {"Less", False}, {
          "LessEqual", False}, {"Module", False}, {"Not", False}, {
          "Or", False}, {"Plus", False}, {"SetEqual", False}, {
          "Switch", False}, {"Times", False}, {"Union", False}, {
          "Which", False}, {"While", False}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->1079949544]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->723795043]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proof of (7)", "OpenProof",
 CellTags->"Proof:(7)",
 CellID->1505203964],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Show proof\"\>", "CellLabel",
   StripOnInput->False],
  Appearance->Automatic,
  ButtonFunction:>Theorema`Common`displayProof[
    Theorema`Provers`Common`Private`PRFOBJ$[
     Theorema`Provers`Common`Private`PRFINFO$[
     "Initial", {{
       "ID:1491028062", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Knowledge`Q$TM], 
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
            Theorema`Knowledge`Q$TM], 
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 
            Theorema`Knowledge`Q$TM]], True, 
          Theorema`Knowledge`P$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
       "(7)"}, {{{
        "ID:330716980", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 1, 
             Theorema`Knowledge`n$TM, 4]], True, 
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], "(3)"}, {{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
        "(10)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], "(1)"}}], 
     Theorema`Provers`Common`Private`PRFSIT$[{{
       "ID:1491028062", 
        "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
       Theorema`Language`Forall$TM[
        Theorema`Language`RNG$[
         Theorema`Language`SIMPRNG$[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
        Theorema`Language`Implies$TM[
         Theorema`Knowledge`S$TM[
          Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
         Theorema`Language`Forall$TM[
          Theorema`Language`RNG$[
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
            Theorema`Knowledge`Q$TM], 
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
            Theorema`Knowledge`Q$TM], 
           Theorema`Language`PREDRNG$[
            Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 
            Theorema`Knowledge`Q$TM]], True, 
          Theorema`Knowledge`P$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
       "(7)"}, {{{
        "ID:330716980", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 4], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 1, 
             Theorema`Knowledge`n$TM, 4]], True, 
           Theorema`Knowledge`P$TM[
            Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], "(3)"}, {{
        "ID:1242901413", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1], 
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`IffDef$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
             Theorema`Language`VAR$[Theorema`Knowledge`y$TM]], 
            Theorema`Language`Or$TM[
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
             Theorema`Knowledge`Q$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`y$TM]]]]]]], 
        "(10)"}, {{
        "ID:1636935908", 
         "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
        Theorema`Language`Forall$TM[
         Theorema`Language`RNG$[
          Theorema`Language`SIMPRNG$[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
         Theorema`Language`Implies$TM[
          Theorema`Knowledge`S$TM[
           Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`STEPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
             Theorema`Knowledge`n$TM, 1]], True, 
           Theorema`Language`Equal$TM[
            Theorema`Knowledge`P$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
            Theorema`Language`Times$TM[3, 
             Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]]], 
        "(1)"}}, {}, "pending", "InferenceRules" -> 
      Theorema`Provers`Common`Private`inferenceRules[
       Theorema`Interface`GUI`Private`prover1]]]],
  Evaluator->Automatic,
  ImageSize->Automatic,
  Method->"Queued"]], "ProofDisplay",
 CellID->405948738],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Proof goal\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox["\<\"(7)\"\>", "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Proof goal", "PIContent"], 
                  Style["(7)", "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Knowledge used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"(3)\"\>", ",", "\<\"(10)\"\>", 
                    ",", "\<\"(1)\"\>"}], "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in proof", "PIContent"], 
                  Style[{"(3)", "(10)", "(1)"}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Builtins used in proof\"\>", "PIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "PIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in proof", "PIContent"], 
                  Style[{}, "PIContent"]}, False]],
               DynamicModuleValues:>{}],
              Setting[#, {0}]& ]},
            {
             ButtonBox["\<\"Reset environment\"\>",
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setProveEnv[{{
                 "ID:1491028062", 
                  "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, 
                 Theorema`Language`Forall$TM[
                  Theorema`Language`RNG$[
                   Theorema`Language`SIMPRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
                  Theorema`Language`Implies$TM[
                   Theorema`Knowledge`S$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
                   Theorema`Language`Forall$TM[
                    Theorema`Language`RNG$[
                    Theorema`Language`PREDRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
                    Theorema`Knowledge`Q$TM], 
                    Theorema`Language`PREDRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
                    Theorema`Knowledge`Q$TM], 
                    Theorema`Language`PREDRNG$[
                    Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 
                    Theorema`Knowledge`Q$TM]], True, 
                    Theorema`Knowledge`P$TM[
                    Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
                 "(7)"}, {{{
                  "ID:1242901413", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}, {{"ID:1636935908", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}, {{"ID:330716980", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
                 "Exists", False}, {"For", False}, {"Forall", False}, {
                 "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
                 "Implies", False}, {"Intersection", False}, {
                 "Less", False}, {"LessEqual", False}, {"Module", False}, {
                 "Not", False}, {"Or", False}, {"Plus", False}, {
                 "SetEqual", False}, {"Switch", False}, {"Times", False}, {
                 "Union", False}, {"Which", False}, {"While", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Proof goal", "PIContent"], 
         Style["(7)", "PIContent"]}], 
       OpenerView[{
         Style["Knowledge used in proof", "PIContent"], 
         Style[{"(3)", "(10)", "(1)"}, "PIContent"]}], 
       OpenerView[{
         Style["Builtins used in proof", "PIContent"], 
         Style[{}, "PIContent"]}], 
       Button["Reset environment", 
        Theorema`Interface`GUI`Private`setProveEnv[{{
          "ID:1491028062", 
           "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
          Theorema`Language`Forall$TM[
           Theorema`Language`RNG$[
            Theorema`Language`SIMPRNG$[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]]], True, 
           Theorema`Language`Implies$TM[
            Theorema`Knowledge`S$TM[
             Theorema`Language`VAR$[Theorema`Knowledge`a$TM]], 
            Theorema`Language`Forall$TM[
             Theorema`Language`RNG$[
              Theorema`Language`PREDRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
               Theorema`Knowledge`Q$TM], 
              Theorema`Language`PREDRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
               Theorema`Knowledge`Q$TM], 
              Theorema`Language`PREDRNG$[
               Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 
               Theorema`Knowledge`Q$TM]], True, 
             Theorema`Knowledge`P$TM[
              Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], 
          "(7)"}, {{{
           "ID:1242901413", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}, {{
           "ID:1636935908", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}, {{
           "ID:330716980", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", False}, {"Do", False}, {"Equal", False}, {
          "Exists", False}, {"For", False}, {"Forall", False}, {
          "Greater", False}, {"GreaterEqual", False}, {"Iff", False}, {
          "Implies", False}, {"Intersection", False}, {"Less", False}, {
          "LessEqual", False}, {"Module", False}, {"Not", False}, {
          "Or", False}, {"Plus", False}, {"SetEqual", False}, {
          "Switch", False}, {"Times", False}, {"Union", False}, {
          "Which", False}, {"While", False}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ProofInfo",
 CellID->296346841]
}, Open  ]],

Cell["\[EmptySquare]", "CloseProof",
 CellID->62855072]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetSelectedNotebook", "[", 
  RowBox[{"NotebookObject", "[", 
   PanelBox[GridBox[{
      {
       TooltipBox[
        ButtonBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "ManipulatePasteIcon"],
           ImageSizeCache->{13., {4., 9.}}],
          DynamicUpdating->True],
         Appearance->{Automatic, None},
         BaseStyle->{},
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetSelectedNotebook[
             NotebookObject[
              FrontEndObject[
               LinkObject["7y8_shm", 1, 1]], 99]]}],
         Evaluator->None,
         Method->"Queued"],
        DynamicBox[
         FEPrivate`FrontEndResource[
         "FEStrings", "NotebookObjectToTheFront"]]], 
       StyleBox["\<\"Proof Navigator\"\>",
        StripOnInput->False,
        FontColor->GrayLevel[0.5]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    FrameMargins->{{4, 5}, {4, 4}}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.538218882700357*^9, 3.538218915132938*^9}},
 CellID->2958440],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[SkeletonIndicator]", "NotebookObject", "\[SkeletonIndicator]"}],
  NotebookObject[
   Panel[{{
      Tooltip[
       Button[
        Dynamic[
         RawBoxes[
          FEPrivate`FrontEndResource["FEBitmaps", "ManipulatePasteIcon"]], 
         ImageSizeCache -> {13., {4., 9.}}], 
        FrontEndExecute[{
          FrontEnd`SetSelectedNotebook[
           NotebookObject[
            FrontEndObject[
             LinkObject["7y8_shm", 1, 1]], 99]]}], 
        Appearance -> {Automatic, None}, BaseStyle -> {}, Evaluator -> None, 
        Method -> "Queued"], 
       Dynamic[
        RawBoxes[
         FEPrivate`FrontEndResource[
         "FEStrings", "NotebookObjectToTheFront"]]]], 
      Style["Proof Navigator", FontColor -> GrayLevel[0.5]]}}, 
    FrameMargins -> {{4, 5}, {4, 4}}]],
  Editable->False]], "Output",
 CellChangeTimes->{3.538218916479267*^9},
 CellID->1113415141]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NotebookClose", "[", 
  RowBox[{
   RowBox[{"Notebooks", "[", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.538218988091267*^9, 3.538218992584816*^9}, {
  3.538219044449741*^9, 3.538219069101886*^9}},
 CellID->1693425372],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Notebooks", "[", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"Visible", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.538218932482392*^9, 3.53821894587177*^9}, {
   3.538219090356432*^9, 3.538219117115148*^9}, {3.538219171922462*^9, 
   3.538219182639329*^9}, 3.538219701562311*^9},
 CellID->950168092],

Cell[BoxData[
 RowBox[{
  RowBox[{"Theorema`Common`$TMAproofObject", "=", 
   RowBox[{"Theorema`Provers`Common`Private`PROOFOBJ$", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.538217764996208*^9, 3.53821777139882*^9}, {
   3.538303865389816*^9, 3.538303886200738*^9}, {3.538303972693337*^9, 
   3.53830399500727*^9}, 3.538310003913487*^9},
 CellID->1604745324],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "NotebookPut", "]"}]], "Input",
 CellChangeTimes->{{3.53830970839711*^9, 3.538309711200081*^9}, {
  3.538309794515407*^9, 3.538309798626715*^9}},
 CellID->1384747800],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Protected", ",", "ReadProtected"}], "}"}]], "Output",
 CellChangeTimes->{3.538309798918245*^9},
 CellID->1447158141]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Provers`Common`Private`$TMAproofNotebook", "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.538309435579795*^9, 3.538309440248973*^9}, {
  3.538312480337864*^9, 3.538312483504095*^9}},
 CellID->427811824],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"NotebookObject", "[", 
    RowBox[{
     RowBox[{"FrontEndObject", "[", 
      RowBox[{"LinkObject", "[", 
       RowBox[{"\"\<9tj_shm\>\"", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     "48"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.538308907039413*^9, 3.538309442544928*^9, 3.538310524499319*^9, 
   3.538310664559915*^9, 3.538312355411693*^9, {3.538312474583617*^9, 
   3.538312484280922*^9}, {3.538313034708249*^9, 3.538313051093386*^9}},
 CellID->1350215185]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$TMAproofObject"], "Input",
 CellChangeTimes->{{3.538309435579795*^9, 3.538309440248973*^9}, {
  3.538309916190172*^9, 3.538309929252892*^9}},
 CellID->295057353],

Cell[BoxData[
 RowBox[{"PROOFOBJ$", "[", 
  RowBox[{
   RowBox[{"PRFINFO$", "[", 
    RowBox[{"\<\"Initial\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"ID:822628176\"\>", 
         ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\
\"\>"}], "}"}], ",", 
       RowBox[{
        UnderscriptBox["\[ForAll]", 
         StyleBox["a", "ExpressionVariable"]], 
        RowBox[{
         RowBox[{"S", "[", 
          StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           RowBox[{
            StyleBox["x", "ExpressionVariable"], ",", 
            StyleBox["y", "ExpressionVariable"], ",", 
            StyleBox["z", "ExpressionVariable"]}]], 
          RowBox[{"A", "[", 
           StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
       ",", "\<\"(8)\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"ID:1346427776\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}
              }]], 
            RowBox[{
             RowBox[{"P", "[", 
              StyleBox["x", "ExpressionVariable"], "]"}], ":=", 
             RowBox[{"5", "+", 
              StyleBox["x", "ExpressionVariable"]}]}]}]}]}], 
         ",", "\<\"(4)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"ID:1242901413\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]},
               {
                RowBox[{
                 RowBox[{
                  StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]}
              }]], 
            RowBox[{"IffDef", "[", 
             RowBox[{
              RowBox[{"P", "[", 
               RowBox[{
                StyleBox["x", "ExpressionVariable"], ",", 
                StyleBox["y", "ExpressionVariable"]}], "]"}], ",", 
              RowBox[{
               RowBox[{"Q", "[", 
                StyleBox["x", "ExpressionVariable"], "]"}], "||", 
               RowBox[{"Q", "[", 
                StyleBox["y", "ExpressionVariable"], "]"}]}]}], "]"}]}]}]}], 
         ",", "\<\"(10)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"ID:1636935908\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]}
              }]], 
            RowBox[{
             RowBox[{"P", "[", 
              StyleBox["x", "ExpressionVariable"], "]"}], "=", 
             RowBox[{"3", " ", 
              StyleBox["x", "ExpressionVariable"]}]}]}]}]}], 
         ",", "\<\"(1)\"\>"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PROOFSIT$", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"ID:822628176\"\>", 
         ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\
\"\>"}], "}"}], ",", 
       RowBox[{
        UnderscriptBox["\[ForAll]", 
         StyleBox["a", "ExpressionVariable"]], 
        RowBox[{
         RowBox[{"S", "[", 
          StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           RowBox[{
            StyleBox["x", "ExpressionVariable"], ",", 
            StyleBox["y", "ExpressionVariable"], ",", 
            StyleBox["z", "ExpressionVariable"]}]], 
          RowBox[{"A", "[", 
           StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
       ",", "\<\"(8)\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"ID:1346427776\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}
              }]], 
            RowBox[{
             RowBox[{"P", "[", 
              StyleBox["x", "ExpressionVariable"], "]"}], ":=", 
             RowBox[{"5", "+", 
              StyleBox["x", "ExpressionVariable"]}]}]}]}]}], 
         ",", "\<\"(4)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"ID:1242901413\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]},
               {
                RowBox[{
                 RowBox[{
                  StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]}
              }]], 
            RowBox[{"IffDef", "[", 
             RowBox[{
              RowBox[{"P", "[", 
               RowBox[{
                StyleBox["x", "ExpressionVariable"], ",", 
                StyleBox["y", "ExpressionVariable"]}], "]"}], ",", 
              RowBox[{
               RowBox[{"Q", "[", 
                StyleBox["x", "ExpressionVariable"], "]"}], "||", 
               RowBox[{"Q", "[", 
                StyleBox["y", "ExpressionVariable"], "]"}]}]}], "]"}]}]}]}], 
         ",", "\<\"(10)\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"ID:1636935908\"\>", 
           ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb\"\>"}], "}"}], ",", 
         RowBox[{
          UnderscriptBox["\[ForAll]", 
           StyleBox["a", "ExpressionVariable"]], 
          RowBox[{
           RowBox[{"S", "[", 
            StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
           RowBox[{
            UnderscriptBox["\[ForAll]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
                 "\[Ellipsis]", ",", "n"}]}
              }]], 
            RowBox[{
             RowBox[{"P", "[", 
              StyleBox["x", "ExpressionVariable"], "]"}], "=", 
             RowBox[{"3", " ", 
              StyleBox["x", "ExpressionVariable"]}]}]}]}]}], 
         ",", "\<\"(1)\"\>"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", "\<\"pending\"\>", ",", 
     RowBox[{"\<\"InferenceRules\"\>", "\[Rule]", 
      RowBox[{"inferenceRules", "[", "prover1", "]"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.538309930616354*^9},
 CellID->121480978]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{"xxx", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CurrentValue", "[", 
      RowBox[{
      "Theorema`Provers`Common`Private`$TMAproofNotebook", ",", 
       "\"\<NotebookFileName\>\""}], "]"}], ",", "\"\<ID:1874491785\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.53830948075646*^9, 3.538309513718446*^9}},
 CellID->1410318279],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"xxx", True->
    StyleBox["xxx", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData:>{"Untitled-11", "ID:1874491785"},
   ButtonNote->"Untitled-11"],
  Annotation[#, {"Untitled-11", "ID:1874491785"}, "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.538309516260571*^9, 3.538310556092207*^9, 
  3.538310669087726*^9, 3.538312140044988*^9, 3.538312365724743*^9, 
  3.538312461308801*^9, 3.53831286178149*^9, 3.538313064037668*^9},
 CellID->249848786]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`showProofNavigation", "[", 
  "Theorema`Provers`Common`Private`$TMAproofObject", "]"}]], "Input",
 CellChangeTimes->{{3.538303943335101*^9, 3.538303963634474*^9}},
 CellID->881736748],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{0.816496580927726, 1.632993161855452}, {
    0.816496580927726, 0.816496580927726}, {0., 0.}, {0.816496580927726, 
    0.}, {1.632993161855452, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], LineBox[{{1, 2}, {2, 3}, {2, 4}, {2, 5}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["PROOFOBJ$", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.019512195121951223`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"PROOFOBJ$", "[", 
           RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Theorema`Provers`Common`Private`PROOFOBJ$[{
          Theorema`Knowledge`a, Theorema`Knowledge`b, Theorema`Knowledge`c}]],
         "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.019512195121951223`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{
         Theorema`Knowledge`a, Theorema`Knowledge`b, Theorema`Knowledge`c}], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["a",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.019512195121951223`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["a", HoldForm]],
       Annotation[#, 
        HoldForm[Theorema`Knowledge`a], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["b",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.019512195121951223`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["b", HoldForm]],
       Annotation[#, 
        HoldForm[Theorema`Knowledge`b], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.019512195121951223`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[Theorema`Knowledge`c], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0.816496580927726, 1.632993161855452}, {
     0.816496580927726, 0.816496580927726}, {0., 0.}, {0.816496580927726, 
     0.}, {1.632993161855452, 0.}}]& ],
  AspectRatio->NCache[Rational[6, 41]^Rational[1, 2], 0.38254602783800296`],
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.538303964250867*^9, 3.538303981202033*^9}},
 CellID->1908721365]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Theorema`Common`displayProof", "[", 
  "Theorema`Common`$TMAproofObject", "]"}]], "Input",
 CellChangeTimes->{{3.538303943335101*^9, 3.538303963634474*^9}, {
  3.538312275159698*^9, 3.538312301176757*^9}},
 CellID->1972978571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Theorema`Common`$tmaEnv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.537249879864226*^9, 3.537249902215109*^9}},
 CellID->1182975562],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   StyleBox["a", "ExpressionVariable"]], 
  RowBox[{
   RowBox[{"S", "[", 
    StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
   RowBox[{
    UnderscriptBox["\[ForAll]", GridBox[{
       {
        RowBox[{
         RowBox[{
          StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]",
          ",", "n"}]}
      }]], 
    RowBox[{
     RowBox[{"P", "[", 
      StyleBox["x", "ExpressionVariable"], "]"}], "=", 
     RowBox[{"3", " ", 
      StyleBox["x", "ExpressionVariable"]}]}]}]}]}]], "Output",
 CellChangeTimes->{3.537249904083813*^9, 3.537250603868933*^9, 
  3.537250642927229*^9, 3.537251638489551*^9, 3.537251690492027*^9},
 CellID->1873252243]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`freeVariables", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.537249907350282*^9, 3.537249929372911*^9}},
 CellID->2024511036],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.537249931883011*^9, 3.537250098109938*^9, 
  3.537251650290183*^9},
 CellID->229083148]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<ID:1\>\"", ",", "\"\<Source:/home\>\""}], "}"}], ",", 
    "InputForm"}], "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.537258623829639*^9, 3.537258696535584*^9}, {
  3.537259323286301*^9, 3.537259326359678*^9}},
 CellID->1334634079],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<{\\\"ID:1\\\", \\\"Source:/home\\\"}\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.537258628951447*^9, 3.537258636975362*^9}, {
  3.537258673105758*^9, 3.537258699741782*^9}, {3.537259327738993*^9, 
  3.537259348027423*^9}},
 CellID->132241000]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", "%", "]"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.537258702856856*^9, 3.537258709651439*^9}, {
  3.537259350120236*^9, 3.537259352117651*^9}},
 CellID->33279098],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"\"\<ID:1\>\"", ",", "\"\<Source:/home\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.537258710347968*^9, {3.537259336278393*^9, 3.537259352760312*^9}},
 CellID->291169334]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Theorema`Common`transferToComputation", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<ID:1\>\"", ",", "\"\<Source:/home\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.537249907350282*^9, 3.537249929372911*^9}, {
  3.53725066484195*^9, 3.537250695145709*^9}, {3.537255602768151*^9, 
  3.537255636701732*^9}, {3.537255718503937*^9, 3.537255736598807*^9}},
 CellID->480980070],

Cell[BoxData[
 RowBox[{"Clear", "[", "Theorema`Computation`Knowledge`P$TM", "]"}]], "Input",\

 CellChangeTimes->{{3.537259444317306*^9, 3.537259447502647*^9}},
 CellID->645489744],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`P$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}},
 CellID->1955273032],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`P$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.537263444532199*^9},
 CellTags->"Info3537267044-9498034",
 CellID->2079055498],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", "x_", "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1636935908\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "x", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "x"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "n"}]}], ")"}]}]}], ":=", 
         RowBox[{"3", " ", "x"}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1242901413\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "x", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "x"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "n"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"isInteger", "[", "y", "]"}], "&&", 
             RowBox[{"1", "\[LessEqual]", "y"}], "&&", 
             RowBox[{"y", "\[LessEqual]", "n"}]}], ")"}]}]}], ":=", 
         RowBox[{
          RowBox[{"Q", "[", "x", "]"}], "||", 
          RowBox[{"Q", "[", "y", "]"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", "x_", "]"}], "/;", 
          RowBox[{
           RowBox[{"activeComputationKB", "[", 
            RowBox[{"{", 
             
             RowBox[{"\<\"ID:1346427776\"\>", 
              ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}], "&&", 
           RowBox[{"S", "[", "a", "]"}], "&&", 
           RowBox[{"x", "\[Element]", "A"}]}]}], ":=", 
         RowBox[{"5", "+", "x"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`P$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.537263444584631*^9},
 CellTags->"Info3537267044-9498034",
 CellID->167383793]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", "3", "]"}]], "Computation",
 CellChangeTimes->{{3.537259478696213*^9, 3.5372594814526*^9}},
 CellID->1598371377],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537260828393025*^9},
 CellID->1352352921],

Cell[BoxData[
 RowBox[{"P", "[", "3", "]"}]], "ComputationResult",
 CellChangeTimes->{3.537259482677573*^9, 3.537260561519782*^9, 
  3.537260828427064*^9},
 CellID->643795566]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", "3", "]"}]], "Computation",
 CellChangeTimes->{{3.537259478696213*^9, 3.537259504773032*^9}},
 CellID->2055778761],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(1)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(1)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:1636935908", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Equal", False}, {"Exists", True}, {
                 "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
                 "Iff", True}, {"Implies", True}, {"Intersection", False}, {
                 "Less", True}, {"LessEqual", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Times", True}, {"Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(1)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:1636935908", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Equal", False}, {"Exists", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Times", True}, {
          "Union", False}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537260833123645*^9},
 CellID->1852473898],

Cell[BoxData["9"], "ComputationResult",
 CellChangeTimes->{3.537259507226278*^9, 3.537260541824911*^9, 
  3.537260833153601*^9},
 CellID->1919405636]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Theorema`Common`$tmaEnv"], "Input",
 CellChangeTimes->{{3.535965336492683*^9, 3.535965339566092*^9}, 
   3.535979246646926*^9},
 CellID->1919494902],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:822628176\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", 
        RowBox[{
         StyleBox["x", "ExpressionVariable"], ",", 
         StyleBox["y", "ExpressionVariable"], ",", 
         StyleBox["z", "ExpressionVariable"]}]], 
       RowBox[{"A", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(8)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1491028062\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{"Q", "[", 
            StyleBox["x", "ExpressionVariable"], "]"}]},
          {
           RowBox[{"Q", "[", 
            StyleBox["y", "ExpressionVariable"], "]"}]},
          {
           RowBox[{"Q", "[", 
            StyleBox["z", "ExpressionVariable"], "]"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(7)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1874491785\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{"Q", "[", 
            StyleBox["x", "ExpressionVariable"], "]"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(6)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1421485859\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{
            StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]},
          {
           RowBox[{
            StyleBox["y", "ExpressionVariable"], "\[Element]", "A"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(5)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1346427776\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{
            StyleBox["x", "ExpressionVariable"], "\[Element]", "A"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(4)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:330716980\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
            OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
          {
           RowBox[{
            RowBox[{
             StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
            OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]},
          {
           RowBox[{
            RowBox[{
             StyleBox["z", "ExpressionVariable"], "=", "1"}], ",", 
            OverscriptBox["\[Ellipsis]", "4"], ",", "n"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(3)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1242901413\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       UnderscriptBox["\[ForAll]", GridBox[{
          {
           RowBox[{
            RowBox[{
             StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
            "\[Ellipsis]", ",", "n"}]},
          {
           RowBox[{
            RowBox[{
             StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", 
            "\[Ellipsis]", ",", "n"}]}
         }]], 
       RowBox[{"P", "[", 
        StyleBox["x", "ExpressionVariable"], "]"}]}]}], ",", "\<\"(2)\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ID:1636935908\"\>", 
       ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"\
\>"}], "}"}], ",", 
     RowBox[{
      UnderscriptBox["\[ForAll]", 
       StyleBox["a", "ExpressionVariable"]], 
      RowBox[{
       RowBox[{"S", "[", 
        StyleBox["a", "ExpressionVariable"], "]"}], "\[Implies]", 
       RowBox[{
        UnderscriptBox["\[ForAll]", GridBox[{
           {
            RowBox[{
             RowBox[{
              StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", 
             "\[Ellipsis]", ",", "n"}]}
          }]], 
        RowBox[{"P", "[", 
         StyleBox["x", "ExpressionVariable"], "]"}]}]}]}], 
     ",", "\<\"(1)\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.535965330577203*^9, 3.535965340728923*^9}, 
   3.53596543556807*^9, 3.535967226373246*^9, 3.535967342855638*^9, 
   3.535967681563185*^9, 3.535967827499545*^9, 3.53596789893478*^9, 
   3.535967935841646*^9, 3.535967982461434*^9, 3.535968014808845*^9, 
   3.535968287379422*^9, {3.535979232876844*^9, 3.535979249008339*^9}, 
   3.535979743315288*^9, 3.535979856130627*^9, 3.535979945990369*^9, 
   3.53598075268318*^9, 3.537190213693231*^9, 3.537249152217968*^9},
 CellID->1808714492]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.535965336492683*^9, 3.535965339566092*^9}, 
   3.535979246646926*^9, {3.535979962233961*^9, 3.535979967215045*^9}},
 CellID->2119150181],

Cell["\<\
{{{\"ID:822628176\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`SIMPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM]], 
      Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
        Theorema`Knowledge`y$TM]], Theorema`Language`SIMPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`z$TM]]], True, 
     Theorema`Knowledge`A$TM[Theorema`Language`VAR$[
       Theorema`Knowledge`x$TM]]]]], \"(8)\"}, 
 {{\"ID:1491028062\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`PREDRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
       Theorema`Knowledge`Q$TM], Theorema`Language`PREDRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
       Theorema`Knowledge`Q$TM], Theorema`Language`PREDRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 
       Theorema`Knowledge`Q$TM]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(7)\"}, 
 {{\"ID:1874491785\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`PREDRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
       Theorema`Knowledge`Q$TM]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(6)\"}, 
 {{\"ID:1421485859\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`SETRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
       Theorema`Knowledge`A$TM], Theorema`Language`SETRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 
       Theorema`Knowledge`A$TM]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(5)\"}, 
 {{\"ID:1346427776\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`SETRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 
       Theorema`Knowledge`A$TM]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(4)\"}, 
 {{\"ID:330716980\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`STEPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
       Theorema`Knowledge`n$TM, 4], Theorema`Language`STEPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
       Theorema`Knowledge`n$TM, 4], Theorema`Language`STEPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`z$TM], 1, 
       Theorema`Knowledge`n$TM, 4]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(3)\"}, 
 {{\"ID:1242901413\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Implies$TM[
    Theorema`Knowledge`S$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]], Theorema`Language`Forall$TM[
     Theorema`Language`RNG$[Theorema`Language`STEPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
       Theorema`Knowledge`n$TM, 1], Theorema`Language`STEPRNG$[
       Theorema`Language`VAR$[Theorema`Knowledge`y$TM], 1, 
       Theorema`Knowledge`n$TM, 1]], True, Theorema`Knowledge`P$TM[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]]], \"(2)\"}, 
 {{\"ID:1636935908\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`a$TM]]], True, Theorema`Language`Forall$TM[
    Theorema`Language`RNG$[Theorema`Language`STEPRNG$[
      Theorema`Language`VAR$[Theorema`Knowledge`x$TM], 1, 
      Theorema`Knowledge`n$TM, 1]], True, Theorema`Knowledge`P$TM[
     Theorema`Language`VAR$[Theorema`Knowledge`x$TM]]]], \"(1)\"}}\
\>", "Output",
 CellChangeTimes->{3.535979967914628*^9, 3.537190227644586*^9},
 CellID->1960048507]
}, Closed]],

Cell[CellGroupData[{

Cell["Definition", "OpenEnvironment",
 CellID->1770062998],

Cell[BoxData[
 UnderscriptBox["\[ForAll]", "x"]], "EnvironmentDeclaration",
 CellChangeTimes->{{3.537707733293822*^9, 3.537707741287284*^9}, {
  3.537785953258414*^9, 3.537785953813354*^9}, {3.537786342207189*^9, 
  3.537786343043088*^9}},
 CellID->1574886120],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], ":=", 
  RowBox[{"Program", "[", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "=", "x"}], ",", "a"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"y", "=", 
         RowBox[{"y", "\[Union]", 
          RowBox[{"{", "i", "}"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", "y"}]}], 
    "]"}], "]"}]}]], "FormalTextInputFormula",
 CellFrameLabels->{{None, "(9)"}, {None, None}},
 ShowCellTags->False,
 CellChangeTimes->{{3.537707635415025*^9, 3.537707637444269*^9}, {
   3.537707747632214*^9, 3.537707800931936*^9}, {3.537708233786945*^9, 
   3.537708243905983*^9}, {3.537708384839252*^9, 3.537708384888737*^9}, 
   3.537708423340865*^9, {3.537709787983195*^9, 3.53770983736029*^9}, {
   3.537785957597267*^9, 3.537786028476619*^9}, {3.537786187606318*^9, 
   3.537786189067497*^9}, {3.537786346074294*^9, 3.537786355331673*^9}},
 CellTags->{
  "ID:412145113", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
 CellID->412145113],

Cell["\[GraySquare]", "EndEnvironmentMarker",
 CellID->1300223080]
}, Open  ]],

Cell["", "CloseEnvironment",
 CellID->1068241259],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Theorema`Common`$tmaEnv", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.537712277470573*^9, 3.537712311755911*^9}},
 CellID->1391707244],

Cell["\<\
{{{\"ID:412145113\", 
   \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}, 
  Theorema`Language`Forall$TM[Theorema`Language`RNG$[
    Theorema`Language`SIMPRNG$[Theorema`Language`VAR$[
      Theorema`Knowledge`x$TM]]], True, Theorema`Language`EqualDef$TM[
    Theorema`Knowledge`f$TM[Theorema`Language`VAR$[
      Theorema`Knowledge`x$TM]], Theorema`Language`Module$TM[
     Theorema`Language`List$TM[Theorema`Language`Assign$TM[
       Theorema`Knowledge`y$TM, Theorema`Language`VAR$[
        Theorema`Knowledge`x$TM]], Theorema`Knowledge`a$TM], 
     Theorema`Language`CompoundExpression$TM[Theorema`Language`Do$TM[
       Theorema`Language`Assign$TM[Theorema`Knowledge`y$TM, 
        Theorema`Language`Union$TM[Theorema`Knowledge`y$TM, 
         Theorema`Language`List$TM[Theorema`Knowledge`i$TM]]], 
       Theorema`Language`List$TM[Theorema`Knowledge`i$TM, 2, 5]], 
      Theorema`Knowledge`y$TM]]]], \"(9)\"}}\
\>", "Output",
 CellChangeTimes->{{3.537712292217667*^9, 3.537712312760804*^9}, 
   3.537784740357419*^9, 3.537784941443423*^9, 3.537785176746843*^9, 
   3.537786041888413*^9, 3.537786194855976*^9, 3.537786710967945*^9, 
   3.537788409038965*^9, 3.537789931814978*^9, 3.537793722491219*^9, 
   3.537794149862925*^9},
 CellID->1801149363]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Theorema`Computation`Knowledge`f$TM"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
  3.537712069480288*^9, 3.537712069895417*^9}},
 CellID->2124154183],

Cell[CellGroupData[{

Cell["Theorema`Computation`Knowledge`f$TM", "Print", "PrintUsage",
 CellChangeTimes->{3.537794154987062*^9},
 CellTags->"Info3537797754-1263895",
 CellID->1829647063],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "x_", "]"}], "/;", 
          RowBox[{"activeComputationKB", "[", 
           RowBox[{"{", 
            
            RowBox[{"\<\"ID:412145113\"\>", 
             ",", "\<\"Source:/home/wwindste/Theorema.2/Theorema/Test/\
Language.nb\"\>"}], "}"}], "]"}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"y", "=", "x"}], ",", "a"}], "}"}], ",", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"y", "=", 
               RowBox[{"y", "\[Union]", 
                RowBox[{"{", "i", "}"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", 
            "y"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Theorema`Computation`Knowledge`f$TM],
  Editable->False]], "Print",
 CellChangeTimes->{3.537794155146599*^9},
 CellTags->"Info3537797754-1263895",
 CellID->462990777]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"DownValues", "[", "Theorema`Computation`Knowledge`f$TM", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.537255406307442*^9, 3.537255411534728*^9}, {
  3.537712069480288*^9, 3.537712069895417*^9}, {3.537712132515014*^9, 
  3.537712143688627*^9}},
 CellID->209530079],

Cell["\<\
{HoldPattern[Theorema`Computation`Knowledge`f$TM[
     Theorema`Computation`Knowledge`x$TM_] /; 
    Theorema`Computation`Language`Private`activeComputationKB[
     {\"ID:412145113\", 
      \"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb\"}]] :> 
  Theorema`Computation`Language`Module$TM[
   Theorema`Computation`Language`List$TM[
    Theorema`Computation`Knowledge`y$TM = 
     Theorema`Computation`Knowledge`x$TM, 
    Theorema`Computation`Knowledge`a$TM], 
   Theorema`Computation`Language`Do$TM[
     Theorema`Computation`Knowledge`y$TM = 
      Theorema`Computation`Language`Union$TM[
       Theorema`Computation`Knowledge`y$TM, 
       Theorema`Computation`Language`List$TM[
        Theorema`Computation`Knowledge`i$TM]], 
     Theorema`Computation`Language`List$TM[
      Theorema`Computation`Knowledge`i$TM, 2, 5]]; 
    Theorema`Computation`Knowledge`y$TM]}\
\>", "Output",
 CellChangeTimes->{3.537712144777129*^9, 3.537785027161942*^9, 
  3.537786070050988*^9, 3.537788476928174*^9, 3.537793758703931*^9, 
  3.537794168226384*^9},
 CellID->389968434]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, {
  3.53778611495217*^9, 3.537786121341005*^9}, {3.537786743492596*^9, 
  3.537786743617129*^9}},
 CellID->205321431],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Do", True}, {"Equal", False}, {"Exists", True}, {
                 "For", True}, {"Forall", True}, {"Greater", True}, {
                 "GreaterEqual", True}, {"Iff", True}, {"Implies", True}, {
                 "Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Do", True}, {"Equal", False}, {"Exists", True}, {"For", True}, {
          "Forall", True}, {"Greater", True}, {"GreaterEqual", True}, {
          "Iff", True}, {"Implies", True}, {"Intersection", False}, {
          "Less", True}, {"LessEqual", True}, {"Module", True}, {
          "Not", True}, {"Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537795937970992*^9},
 CellID->145907014],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "ComputationResult",
 CellChangeTimes->{
  3.537786235361803*^9, 3.537786745420208*^9, {3.537788507397392*^9, 
   3.537788518531114*^9}, 3.537793789875935*^9, 3.537793824225617*^9, 
   3.537794190152959*^9, 3.537795781660363*^9, {3.537795812617694*^9, 
   3.537795825138044*^9}, 3.537795938008259*^9},
 CellID->75449909]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, {3.53779601895124*^9, 3.53779602087955*^9}},
 CellID->2121083924],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Module\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Switch\"\>", 
                    ",", "\<\"Times\"\>", ",", "\<\"Which\"\>", 
                    ",", "\<\"While\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Module", "Not", "Or", 
           "Plus", "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537796027430822*^9},
 CellID->1059552853],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", "3", "}"}], "\[Union]", 
        RowBox[{"{", "2", "}"}]}], ")"}], "\[Union]", 
      RowBox[{"{", "3", "}"}]}], ")"}], "\[Union]", 
    RowBox[{"{", "4", "}"}]}], ")"}], "\[Union]", 
  RowBox[{"{", "5", "}"}]}]], "ComputationResult",
 CellChangeTimes->{3.537785092879694*^9, 3.537785196119847*^9, 
  3.537786097415074*^9, 3.537795949861932*^9, 3.537796027461482*^9},
 CellID->2095423814]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, 3.537795952873119*^9, {3.537796030304187*^9, 
   3.53779603174517*^9}},
 CellID->533105519],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Do\"\>", 
                    ",", "\<\"Exists\"\>", ",", "\<\"For\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Do", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Not", "Or", "Plus", "Switch", "Times", "Which", "While"},
                    "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", False}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Do", "Exists", "For", "Forall", "Greater", "GreaterEqual", 
           "Iff", "Implies", "Less", "LessEqual", "Not", "Or", "Plus", 
           "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", True}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", False}, {"Not", True}, {
          "Or", True}, {"Plus", True}, {"SetEqual", False}, {
          "Switch", True}, {"Times", True}, {"Union", False}, {
          "Which", True}, {"While", True}}], ImageSize -> Automatic]}]}, 
    False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537796037858241*^9},
 CellID->1891617822],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "=", 
      RowBox[{"{", "3", "}"}]}], ",", "a"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"y", "\[Union]", 
        RowBox[{"{", "i", "}"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "5"}], "}"}]}], "]"}], ";", "y"}]}], 
  "]"}]], "ComputationResult",
 CellChangeTimes->{3.537795963390092*^9, 3.537796037882677*^9},
 CellID->704956368]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", "3", "}"}], "]"}]], "Computation",
 CellChangeTimes->{{3.537707877885855*^9, 3.537707878995429*^9}, 
   3.537785079550014*^9, {3.537795952873119*^9, 3.537795972614747*^9}, {
   3.537796040929196*^9, 3.537796042194915*^9}},
 CellID->1034884285],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "\<\"(9)\"\>", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{"(9)"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"For\"\>", ",", "\<\"Forall\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
                    ",", "\<\"Module\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Switch\"\>", ",", "\<\"Times\"\>", 
                    ",", "\<\"Which\"\>", ",", "\<\"While\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "For", "Forall", "Greater", 
                    "GreaterEqual", "Iff", "Implies", "Less", "LessEqual", 
                    "Module", "Not", "Or", "Plus", "Switch", "Times", "Which",
                     "While"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{{{
                  "ID:412145113", 
                   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.\
nb"}, True}}, {{"And", True}, {"Do", False}, {"Equal", False}, {
                 "Exists", True}, {"For", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Module", True}, {"Not", True}, {
                 "Or", True}, {"Plus", True}, {"SetEqual", False}, {
                 "Switch", True}, {"Times", True}, {"Union", False}, {
                 "Which", True}, {"While", True}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{"(9)"}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "For", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Module", "Not", "Or", "Plus", 
           "Switch", "Times", "Which", "While"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{{{
           "ID:412145113", 
            "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"}, 
           True}}, {{"And", True}, {"Do", False}, {"Equal", False}, {
          "Exists", True}, {"For", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Module", True}, {"Not", True}, {"Or", True}, {
          "Plus", True}, {"SetEqual", False}, {"Switch", True}, {
          "Times", True}, {"Union", False}, {"Which", True}, {
          "While", True}}], ImageSize -> Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537796049090951*^9},
 CellID->378452402],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "ComputationResult",
 CellChangeTimes->{3.537795989963136*^9, 3.537796049111685*^9},
 CellID->2025778815]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.53770799032685*^9, 3.537707995021334*^9}, {
  3.537712110559332*^9, 3.537712113723024*^9}, {3.537785213929265*^9, 
  3.537785219995047*^9}, {3.537786759087221*^9, 3.537786759203696*^9}},
 CellID->487953714],

Cell["Theorema`Computation`Language`Set$TM[3]", "Output",
 CellChangeTimes->{
  3.537707997416762*^9, 3.537708107800016*^9, 3.537708809180476*^9, 
   3.537709881953792*^9, 3.537712114658608*^9, {3.537785214799585*^9, 
   3.537785221111414*^9}, 3.537786760227699*^9, 3.537796058096659*^9},
 CellID->134672363]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computation", "Section",
 CellChangeTimes->{{3.537190414450915*^9, 3.537190417159897*^9}},
 CellID->1498334619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9, {3.53718542006545*^9, 
   3.537185423512823*^9}, {3.537187787205318*^9, 3.53718778863738*^9}},
 CellID->98487382],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187790669677*^9},
 CellID->1479163346],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537187790738192*^9},
 CellID->1504671994]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{3.53598216380274*^9},
 CellID->1791385580],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187709229586*^9},
 CellID->14065605],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186167229779*^9, 3.537187709269473*^9},
 CellID->1201509063]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186181713647*^9}},
 CellID->1674073568],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187713012624*^9},
 CellID->449726254],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "&&", 
  RowBox[{"P", "[", "2", "]"}], "&&", 
  RowBox[{"P", "[", "3", "]"}], "&&", 
  RowBox[{"P", "[", "4", "]"}], "&&", 
  RowBox[{"P", "[", "5", "]"}], "&&", 
  RowBox[{"P", "[", "6", "]"}], "&&", 
  RowBox[{"P", "[", "7", "]"}], "&&", 
  RowBox[{"P", "[", "8", "]"}], "&&", 
  RowBox[{"P", "[", "9", "]"}], "&&", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186183613878*^9, 3.537187713048159*^9},
 CellID->754137009]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}},
 CellID->1845651749],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187738013845*^9},
 CellID->108509328],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", 
       RowBox[{"7", "+", "3"}]}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186215995511*^9, 3.537187738044501*^9},
 CellID->737506521]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "2"], ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, {
   3.537186260920906*^9, 3.537186274255117*^9}},
 CellID->1431049582],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718775859968*^9},
 CellID->1185581040],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "&&", 
  RowBox[{"P", "[", "3", "]"}], "&&", 
  RowBox[{"P", "[", "5", "]"}], "&&", 
  RowBox[{"P", "[", "7", "]"}], "&&", 
  RowBox[{"P", "[", "9", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186282305487*^9, 3.537187758629221*^9},
 CellID->582741343]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "3"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9},
 CellID->203455808],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718776466022*^9},
 CellID->145952955],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "2", "]"}], "||", 
  RowBox[{"P", "[", "3", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.536329360628376*^9, 3.537184183141348*^9, 
  3.537184318550782*^9, 3.537185403836159*^9, 3.537186304655134*^9, 
  3.537187764713919*^9},
 CellID->1753205452]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", "n"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, 3.536329358952827*^9, {3.537184178750544*^9, 
   3.53718418034763*^9}, 3.537184317088435*^9, {3.53718542006545*^9, 
   3.537185423512823*^9}},
 CellID->30211731],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187776695653*^9},
 CellID->2129720458],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", "n"}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537185424485715*^9, 3.537186308169571*^9, 
  3.537187776746898*^9},
 CellID->754575839]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186181713647*^9}, 
   3.537186341739007*^9},
 CellID->1873687787],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187800752711*^9},
 CellID->1253293235],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "2", "]"}], "||", 
  RowBox[{"P", "[", "3", "]"}], "||", 
  RowBox[{"P", "[", "4", "]"}], "||", 
  RowBox[{"P", "[", "5", "]"}], "||", 
  RowBox[{"P", "[", "6", "]"}], "||", 
  RowBox[{"P", "[", "7", "]"}], "||", 
  RowBox[{"P", "[", "8", "]"}], "||", 
  RowBox[{"P", "[", "9", "]"}], "||", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186183613878*^9, 3.537186344283452*^9, 
  3.537187800783047*^9},
 CellID->1218379290]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", "\[Ellipsis]", ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, 
   3.537186349528334*^9},
 CellID->811697226],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187810237976*^9},
 CellID->1518608613],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", GridBox[{
     {
      RowBox[{
       RowBox[{
        StyleBox["x", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
       ",", 
       RowBox[{"7", "+", "3"}]}]}
    }]], 
  RowBox[{"P", "[", 
   StyleBox["x", "ExpressionVariable"], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537186215995511*^9, 3.53718635821227*^9, 
  3.537187810263746*^9},
 CellID->825684985]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Computation",
 CellChangeTimes->{{3.536329344797392*^9, 3.536329372438328*^9}},
 CellID->1011115407],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187830742202*^9},
 CellID->445048633],

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "ComputationResult",
 CellChangeTimes->{{3.536329381862531*^9, 3.536329390362746*^9}, 
   3.537186408369568*^9, 3.537187830781458*^9},
 CellID->1204156752]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Computation",
 CellChangeTimes->{{3.536329344797392*^9, 3.536329345523937*^9}},
 CellID->277393357],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187822954841*^9},
 CellID->1246334821],

Cell[BoxData["2"], "ComputationResult",
 CellChangeTimes->{3.536329347786624*^9, 3.537186397440819*^9, 
  3.537187822961206*^9},
 CellID->280699869]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Exists]", 
   RowBox[{
    RowBox[{"x", "=", "1"}], ",", 
    OverscriptBox["\[Ellipsis]", "3"], ",", 
    RowBox[{"7", "+", "3"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{
  3.53598216380274*^9, {3.537186172228733*^9, 3.537186197047497*^9}, {
   3.537186260920906*^9, 3.537186274255117*^9}, {3.537186368801293*^9, 
   3.53718638163521*^9}},
 CellID->2073870508],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187817514212*^9},
 CellID->1700297099],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "1", "]"}], "||", 
  RowBox[{"P", "[", "4", "]"}], "||", 
  RowBox[{"P", "[", "7", "]"}], "||", 
  RowBox[{"P", "[", "10", "]"}]}]], "ComputationResult",
 CellChangeTimes->{
  3.537186282305487*^9, {3.537186377062426*^9, 3.537186383936613*^9}, 
   3.5371878175343*^9},
 CellID->778293369]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"a", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     RowBox[{"x", ",", "y", ",", "z"}]], 
    RowBox[{
     RowBox[{"x", ">", "a"}], "\[And]", 
     RowBox[{"P", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]], 
   RowBox[{"Q", "[", 
    RowBox[{"a", ",", "x", ",", "y", ",", "z"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.512995984014894*^9, 3.512995984605323*^9}, {
  3.532427758120653*^9, 3.532427762399611*^9}, {3.532427794868755*^9, 
  3.532427795474997*^9}, {3.53666390033573*^9, 3.536663941681615*^9}, {
  3.536925925816256*^9, 3.536925932203891*^9}, {3.536934384620933*^9, 
  3.536934450520649*^9}},
 CellID->1152856210],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187867765647*^9},
 CellID->960157500],

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     StyleBox["x", "ExpressionVariable"]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ">", "1"}]], 
   RowBox[{
    UnderscriptBox[
     UnderscriptBox["\[ForAll]", 
      RowBox[{
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}]], 
     RowBox[{"P", "[", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], ",", 
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}], "]"}]], 
    RowBox[{"Q", "[", 
     RowBox[{"1", ",", 
      StyleBox["x", "ExpressionVariable"], ",", 
      StyleBox["y", "ExpressionVariable"], ",", 
      StyleBox["z", "ExpressionVariable"]}], "]"}]}]}], "&&", 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[ForAll]", 
     StyleBox["x", "ExpressionVariable"]], 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ">", "2"}]], 
   RowBox[{
    UnderscriptBox[
     UnderscriptBox["\[ForAll]", 
      RowBox[{
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}]], 
     RowBox[{"P", "[", 
      RowBox[{
       StyleBox["x", "ExpressionVariable"], ",", 
       StyleBox["y", "ExpressionVariable"], ",", 
       StyleBox["z", "ExpressionVariable"]}], "]"}]], 
    RowBox[{"Q", "[", 
     RowBox[{"2", ",", 
      StyleBox["x", "ExpressionVariable"], ",", 
      StyleBox["y", "ExpressionVariable"], ",", 
      StyleBox["z", "ExpressionVariable"]}], "]"}]}]}]}]], "ComputationResult",\

 CellChangeTimes->{3.53666394269026*^9, 3.536664009688749*^9, 
  3.536664140973344*^9, 3.536664247418962*^9, 3.536664417145389*^9, 
  3.536735718251839*^9, 3.536735764157247*^9, 3.536737011432611*^9, 
  3.536737057705239*^9, 3.536925112353346*^9, 3.536925729682152*^9, 
  3.536925935468522*^9, 3.536926020653002*^9, 3.536934362436868*^9, 
  3.536934421721098*^9, 3.536934451768684*^9, 3.537022645509204*^9, 
  3.537023441733061*^9, 3.537023517593337*^9, 3.537076299107731*^9, 
  3.537186422098857*^9, 3.537187867802452*^9},
 CellID->690517246]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]], "False"}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}},
 CellID->1615862783],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187915200281*^9},
 CellID->944167556],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{
  3.536935026032087*^9, {3.536935063378047*^9, 3.536935082125048*^9}, 
   3.537082839606641*^9, 3.537187915227795*^9},
 CellID->1238531527]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", "}"}]}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}, {
  3.537187928224508*^9, 3.53718793946013*^9}},
 CellID->1201037010],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53718794020892*^9},
 CellID->540673537],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{{3.537187933033252*^9, 3.537187940237827*^9}},
 CellID->807696050]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", "}"}]}]], "False"}]], "Computation",
 CellChangeTimes->{{3.536935007383628*^9, 3.53693502031628*^9}, {
  3.537187928224508*^9, 3.537187947809686*^9}},
 CellID->921769592],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187948500825*^9},
 CellID->1465305827],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{3.537187948561262*^9},
 CellID->168737142]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"x", "<", "2"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}},
 CellID->165054078],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537187972588062*^9},
 CellID->1604596859],

Cell[BoxData[
 RowBox[{"P", "[", "1", "]"}]], "ComputationResult",
 CellChangeTimes->{{3.536934306852753*^9, 3.536934325921903*^9}, 
   3.537082948644804*^9, 3.537187972614307*^9},
 CellID->244870717]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"2", "|", "x"}]], 
  RowBox[{"P", "[", "x", "]"}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}},
 CellID->514390584],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537188011633674*^9},
 CellID->1113360533],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "1"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "1", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "2"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "2", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "3"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "3", "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "|", "5"}], ")"}], "\[Implies]", 
    RowBox[{"P", "[", "5", "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537188011689105*^9},
 CellID->1682361377]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox[
   UnderscriptBox["\[ForAll]", 
    RowBox[{"x", "\[Element]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
   RowBox[{"2", "|", "x"}]], "False"}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}},
 CellID->1089040068],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", False}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", False}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537188267263987*^9},
 CellID->1098517706],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "1"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "2"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "3"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"2", "|", "5"}], ")"}]}]}]], "ComputationResult",
 CellChangeTimes->{{3.537188252123341*^9, 3.537188267285079*^9}},
 CellID->902180314]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"y", "\[LessEqual]", "x"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190537414876*^9}},
 CellID->1030427555],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190539251806*^9},
 CellID->2099805360],

Cell[BoxData["True"], "ComputationResult",
 CellChangeTimes->{3.5371905393023*^9},
 CellID->993919463]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"y", "<", "x"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190556592467*^9}},
 CellID->626819530],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.53719055754786*^9},
 CellID->1982206321],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{3.537190557604934*^9},
 CellID->468602894]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
      RowBox[{"x", "-", "1"}]}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190618891779*^9}},
 CellID->1118177723],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190619419392*^9},
 CellID->1426088242],

Cell[BoxData["False"], "ComputationResult",
 CellChangeTimes->{3.537190619477817*^9},
 CellID->1300723109]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", "x"}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190665105309*^9}},
 CellID->2063520275],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190678404072*^9},
 CellID->663247889],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"2", ",", "2"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"3", ",", "3"}], "]"}], "&&", 
  RowBox[{"P", "[", 
   RowBox[{"5", ",", "5"}], "]"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190627859501*^9, 3.537190678422038*^9},
 CellID->725979512]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox[
    UnderscriptBox["\[Exists]", 
     RowBox[{
      RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
      RowBox[{"x", "+", "1"}]}]], 
    RowBox[{"y", "\[GreaterEqual]", "x"}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.537190685286414*^9}},
 CellID->941369956],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190686260492*^9},
 CellID->1592498020],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "4"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "5"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "6"}], "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190686317786*^9},
 CellID->1882998958]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox["\[Exists]", 
    RowBox[{
     RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"x", "+", "1"}]}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
  3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
  3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
  3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
  3.537190577252643*^9}, {3.537190616426247*^9, 3.53719070446703*^9}},
 CellID->952406679],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Forall\"\>", ",", "\<\"Greater\"\>", 
                    ",", "\<\"GreaterEqual\"\>", ",", "\<\"Iff\"\>", 
                    ",", "\<\"Implies\"\>", ",", "\<\"Less\"\>", 
                    ",", "\<\"LessEqual\"\>", ",", "\<\"Not\"\>", 
                    ",", "\<\"Or\"\>", ",", "\<\"Plus\"\>", 
                    ",", "\<\"Times\"\>"}], "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Forall", "Greater", "GreaterEqual",
                     "Iff", "Implies", "Less", "LessEqual", "Not", "Or", 
                    "Plus", "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", True}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Forall", "Greater", "GreaterEqual", "Iff", 
           "Implies", "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, 
          "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", True}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537190705568716*^9},
 CellID->1956997315],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"3", ",", "4"}], "]"}]}], ")"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "1"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "2"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "3"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "4"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "5"}], "]"}], "||", 
    RowBox[{"P", "[", 
     RowBox[{"5", ",", "6"}], "]"}]}], ")"}]}]], "ComputationResult",
 CellChangeTimes->{3.537190705629563*^9},
 CellID->515926111]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", 
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]], 
  RowBox[{
   UnderscriptBox["\[Exists]", 
    RowBox[{
     RowBox[{"y", "=", "1"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"x", "+", "1"}]}]], 
   RowBox[{"P", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Computation",
 CellChangeTimes->{{3.53693050716117*^9, 3.536930520756329*^9}, {
   3.536931682103625*^9, 3.536931682654798*^9}, {3.536934298766429*^9, 
   3.536934322454824*^9}, {3.537188001198133*^9, 3.537188007487348*^9}, {
   3.537188246556545*^9, 3.537188250509449*^9}, {3.53719044927061*^9, 
   3.537190577252643*^9}, {3.537190616426247*^9, 3.53719070446703*^9}, 
   3.537251751881149*^9},
 CellID->1263723114],

Cell[BoxData[
 DynamicModuleBox[{Typeset`var$$ = False}, 
  InterpretationBox[
   StyleBox[
    PaneSelectorBox[{False->GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
     GridBox[{
       {
        OpenerBox[Dynamic[Typeset`var$$],
         Appearance->Automatic,
         AutoAction->False,
         ContinuousAction->False,
         Enabled->Automatic], "\<\"\"\>"},
       {"", 
        PaneBox[
         TagBox[GridBox[{
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Knowledge used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", "}"}], "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Knowledge used in computation", "CIContent"], 
                  Style[{}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             TagBox[
              DynamicModuleBox[{Typeset`var$$ = False}, 
               InterpretationBox[
                StyleBox[
                 PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                  GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    
                    StyleBox["\<\"Builtins used in computation\"\>", 
                    "CIContent",
                    StripOnInput->False]},
                    {"", 
                    PaneBox[
                    StyleBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"And\"\>", ",", "\<\"Exists\"\>", 
                    ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
                    ",", "\<\"Iff\"\>", ",", "\<\"Implies\"\>", 
                    ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
                    ",", "\<\"Not\"\>", ",", "\<\"Or\"\>", 
                    ",", "\<\"Plus\"\>", ",", "\<\"Times\"\>"}], "}"}], 
                    "CIContent",
                    StripOnInput->False],
                    ImageMargins->0]}
                   },
                   AutoDelete->False,
                   BaselinePosition->{1, 1},
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxBackground->{"Columns" -> {{Automatic}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                  Typeset`var$$],
                  Alignment->Automatic,
                  BaselinePosition->Baseline,
                  DefaultBaseStyle->"OpenerView",
                  ImageMargins->0,
                  ImageSize->Automatic],
                 Deployed->False,
                 StripOnInput->False],
                OpenerView[{
                  Style["Builtins used in computation", "CIContent"], 
                  
                  Style[{"And", "Exists", "Greater", "GreaterEqual", "Iff", 
                    "Implies", "Less", "LessEqual", "Not", "Or", "Plus", 
                    "Times"}, "CIContent"]}, False]],
               DynamicModuleValues:>Automatic],
              Setting[#, {0}]& ]},
            {
             ButtonBox[
              StyleBox["\<\"Reset environment\"\>", "CellLabel",
               StripOnInput->False],
              Appearance->Automatic,
              
              ButtonFunction:>
               Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
                 "Equal", False}, {"Exists", True}, {"Forall", False}, {
                 "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
                 "Implies", True}, {"Intersection", False}, {"Less", True}, {
                 "LessEqual", True}, {"Not", True}, {"Or", True}, {
                 "Plus", True}, {"SetEqual", False}, {"Times", True}, {
                 "Union", False}}],
              Evaluator->Automatic,
              ImageSize->Automatic,
              Method->"Preemptive"]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"],
         ImageMargins->0]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
     Typeset`var$$],
     Alignment->Automatic,
     BaselinePosition->Baseline,
     DefaultBaseStyle->"OpenerView",
     ImageMargins->0,
     ImageSize->Automatic],
    Deployed->False,
    StripOnInput->False],
   OpenerView[{"", 
     Column[{
       OpenerView[{
         Style["Knowledge used in computation", "CIContent"], 
         Style[{}, "CIContent"]}], 
       OpenerView[{
         Style["Builtins used in computation", "CIContent"], 
         Style[{
          "And", "Exists", "Greater", "GreaterEqual", "Iff", "Implies", 
           "Less", "LessEqual", "Not", "Or", "Plus", "Times"}, "CIContent"]}], 
       Button[
        Style["Reset environment", "CellLabel"], 
        Theorema`Interface`GUI`Private`setCompEnv[{}, {{"And", True}, {
          "Equal", False}, {"Exists", True}, {"Forall", False}, {
          "Greater", True}, {"GreaterEqual", True}, {"Iff", True}, {
          "Implies", True}, {"Intersection", False}, {"Less", True}, {
          "LessEqual", True}, {"Not", True}, {"Or", True}, {"Plus", True}, {
          "SetEqual", False}, {"Times", True}, {"Union", False}}], ImageSize -> 
        Automatic]}]}, False]],
  DynamicModuleValues:>{}]], "ComputationInfo",
 CellChangeTimes->{3.537251830280234*^9},
 CellID->1865004037],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[ForAll]", GridBox[{
     {
      RowBox[{
       StyleBox["x", "ExpressionVariable"], "\[Element]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}]}
    }]], 
  RowBox[{
   UnderscriptBox["\[Exists]", GridBox[{
      {
       RowBox[{
        RowBox[{
         StyleBox["y", "ExpressionVariable"], "=", "1"}], ",", "\[Ellipsis]", 
        ",", 
        RowBox[{
         StyleBox["x", "ExpressionVariable"], "+", "1"}]}]}
     }]], 
   RowBox[{"P", "[", 
    RowBox[{
     StyleBox["x", "ExpressionVariable"], ",", 
     StyleBox["y", "ExpressionVariable"]}], "]"}]}]}]], "ComputationResult",
 CellChangeTimes->{3.537251754143596*^9, 3.537251830304475*^9},
 CellID->627422604]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.537251757426652*^9, 3.53725176237648*^9}},
 CellID->1834959330],

Cell["\<\
Theorema`Computation`Language`Forall$TM[Theorema`Computation`Language`RNG$[
  Theorema`Computation`Language`SETRNG$[Theorema`Computation`Language`VAR$[
    Theorema`Computation`Knowledge`x$TM], 
   Theorema`Computation`Language`Set$TM[1, 2, 3, 5]]], True, 
 Theorema`Computation`Language`Exists$TM[
  Theorema`Computation`Language`RNG$[
   Theorema`Computation`Language`STEPRNG$[
    Theorema`Computation`Language`VAR$[
     Theorema`Computation`Knowledge`y$TM], 1, 
    Theorema`Computation`Language`Plus$TM[
     Theorema`Computation`Language`VAR$[
      Theorema`Computation`Knowledge`x$TM], 1], 1]], True, 
  Theorema`Computation`Knowledge`P$TM[Theorema`Computation`Language`VAR$[
    Theorema`Computation`Knowledge`x$TM], 
   Theorema`Computation`Language`VAR$[
    Theorema`Computation`Knowledge`y$TM]]]]\
\>", "Output",
 CellChangeTimes->{3.537251762826743*^9, 3.537251833648963*^9},
 CellID->410332565]
}, Open  ]]
}, Open  ]]
},
WindowSize->{740, 867},
WindowMargins->{{191, Automatic}, {Automatic, 89}},
Visible->True,
ShowSelection->True,
CounterAssignments->{{"TheoremaFormulaCounter" -> 10}},
FrontEndVersion->"8.0 for Linux x86 (32-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Theorema"}, "TheoremaNotebook.nb", CharacterEncoding -> 
       "UTF-8"]]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Linux x86 (32-bit) (February 23, 2011)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ID:1242901413"->{
  Cell[1680, 59, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413]},
 "ID:1346427776"->{
  Cell[3218, 104, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776]},
 "ID:1421485859"->{
  Cell[3951, 124, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859]},
 "ID:1491028062"->{
  Cell[5145, 156, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062]},
 "ID:1636935908"->{
  Cell[1126, 42, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908]},
 "ID:1874491785"->{
  Cell[4538, 140, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785]},
 "ID:330716980"->{
  Cell[2623, 87, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980]},
 "ID:412145113"->{
  Cell[113869, 2896, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]},
 "ID:822628176"->{
  Cell[5836, 174, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176]},
 "Info3537267044-9498034"->{
  Cell[76989, 1978, 166, 3, 42, "Print",
   CellTags->"Info3537267044-9498034",
   CellID->2079055498],
  Cell[77158, 1983, 2948, 80, 210, "Print",
   CellTags->"Info3537267044-9498034",
   CellID->167383793]},
 "Info3537797754-1263895"->{
  Cell[116926, 2977, 166, 3, 42, "Print",
   CellTags->"Info3537797754-1263895",
   CellID->1829647063],
  Cell[117095, 2982, 1568, 44, 62, "Print",
   CellTags->"Info3537797754-1263895",
   CellID->462990777]},
 "Proof:(7)"->{
  Cell[29726, 736, 78, 2, 21, "OpenProof",
   CellTags->"Proof:(7)",
   CellID->1505203964]},
 "Proof:(8)"->{
  Cell[6407, 196, 78, 2, 21, "OpenProof",
   CellTags->"Proof:(8)",
   CellID->1355865205]},
 "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb"->{
  Cell[1126, 42, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908],
  Cell[1680, 59, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413],
  Cell[2623, 87, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980],
  Cell[3218, 104, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776],
  Cell[3951, 124, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859],
  Cell[4538, 140, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785],
  Cell[5145, 156, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062],
  Cell[5836, 174, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176],
  Cell[113869, 2896, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]},
 "1"->{
  Cell[1126, 42, 551, 15, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1636935908", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
   CellID->1636935908]},
 "10"->{
  Cell[1680, 59, 940, 26, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1242901413", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
   CellID->1242901413]},
 "3"->{
  Cell[2623, 87, 592, 15, 32, "FormalTextInputFormula",
   CellTags->{
    "ID:330716980", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
   CellID->330716980]},
 "4"->{
  Cell[3218, 104, 730, 18, 27, "FormalTextInputFormula",
   CellTags->{
    "ID:1346427776", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
   CellID->1346427776]},
 "5"->{
  Cell[3951, 124, 584, 14, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:1421485859", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
   CellID->1421485859]},
 "6"->{
  Cell[4538, 140, 604, 14, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1874491785", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
   CellID->1874491785]},
 "7"->{
  Cell[5145, 156, 688, 16, 29, "FormalTextInputFormula",
   CellTags->{
    "ID:1491028062", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
   CellID->1491028062]},
 "8"->{
  Cell[5836, 174, 415, 11, 28, "FormalTextInputFormula",
   CellTags->{
    "ID:822628176", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
   CellID->822628176]},
 "9"->{
  Cell[113869, 2896, 1173, 29, 40, "FormalTextInputFormula",
   CellTags->{
    "ID:412145113", 
     "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
   CellID->412145113]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ID:1242901413", 447741, 11224},
 {"ID:1346427776", 447953, 11230},
 {"ID:1421485859", 448165, 11236},
 {"ID:1491028062", 448377, 11242},
 {"ID:1636935908", 448589, 11248},
 {"ID:1874491785", 448800, 11254},
 {"ID:330716980", 449011, 11260},
 {"ID:412145113", 449219, 11266},
 {"ID:822628176", 449432, 11272},
 {"Info3537267044-9498034", 449651, 11278},
 {"Info3537797754-1263895", 449891, 11285},
 {"Proof:(7)", 450119, 11292},
 {"Proof:(8)", 450229, 11296},
 {"Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", 450387, 11300},
 {"1", 452111, 11346},
 {"10", 452311, 11352},
 {"3", 452511, 11358},
 {"4", 452708, 11364},
 {"5", 452908, 11370},
 {"6", 453108, 11376},
 {"7", 453308, 11382},
 {"8", 453508, 11388},
 {"9", 453706, 11394}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 114, 2, 74, "Section",
 CellID->1677594751],
Cell[696, 26, 156, 3, 29, "GlobalDeclaration",
 CellID->993326560],
Cell[CellGroupData[{
Cell[877, 33, 58, 1, 38, "OpenEnvironment",
 CellID->1372089959],
Cell[938, 36, 185, 4, 21, "EnvironmentDeclaration",
 CellID->1326837667],
Cell[1126, 42, 551, 15, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1636935908", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "1"},
 CellID->1636935908],
Cell[1680, 59, 940, 26, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1242901413", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "10"},
 CellID->1242901413],
Cell[2623, 87, 592, 15, 32, "FormalTextInputFormula",
 CellTags->{
  "ID:330716980", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "3"},
 CellID->330716980],
Cell[3218, 104, 730, 18, 27, "FormalTextInputFormula",
 CellTags->{
  "ID:1346427776", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "4"},
 CellID->1346427776],
Cell[3951, 124, 584, 14, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:1421485859", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "5"},
 CellID->1421485859],
Cell[4538, 140, 604, 14, 29, "FormalTextInputFormula",
 CellTags->{
  "ID:1874491785", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "6"},
 CellID->1874491785],
Cell[5145, 156, 688, 16, 29, "FormalTextInputFormula",
 CellTags->{
  "ID:1491028062", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "7"},
 CellID->1491028062],
Cell[5836, 174, 415, 11, 28, "FormalTextInputFormula",
 CellTags->{
  "ID:822628176", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "8"},
 CellID->822628176],
Cell[6254, 187, 65, 1, 24, "EndEnvironmentMarker",
 CellID->338734751]
}, Open  ]],
Cell[6334, 191, 48, 1, 10, "CloseEnvironment",
 CellID->862514851],
Cell[CellGroupData[{
Cell[6407, 196, 78, 2, 21, "OpenProof",
 CellTags->"Proof:(8)",
 CellID->1355865205],
Cell[CellGroupData[{
Cell[6510, 202, 8472, 184, 32, "ProofDisplay",
 CellID->174572013],
Cell[14985, 388, 14633, 339, 104, "ProofInfo",
 CellID->1079949544]
}, Open  ]],
Cell[29633, 730, 56, 1, 24, "CloseProof",
 CellID->723795043]
}, Open  ]],
Cell[CellGroupData[{
Cell[29726, 736, 78, 2, 21, "OpenProof",
 CellTags->"Proof:(7)",
 CellID->1505203964],
Cell[CellGroupData[{
Cell[29829, 742, 9058, 198, 31, "ProofDisplay",
 CellID->405948738],
Cell[38890, 942, 14894, 345, 15, "ProofInfo",
 CellID->296346841]
}, Open  ]],
Cell[53799, 1290, 55, 1, 24, "CloseProof",
 CellID->62855072]
}, Open  ]],
Cell[CellGroupData[{
Cell[53891, 1296, 1179, 34, 46, "Input",
 CellID->2958440],
Cell[55073, 1332, 934, 26, 30, "Output",
 CellID->1113415141]
}, Open  ]],
Cell[56022, 1361, 286, 7, 30, "Input",
 CellID->1693425372],
Cell[56311, 1370, 419, 10, 30, "Input",
 CellID->950168092],
Cell[56733, 1382, 447, 10, 50, "Input",
 CellID->1604745324],
Cell[CellGroupData[{
Cell[57205, 1396, 208, 4, 30, "Input",
 CellID->1384747800],
Cell[57416, 1402, 156, 4, 30, "Output",
 CellID->1447158141]
}, Open  ]],
Cell[CellGroupData[{
Cell[57609, 1411, 243, 5, 30, "Input",
 CellID->427811824],
Cell[57855, 1418, 614, 17, 43, "Output",
 CellID->1350215185]
}, Open  ]],
Cell[CellGroupData[{
Cell[58506, 1440, 192, 3, 30, "Input",
 CellID->295057353],
Cell[58701, 1445, 8702, 237, 503, "Output",
 CellID->121480978]
}, Closed]],
Cell[CellGroupData[{
Cell[67440, 1687, 402, 11, 63, "Input",
 CellID->1410318279],
Cell[67845, 1700, 675, 17, 30, "Output",
 CellID->249848786]
}, Open  ]],
Cell[CellGroupData[{
Cell[68557, 1722, 223, 4, 50, "Input",
 CellID->881736748],
Cell[68783, 1728, 4360, 116, 153, "Output",
 CellID->1908721365]
}, Open  ]],
Cell[73158, 1847, 250, 5, 30, "Input",
 CellID->1972978571],
Cell[CellGroupData[{
Cell[73433, 1856, 235, 6, 30, "Input",
 CellID->1182975562],
Cell[73671, 1864, 738, 22, 39, "Output",
 CellID->1873252243]
}, Open  ]],
Cell[CellGroupData[{
Cell[74446, 1891, 169, 3, 30, "Input",
 CellID->2024511036],
Cell[74618, 1896, 154, 4, 30, "Output",
 CellID->229083148]
}, Open  ]],
Cell[CellGroupData[{
Cell[74809, 1905, 346, 9, 30, "Input",
 CellID->1334634079],
Cell[75158, 1916, 376, 10, 30, "Output",
 CellID->132241000]
}, Open  ]],
Cell[CellGroupData[{
Cell[75571, 1931, 230, 5, 30, "Input",
 CellID->33279098],
Cell[75804, 1938, 347, 11, 30, "Output",
 CellID->291169334]
}, Open  ]],
Cell[76166, 1952, 424, 9, 30, "Input",
 CellID->480980070],
Cell[76593, 1963, 180, 4, 30, "Input",
 CellID->645489744],
Cell[CellGroupData[{
Cell[76798, 1971, 166, 3, 30, "Input",
 CellID->1955273032],
Cell[CellGroupData[{
Cell[76989, 1978, 166, 3, 42, "Print",
 CellTags->"Info3537267044-9498034",
 CellID->2079055498],
Cell[77158, 1983, 2948, 80, 210, "Print",
 CellTags->"Info3537267044-9498034",
 CellID->167383793]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80155, 2069, 145, 3, 23, "Computation",
 CellID->1598371377],
Cell[80303, 2074, 9812, 235, 15, "ComputationInfo",
 CellID->1352352921],
Cell[90118, 2311, 175, 4, 15, "ComputationResult",
 CellID->643795566]
}, Open  ]],
Cell[CellGroupData[{
Cell[90330, 2320, 147, 3, 23, "Computation",
 CellID->2055778761],
Cell[90480, 2325, 10062, 239, 15, "ComputationInfo",
 CellID->1852473898],
Cell[100545, 2566, 149, 3, 15, "ComputationResult",
 CellID->1919405636]
}, Open  ]],
Cell[CellGroupData[{
Cell[100731, 2574, 162, 3, 30, "Input",
 CellID->1919494902],
Cell[100896, 2579, 6389, 187, 550, "Output",
 CellID->1808714492]
}, Closed]],
Cell[CellGroupData[{
Cell[107322, 2771, 239, 4, 24, "Input",
 CellID->2119150181],
Cell[107564, 2777, 5944, 104, 1630, "Output",
 CellID->1960048507]
}, Closed]],
Cell[CellGroupData[{
Cell[113545, 2886, 58, 1, 38, "OpenEnvironment",
 CellID->1770062998],
Cell[113606, 2889, 260, 5, 29, "EnvironmentDeclaration",
 CellID->1574886120],
Cell[113869, 2896, 1173, 29, 40, "FormalTextInputFormula",
 CellTags->{
  "ID:412145113", 
   "Source:/home/wwindste/Theorema.2/Theorema/Test/Language.nb", "9"},
 CellID->412145113],
Cell[115045, 2927, 66, 1, 24, "EndEnvironmentMarker",
 CellID->1300223080]
}, Open  ]],
Cell[115126, 2931, 49, 1, 10, "CloseEnvironment",
 CellID->1068241259],
Cell[CellGroupData[{
Cell[115200, 2936, 167, 3, 30, "Input",
 CellID->1391707244],
Cell[115370, 2941, 1279, 23, 270, "Output",
 CellID->1801149363]
}, Open  ]],
Cell[CellGroupData[{
Cell[116686, 2969, 215, 4, 30, "Input",
 CellID->2124154183],
Cell[CellGroupData[{
Cell[116926, 2977, 166, 3, 42, "Print",
 CellTags->"Info3537797754-1263895",
 CellID->1829647063],
Cell[117095, 2982, 1568, 44, 62, "Print",
 CellTags->"Info3537797754-1263895",
 CellID->462990777]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118712, 3032, 320, 7, 30, "Input",
 CellID->209530079],
Cell[119035, 3041, 1085, 24, 318, "Output",
 CellID->389968434]
}, Open  ]],
Cell[CellGroupData[{
Cell[120157, 3070, 266, 6, 23, "Computation",
 CellID->205321431],
Cell[120426, 3078, 10399, 244, 15, "ComputationInfo",
 CellID->145907014],
Cell[130828, 3324, 389, 8, 15, "ComputationResult",
 CellID->75449909]
}, Open  ]],
Cell[CellGroupData[{
Cell[131254, 3337, 240, 5, 23, "Computation",
 CellID->2121083924],
Cell[131497, 3344, 10640, 247, 15, "ComputationInfo",
 CellID->1059552853],
Cell[142140, 3593, 529, 15, 15, "ComputationResult",
 CellID->2095423814]
}, Open  ]],
Cell[CellGroupData[{
Cell[142706, 3613, 266, 6, 23, "Computation",
 CellID->533105519],
Cell[142975, 3621, 10603, 248, 15, "ComputationInfo",
 CellID->1891617822],
Cell[153581, 3871, 520, 17, 15, "ComputationResult",
 CellID->704956368]
}, Open  ]],
Cell[CellGroupData[{
Cell[154138, 3893, 292, 6, 23, "Computation",
 CellID->1034884285],
Cell[154433, 3901, 10610, 247, 15, "ComputationInfo",
 CellID->378452402],
Cell[165046, 4150, 146, 3, 15, "ComputationResult",
 CellID->2025778815]
}, Open  ]],
Cell[CellGroupData[{
Cell[165229, 4158, 291, 5, 30, "Input",
 CellID->487953714],
Cell[165523, 4165, 308, 5, 30, "Output",
 CellID->134672363]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165880, 4176, 117, 2, 74, "Section",
 CellID->1498334619],
Cell[CellGroupData[{
Cell[166022, 4182, 429, 10, 29, "Computation",
 CellID->98487382],
Cell[166454, 4194, 9812, 235, 15, "ComputationInfo",
 CellID->1479163346],
Cell[176269, 4431, 363, 12, 24, "ComputationResult",
 CellID->1504671994]
}, Open  ]],
Cell[CellGroupData[{
Cell[176669, 4448, 241, 7, 29, "Computation",
 CellID->1791385580],
Cell[176913, 4457, 9810, 235, 15, "ComputationInfo",
 CellID->14065605],
Cell[186726, 4694, 385, 12, 24, "ComputationResult",
 CellID->1201509063]
}, Open  ]],
Cell[CellGroupData[{
Cell[187148, 4711, 315, 9, 29, "Computation",
 CellID->1674073568],
Cell[187466, 4722, 9811, 235, 15, "ComputationInfo",
 CellID->449726254],
Cell[197280, 4959, 515, 13, 15, "ComputationResult",
 CellID->754137009]
}, Open  ]],
Cell[CellGroupData[{
Cell[197832, 4977, 315, 9, 29, "Computation",
 CellID->1845651749],
Cell[198150, 4988, 9776, 235, 15, "ComputationInfo",
 CellID->108509328],
Cell[207929, 5225, 412, 13, 24, "ComputationResult",
 CellID->737506521]
}, Open  ]],
Cell[CellGroupData[{
Cell[208378, 5243, 390, 11, 33, "Computation",
 CellID->1431049582],
Cell[208771, 5256, 9811, 235, 15, "ComputationInfo",
 CellID->1185581040],
Cell[218585, 5493, 319, 8, 15, "ComputationResult",
 CellID->582741343]
}, Open  ]],
Cell[CellGroupData[{
Cell[218941, 5506, 336, 9, 29, "Computation",
 CellID->203455808],
Cell[219280, 5517, 9810, 235, 15, "ComputationInfo",
 CellID->145952955],
Cell[229093, 5754, 336, 8, 15, "ComputationResult",
 CellID->1753205452]
}, Open  ]],
Cell[CellGroupData[{
Cell[229466, 5767, 384, 10, 29, "Computation",
 CellID->30211731],
Cell[229853, 5779, 9812, 235, 15, "ComputationInfo",
 CellID->2129720458],
Cell[239668, 6016, 409, 13, 24, "ComputationResult",
 CellID->754575839]
}, Open  ]],
Cell[CellGroupData[{
Cell[240114, 6034, 341, 10, 29, "Computation",
 CellID->1873687787],
Cell[240458, 6046, 9812, 235, 15, "ComputationInfo",
 CellID->1253293235],
Cell[250273, 6283, 541, 14, 15, "ComputationResult",
 CellID->1218379290]
}, Open  ]],
Cell[CellGroupData[{
Cell[250851, 6302, 340, 10, 29, "Computation",
 CellID->811697226],
Cell[251194, 6314, 9777, 235, 15, "ComputationInfo",
 CellID->1518608613],
Cell[260974, 6551, 436, 14, 24, "ComputationResult",
 CellID->825684985]
}, Open  ]],
Cell[CellGroupData[{
Cell[261447, 6570, 142, 3, 23, "Computation",
 CellID->1011115407],
Cell[261592, 6575, 9776, 235, 15, "ComputationInfo",
 CellID->445048633],
Cell[271371, 6812, 196, 4, 15, "ComputationResult",
 CellID->1204156752]
}, Open  ]],
Cell[CellGroupData[{
Cell[271604, 6821, 141, 3, 23, "Computation",
 CellID->277393357],
Cell[271748, 6826, 9812, 235, 15, "ComputationInfo",
 CellID->1246334821],
Cell[281563, 7063, 148, 3, 15, "ComputationResult",
 CellID->280699869]
}, Open  ]],
Cell[CellGroupData[{
Cell[281748, 7071, 439, 12, 33, "Computation",
 CellID->2073870508],
Cell[282190, 7085, 9812, 235, 15, "ComputationInfo",
 CellID->1700297099],
Cell[292005, 7322, 332, 9, 15, "ComputationResult",
 CellID->778293369]
}, Open  ]],
Cell[CellGroupData[{
Cell[292374, 7336, 805, 21, 41, "Computation",
 CellID->1152856210],
Cell[293182, 7359, 9776, 235, 15, "ComputationInfo",
 CellID->960157500],
Cell[302961, 7596, 2100, 55, 36, "ComputationResult",
 CellID->690517246]
}, Open  ]],
Cell[CellGroupData[{
Cell[305098, 7656, 256, 7, 30, "Computation",
 CellID->1615862783],
Cell[305357, 7665, 9776, 235, 15, "ComputationInfo",
 CellID->944167556],
Cell[315136, 7902, 203, 4, 15, "ComputationResult",
 CellID->1238531527]
}, Open  ]],
Cell[CellGroupData[{
Cell[315376, 7911, 297, 8, 30, "Computation",
 CellID->1201037010],
Cell[315676, 7921, 9775, 235, 15, "ComputationInfo",
 CellID->540673537],
Cell[325454, 8158, 128, 2, 15, "ComputationResult",
 CellID->807696050]
}, Open  ]],
Cell[CellGroupData[{
Cell[325619, 8165, 273, 7, 30, "Computation",
 CellID->921769592],
Cell[325895, 8174, 9777, 235, 15, "ComputationInfo",
 CellID->1465305827],
Cell[335675, 8411, 104, 2, 15, "ComputationResult",
 CellID->168737142]
}, Open  ]],
Cell[CellGroupData[{
Cell[335816, 8418, 449, 12, 41, "Computation",
 CellID->165054078],
Cell[336268, 8432, 9777, 235, 15, "ComputationInfo",
 CellID->1604596859],
Cell[346048, 8669, 200, 4, 15, "ComputationResult",
 CellID->244870717]
}, Open  ]],
Cell[CellGroupData[{
Cell[346285, 8678, 495, 12, 43, "Computation",
 CellID->514390584],
Cell[346783, 8692, 9777, 235, 15, "ComputationInfo",
 CellID->1113360533],
Cell[356563, 8929, 695, 23, 18, "ComputationResult",
 CellID->1682361377]
}, Open  ]],
Cell[CellGroupData[{
Cell[357295, 8957, 521, 12, 43, "Computation",
 CellID->1089040068],
Cell[357819, 8971, 9777, 235, 15, "ComputationInfo",
 CellID->1098517706],
Cell[367599, 9208, 438, 15, 18, "ComputationResult",
 CellID->902180314]
}, Open  ]],
Cell[CellGroupData[{
Cell[368074, 9228, 737, 18, 40, "Computation",
 CellID->1030427555],
Cell[368814, 9248, 9812, 235, 15, "ComputationInfo",
 CellID->2099805360],
Cell[378629, 9485, 102, 2, 15, "ComputationResult",
 CellID->993919463]
}, Open  ]],
Cell[CellGroupData[{
Cell[378768, 9492, 725, 18, 40, "Computation",
 CellID->626819530],
Cell[379496, 9512, 9811, 235, 15, "ComputationInfo",
 CellID->1982206321],
Cell[389310, 9749, 105, 2, 15, "ComputationResult",
 CellID->468602894]
}, Open  ]],
Cell[CellGroupData[{
Cell[389452, 9756, 829, 20, 40, "Computation",
 CellID->1118177723],
Cell[390284, 9778, 9812, 235, 15, "ComputationInfo",
 CellID->1426088242],
Cell[400099, 10015, 106, 2, 15, "ComputationResult",
 CellID->1300723109]
}, Open  ]],
Cell[CellGroupData[{
Cell[400242, 10022, 802, 19, 40, "Computation",
 CellID->2063520275],
Cell[401047, 10043, 9811, 235, 15, "ComputationInfo",
 CellID->663247889],
Cell[410861, 10280, 376, 11, 15, "ComputationResult",
 CellID->725979512]
}, Open  ]],
Cell[CellGroupData[{
Cell[411274, 10296, 828, 20, 40, "Computation",
 CellID->941369956],
Cell[412105, 10318, 9812, 235, 15, "ComputationInfo",
 CellID->1592498020],
Cell[421920, 10555, 787, 27, 35, "ComputationResult",
 CellID->1882998958]
}, Open  ]],
Cell[CellGroupData[{
Cell[422744, 10587, 759, 18, 30, "Computation",
 CellID->952406679],
Cell[423506, 10607, 9812, 235, 15, "ComputationInfo",
 CellID->1956997315],
Cell[433321, 10844, 1255, 41, 54, "ComputationResult",
 CellID->515926111]
}, Open  ]],
Cell[CellGroupData[{
Cell[434613, 10890, 790, 19, 30, "Computation",
 CellID->1263723114],
Cell[435406, 10911, 9760, 234, 15, "ComputationInfo",
 CellID->1865004037],
Cell[445169, 11147, 755, 24, 25, "ComputationResult",
 CellID->627422604]
}, Open  ]],
Cell[CellGroupData[{
Cell[445961, 11176, 148, 3, 30, "Input",
 CellID->1834959330],
Cell[446112, 11181, 920, 19, 270, "Output",
 CellID->410332565]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
